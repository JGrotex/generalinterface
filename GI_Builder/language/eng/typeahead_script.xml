<?xml version="1.0" encoding="UTF-8"?>
<data jsxassignids="1" jsxid="jsxroot">
  <record jsxtext="jsx3.app">
    <record jsxtext="AddIn">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="PROTOTYPES_DIR" syntax="jsx3.app.AddIn.PROTOTYPES_DIR"/>
      </record>
      <record jsxtext="getDescription()" syntax="getDescription()"/>
      <record jsxtext="getId()" syntax="getId()"/>
      <record jsxtext="getKey()" syntax="getKey()"/>
      <record jsxtext="getName()" syntax="getName()"/>
      <record jsxtext="getSettings()" syntax="getSettings()"/>
      <record jsxtext="getUriPrefix()" syntax="getUriPrefix()"/>
      <record jsxtext="getVersion()" syntax="getVersion()"/>
      <record jsxtext="relativizeURI()" syntax="relativizeURI(strURI,bRel)"/>
      <record jsxtext="resolveURI()" syntax="resolveURI(strURI)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="Cache">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ADD" syntax="jsx3.app.Cache.ADD"/>
        <record jsxtext="ASYNC_TIMEOUT" syntax="jsx3.app.Cache.ASYNC_TIMEOUT"/>
        <record jsxtext="CHANGE" syntax="jsx3.app.Cache.CHANGE"/>
        <record jsxtext="REMOVE" syntax="jsx3.app.Cache.REMOVE"/>
        <record jsxtext="XSDNS" syntax="jsx3.app.Cache.XSDNS"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.app.Cache()" syntax="new jsx3.app.Cache()"/>
      <record jsxtext="clearById()" syntax="clearById(strId)"/>
      <record jsxtext="clearByTimestamp()" syntax="clearByTimestamp(intTimestamp)"/>
      <record jsxtext="destroy()" syntax="destroy()"/>
      <record jsxtext="getDocument()" syntax="getDocument(strId)"/>
      <record jsxtext="getOrOpenAsync()" syntax="getOrOpenAsync(strURL,strId,objClass)"/>
      <record jsxtext="getOrOpenDocument()" syntax="getOrOpenDocument(strURL,strId,objClass)"/>
      <record jsxtext="getTimestamp()" syntax="getTimestamp(strId)"/>
      <record jsxtext="keys()" syntax="keys()"/>
      <record jsxtext="openDocument()" syntax="openDocument(strURL,strId,objClass)"/>
      <record jsxtext="setDocument()" syntax="setDocument(strId,objDocument)"/>
    </record>
    <record jsxtext="DOM">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="TYPEADD" syntax="jsx3.app.DOM.TYPEADD"/>
        <record jsxtext="TYPEREARRANGE" syntax="jsx3.app.DOM.TYPEREARRANGE"/>
        <record jsxtext="TYPEREMOVE" syntax="jsx3.app.DOM.TYPEREMOVE"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="newId()" syntax="jsx3.app.DOM.newId(strNameSpace)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.app.DOM()" syntax="new jsx3.app.DOM()"/>
      <record jsxtext="add()" syntax="add(objJSX)"/>
      <record jsxtext="destroy()" syntax="destroy()"/>
      <record jsxtext="get()" syntax="get(strId)"/>
      <record jsxtext="getAllByName()" syntax="getAllByName(strName)"/>
      <record jsxtext="getById()" syntax="getById(strId)"/>
      <record jsxtext="getByName()" syntax="getByName(strName)"/>
      <record jsxtext="onChange()" syntax="onChange(TYPE,JSXPARENTID,JSXID)"/>
      <record jsxtext="onNameChange()" syntax="onNameChange(objJSX,oldName)"/>
      <record jsxtext="remove()" syntax="remove(objJSX)"/>
    </record>
    <record jsxtext="Model">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ASYNC_LOAD_TIMEOUT" syntax="jsx3.app.Model.ASYNC_LOAD_TIMEOUT"/>
        <record jsxtext="CIF_VERSION" syntax="jsx3.app.Model.CIF_VERSION"/>
        <record jsxtext="CURRENT_VERSION" syntax="jsx3.app.Model.CURRENT_VERSION"/>
        <record jsxtext="LT_NORMAL" syntax="jsx3.app.Model.LT_NORMAL"/>
        <record jsxtext="LT_SHOW_DESER" syntax="jsx3.app.Model.LT_SHOW_DESER"/>
        <record jsxtext="LT_SHOW_PAINT" syntax="jsx3.app.Model.LT_SHOW_PAINT"/>
        <record jsxtext="LT_SLEEP_DESER" syntax="jsx3.app.Model.LT_SLEEP_DESER"/>
        <record jsxtext="LT_SLEEP_PAINT" syntax="jsx3.app.Model.LT_SLEEP_PAINT"/>
        <record jsxtext="LT_SLEEP_PD" syntax="jsx3.app.Model.LT_SLEEP_PD"/>
        <record jsxtext="META_FIELDS" syntax="jsx3.app.Model.META_FIELDS"/>
        <record jsxtext="PERSISTEMBED" syntax="jsx3.app.Model.PERSISTEMBED"/>
        <record jsxtext="PERSISTNONE" syntax="jsx3.app.Model.PERSISTNONE"/>
        <record jsxtext="PERSISTREF" syntax="jsx3.app.Model.PERSISTREF"/>
        <record jsxtext="PERSISTREFASYNC" syntax="jsx3.app.Model.PERSISTREFASYNC"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.app.Model()" syntax="new jsx3.app.Model(strName,strInstanceOf)"/>
      <record jsxtext="adoptChild()" syntax="adoptChild(objChild,bRepaint,bForce)"/>
      <record jsxtext="assembleFromXML()" syntax="assembleFromXML(objElm)"/>
      <record jsxtext="doClone()" syntax="doClone(intPersist,intMode)"/>
      <record jsxtext="findAncestor()" syntax="findAncestor(fctTest,bIncludeSelf)"/>
      <record jsxtext="findDescendants()" syntax="findDescendants(fctTest,bDepthFirst,bMultiple,bShallow,bIncludeSelf)"/>
      <record jsxtext="getAncestorOfName()" syntax="getAncestorOfName(strName)"/>
      <record jsxtext="getAncestorOfType()" syntax="getAncestorOfType(strType)"/>
      <record jsxtext="getChild()" syntax="getChild(vntIndexOrName)"/>
      <record jsxtext="getChildIndex()" syntax="getChildIndex()"/>
      <record jsxtext="getChildren()" syntax="getChildren()"/>
      <record jsxtext="getDescendantOfName()" syntax="getDescendantOfName(strName,bDepthFirst,bChildOnly)"/>
      <record jsxtext="getDescendantsOfType()" syntax="getDescendantsOfType(strType,bShallow)"/>
      <record jsxtext="getDynamicProperty()" syntax="getDynamicProperty(strName)"/>
      <record jsxtext="getFirstChild()" syntax="getFirstChild()"/>
      <record jsxtext="getFirstChildOfType()" syntax="getFirstChildOfType(strType,bExact)"/>
      <record jsxtext="getHelpId()" syntax="getHelpId()"/>
      <record jsxtext="getId()" syntax="getId()"/>
      <record jsxtext="getLastChild()" syntax="getLastChild()"/>
      <record jsxtext="getLoadType()" syntax="getLoadType()"/>
      <record jsxtext="getMetaValue()" syntax="getMetaValue(strKey)"/>
      <record jsxtext="getNS()" syntax="getNS()"/>
      <record jsxtext="getName()" syntax="getName()"/>
      <record jsxtext="getNextSibling()" syntax="getNextSibling()"/>
      <record jsxtext="getParent()" syntax="getParent()"/>
      <record jsxtext="getPersistence()" syntax="getPersistence()"/>
      <record jsxtext="getPreviousSibling()" syntax="getPreviousSibling()"/>
      <record jsxtext="getServer()" syntax="getServer()"/>
      <record jsxtext="getUriResolver()" syntax="getUriResolver()"/>
      <record jsxtext="insertBefore()" syntax="insertBefore(objMoveChild,objPrecedeChild,bRepaint)"/>
      <record jsxtext="load()" syntax="load(strURL,bRepaint,objResolver)"/>
      <record jsxtext="loadAndCache()" syntax="loadAndCache(strURL,bRepaint,objCache,objResolver)"/>
      <record jsxtext="loadXML()" syntax="loadXML(strXML,bRepaint,objResolver)"/>
      <record jsxtext="onAfterAssemble()" syntax="onAfterAssemble(objParent,objServer)"/>
      <record jsxtext="onAfterAttach()" syntax="onAfterAttach()"/>
      <record jsxtext="onBeforeAssemble()" syntax="onBeforeAssemble(objParent,objServer)"/>
      <record jsxtext="onChangeServer()" syntax="onChangeServer(objNewServer,objOldServer)"/>
      <record jsxtext="onChildAdded()" syntax="onChildAdded(objChild)"/>
      <record jsxtext="onDestroy()" syntax="onDestroy(objParent)"/>
      <record jsxtext="onRemoveChild()" syntax="onRemoveChild(objChild,intIndex)"/>
      <record jsxtext="onSetChild()" syntax="onSetChild(objChild)"/>
      <record jsxtext="onSetParent()" syntax="onSetParent(objParent)"/>
      <record jsxtext="removeChild()" syntax="removeChild(vntItem)"/>
      <record jsxtext="removeChildren()" syntax="removeChildren(arrChildren)"/>
      <record jsxtext="selectDescendants()" syntax="selectDescendants(strExpr,bSingle)"/>
      <record jsxtext="setChild()" syntax="setChild(objChild,intPersist,strSourceURL,strNS)"/>
      <record jsxtext="setDynamicProperty()" syntax="setDynamicProperty(strName,strValue,bNoSave)"/>
      <record jsxtext="setHelpId()" syntax="setHelpId(strId)"/>
      <record jsxtext="setLoadType()" syntax="setLoadType(intLoadType)"/>
      <record jsxtext="setMetaValue()" syntax="setMetaValue(strKey,strValue)"/>
      <record jsxtext="setName()" syntax="setName(strName)"/>
      <record jsxtext="setPersistence()" syntax="setPersistence(intPersist)"/>
      <record jsxtext="toString()" syntax="toString()"/>
      <record jsxtext="toXML()" syntax="toXML(objProperties)"/>
      <record jsxtext="toXMLDoc()" syntax="toXMLDoc(objProperties)"/>
      <record jsxtext="toXMLElm()" syntax="toXMLElm(objXML,objProperties)"/>
    </record>
    <record jsxtext="Monitor">
      <record jsxtext="&amp;middot; new jsx3.app.Monitor()" syntax="new jsx3.app.Monitor(strName)"/>
      <record jsxtext="getActivateOnHotKey()" syntax="getActivateOnHotKey()"/>
      <record jsxtext="getDisableInIDE()" syntax="getDisableInIDE()"/>
      <record jsxtext="getServerNamespace()" syntax="getServerNamespace()"/>
      <record jsxtext="handle()" syntax="handle(objRecord)"/>
      <record jsxtext="setActivateOnHotKey()" syntax="setActivateOnHotKey(activateOnHotKey)"/>
      <record jsxtext="setDisableInIDE()" syntax="setDisableInIDE(disableInIDE)"/>
      <record jsxtext="setServerNamespace()" syntax="setServerNamespace(serverNamespace)"/>
    </record>
    <record jsxtext="Properties">
      <record jsxtext="&amp;middot; new jsx3.app.Properties()" syntax="new jsx3.app.Properties()"/>
      <record jsxtext="addParent()" syntax="addParent(objParent)"/>
      <record jsxtext="containsKey()" syntax="containsKey(strKey)"/>
      <record jsxtext="get()" syntax="get(strKey)"/>
      <record jsxtext="getKeys()" syntax="getKeys()"/>
      <record jsxtext="getParents()" syntax="getParents()"/>
      <record jsxtext="loadXML()" syntax="loadXML(objXML,strId)"/>
      <record jsxtext="remove()" syntax="remove(strKey)"/>
      <record jsxtext="removeAllParents()" syntax="removeAllParents()"/>
      <record jsxtext="removeParent()" syntax="removeParent(objParent)"/>
      <record jsxtext="set()" syntax="set(strKey,strValue)"/>
    </record>
    <record jsxtext="PropsBundle">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="clearCache()" syntax="jsx3.app.PropsBundle.clearCache(strPath,objCache)"/>
        <record jsxtext="getProps()" syntax="jsx3.app.PropsBundle.getProps(strBasePath,objLocale,objCache)"/>
        <record jsxtext="getPropsAsync()" syntax="jsx3.app.PropsBundle.getPropsAsync(strBasePath,objLocale,fctCallback,objCache)"/>
        <record jsxtext="getPropsFT()" syntax="jsx3.app.PropsBundle.getPropsFT(strBasePath,objLocale,objCache)"/>
      </record>
      <record jsxtext="getLocale()" syntax="getLocale()"/>
      <record jsxtext="getPath()" syntax="getPath()"/>
    </record>
    <record jsxtext="Server">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="HELP" syntax="jsx3.app.Server.HELP"/>
        <record jsxtext="INITED" syntax="jsx3.app.Server.INITED"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.app.Server()" syntax="new jsx3.app.Server(strAppPath,objGUI,bPaint,objEnv)"/>
      <record jsxtext="createAppWindow()" syntax="createAppWindow(strName)"/>
      <record jsxtext="deleteCookie()" syntax="deleteCookie(name,path,domain)"/>
      <record jsxtext="destroy()" syntax="destroy()"/>
      <record jsxtext="getAlertsParent()" syntax="getAlertsParent()"/>
      <record jsxtext="getAppWindow()" syntax="getAppWindow(strName)"/>
      <record jsxtext="getBodyBlock()" syntax="getBodyBlock()"/>
      <record jsxtext="getCache()" syntax="getCache()"/>
      <record jsxtext="getCookie()" syntax="getCookie(name,bRaw)"/>
      <record jsxtext="getDOM()" syntax="getDOM()"/>
      <record jsxtext="getDefaultLocale()" syntax="getDefaultLocale()"/>
      <record jsxtext="getDocumentOf()" syntax="getDocumentOf(objJSX)"/>
      <record jsxtext="getDynamicProperty()" syntax="getDynamicProperty(strPropName,strToken)"/>
      <record jsxtext="getEnv()" syntax="getEnv(strEnvKey)"/>
      <record jsxtext="getJSX()" syntax="getJSX(strId)"/>
      <record jsxtext="getJSXById()" syntax="getJSXById(strId)"/>
      <record jsxtext="getJSXByName()" syntax="getJSXByName(strId)"/>
      <record jsxtext="getLocale()" syntax="getLocale()"/>
      <record jsxtext="getProperties()" syntax="getProperties()"/>
      <record jsxtext="getRenderedOf()" syntax="getRenderedOf(objJSX)"/>
      <record jsxtext="getRootBlock()" syntax="getRootBlock()"/>
      <record jsxtext="getRootObjects()" syntax="getRootObjects()"/>
      <record jsxtext="getSettings()" syntax="getSettings()"/>
      <record jsxtext="getTaskBar()" syntax="getTaskBar(objJSX)"/>
      <record jsxtext="getUriPrefix()" syntax="getUriPrefix()"/>
      <record jsxtext="invokeHelp()" syntax="invokeHelp(objJSX)"/>
      <record jsxtext="loadAppWindow()" syntax="loadAppWindow(strSource,objResolver)"/>
      <record jsxtext="loadInclude()" syntax="loadInclude(strSrc,strId,strType,bReload)"/>
      <record jsxtext="loadResource()" syntax="loadResource(strId)"/>
      <record jsxtext="paint()" syntax="paint(objXML)"/>
      <record jsxtext="relativizeURI()" syntax="relativizeURI(strURI,bRel)"/>
      <record jsxtext="reloadLocalizedResources()" syntax="reloadLocalizedResources()"/>
      <record jsxtext="resolveURI()" syntax="resolveURI(strURI)"/>
      <record jsxtext="setCookie()" syntax="setCookie(name,value,expires,path,domain,secure,bRaw)"/>
      <record jsxtext="setDimensions()" syntax="setDimensions(left,top,width,height)"/>
      <record jsxtext="setDynamicProperty()" syntax="setDynamicProperty(strPropName,vntValue)"/>
      <record jsxtext="setLocale()" syntax="setLocale(objLocale)"/>
      <record jsxtext="toString()" syntax="toString()"/>
      <record jsxtext="unloadInclude()" syntax="unloadInclude(strId)"/>
    </record>
    <record jsxtext="Settings">
      <record jsxtext="&amp;middot; new jsx3.app.Settings()" syntax="new jsx3.app.Settings(objXML)"/>
      <record jsxtext="get()" syntax="get(strKey)"/>
      <record jsxtext="getNode()" syntax="getNode(strKey)"/>
      <record jsxtext="remove()" syntax="remove(strKey)"/>
      <record jsxtext="set()" syntax="set(strKey,value)"/>
    </record>
    <record jsxtext="UserSettings">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="PERSIST_INDEFINITE" syntax="jsx3.app.UserSettings.PERSIST_INDEFINITE"/>
        <record jsxtext="PERSIST_SESSION" syntax="jsx3.app.UserSettings.PERSIST_SESSION"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.app.UserSettings()" syntax="new jsx3.app.UserSettings(objServer,intPersistence)"/>
      <record jsxtext="clear()" syntax="clear()"/>
      <record jsxtext="get()" syntax="get(strKey)"/>
      <record jsxtext="remove()" syntax="remove(strKey)"/>
      <record jsxtext="save()" syntax="save()"/>
      <record jsxtext="set()" syntax="set(strKey,value)"/>
    </record>
  </record>
  <record jsxtext="jsx3.chart">
    <record jsxtext="&amp;middot; Static Fields">
      <record jsxtext="QBOTTOM" syntax="jsx3.chart.QBOTTOM"/>
      <record jsxtext="QLEFT" syntax="jsx3.chart.QLEFT"/>
      <record jsxtext="QRIGHT" syntax="jsx3.chart.QRIGHT"/>
      <record jsxtext="QTOP" syntax="jsx3.chart.QTOP"/>
    </record>
    <record jsxtext="&amp;middot; Static Methods">
      <record jsxtext="addGradient()" syntax="jsx3.chart.addGradient(fill,value)"/>
      <record jsxtext="asNumber()" syntax="jsx3.chart.asNumber(v)"/>
      <record jsxtext="isCategoryAxis()" syntax="jsx3.chart.isCategoryAxis(obj)"/>
      <record jsxtext="isValueAxis()" syntax="jsx3.chart.isValueAxis(obj)"/>
      <record jsxtext="parseGradient()" syntax="jsx3.chart.parseGradient(value)"/>
      <record jsxtext="splitBox()" syntax="jsx3.chart.splitBox(left,top,width,height,placement,w,h)"/>
    </record>
    <record jsxtext="AreaChart">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="TYPE_OVERLAY" syntax="jsx3.chart.AreaChart.TYPE_OVERLAY"/>
        <record jsxtext="TYPE_STACKED" syntax="jsx3.chart.AreaChart.TYPE_STACKED"/>
        <record jsxtext="TYPE_STACKED100" syntax="jsx3.chart.AreaChart.TYPE_STACKED100"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.AreaChart()" syntax="new jsx3.chart.AreaChart(name,left,top,width,height)"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="getXRange()" syntax="getXRange(series)"/>
      <record jsxtext="getYRange()" syntax="getYRange(series)"/>
      <record jsxtext="setType()" syntax="setType(type)"/>
    </record>
    <record jsxtext="AreaSeries">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="FORM_REVSTEP" syntax="jsx3.chart.AreaSeries.FORM_REVSTEP"/>
        <record jsxtext="FORM_SEGMENT" syntax="jsx3.chart.AreaSeries.FORM_SEGMENT"/>
        <record jsxtext="FORM_STEP" syntax="jsx3.chart.AreaSeries.FORM_STEP"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="tooltip()" syntax="jsx3.chart.AreaSeries.tooltip(series,record)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.chart.AreaSeries()" syntax="new jsx3.chart.AreaSeries(name,seriesName)"/>
      <record jsxtext="getForm()" syntax="getForm()"/>
      <record jsxtext="getMinField()" syntax="getMinField()"/>
      <record jsxtext="getMinValue()" syntax="getMinValue(record)"/>
      <record jsxtext="getPointFill()" syntax="getPointFill()"/>
      <record jsxtext="getPointGradient()" syntax="getPointGradient()"/>
      <record jsxtext="getPointRadius()" syntax="getPointRadius()"/>
      <record jsxtext="getPointRenderer()" syntax="getPointRenderer()"/>
      <record jsxtext="getPointStroke()" syntax="getPointStroke()"/>
      <record jsxtext="getXField()" syntax="getXField()"/>
      <record jsxtext="getXValue()" syntax="getXValue(record)"/>
      <record jsxtext="getYField()" syntax="getYField()"/>
      <record jsxtext="getYValue()" syntax="getYValue(record)"/>
      <record jsxtext="setForm()" syntax="setForm(form)"/>
      <record jsxtext="setMinField()" syntax="setMinField(minField)"/>
      <record jsxtext="setPointFill()" syntax="setPointFill(pointFill)"/>
      <record jsxtext="setPointGradient()" syntax="setPointGradient(pointGradient)"/>
      <record jsxtext="setPointRadius()" syntax="setPointRadius(pointRadius)"/>
      <record jsxtext="setPointRenderer()" syntax="setPointRenderer(pointRenderer)"/>
      <record jsxtext="setPointStroke()" syntax="setPointStroke(pointStroke)"/>
      <record jsxtext="setXField()" syntax="setXField(xField)"/>
      <record jsxtext="setYField()" syntax="setYField(yField)"/>
    </record>
    <record jsxtext="Axis">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="LABEL_AXIS" syntax="jsx3.chart.Axis.LABEL_AXIS"/>
        <record jsxtext="LABEL_HIGH" syntax="jsx3.chart.Axis.LABEL_HIGH"/>
        <record jsxtext="LABEL_LOW" syntax="jsx3.chart.Axis.LABEL_LOW"/>
        <record jsxtext="TICK_CROSS" syntax="jsx3.chart.Axis.TICK_CROSS"/>
        <record jsxtext="TICK_INSIDE" syntax="jsx3.chart.Axis.TICK_INSIDE"/>
        <record jsxtext="TICK_NONE" syntax="jsx3.chart.Axis.TICK_NONE"/>
        <record jsxtext="TICK_OUTSIDE" syntax="jsx3.chart.Axis.TICK_OUTSIDE"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="percent()" syntax="jsx3.chart.Axis.percent(v)"/>
        <record jsxtext="scientific()" syntax="jsx3.chart.Axis.scientific(v,signif)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.chart.Axis()" syntax="new jsx3.chart.Axis(name,horizontal,primary)"/>
      <record jsxtext="getAxisStroke()" syntax="getAxisStroke()"/>
      <record jsxtext="getAxisTitle()" syntax="getAxisTitle()"/>
      <record jsxtext="getDisplayWidth()" syntax="getDisplayWidth()"/>
      <record jsxtext="getHorizontal()" syntax="getHorizontal()"/>
      <record jsxtext="getLabelClass()" syntax="getLabelClass()"/>
      <record jsxtext="getLabelColor()" syntax="getLabelColor()"/>
      <record jsxtext="getLabelFunction()" syntax="getLabelFunction()"/>
      <record jsxtext="getLabelGap()" syntax="getLabelGap()"/>
      <record jsxtext="getLabelStyle()" syntax="getLabelStyle()"/>
      <record jsxtext="getMinorTickDivisions()" syntax="getMinorTickDivisions()"/>
      <record jsxtext="getMinorTickLength()" syntax="getMinorTickLength()"/>
      <record jsxtext="getMinorTickPlacement()" syntax="getMinorTickPlacement()"/>
      <record jsxtext="getMinorTickStroke()" syntax="getMinorTickStroke()"/>
      <record jsxtext="getOpposingAxis()" syntax="getOpposingAxis()"/>
      <record jsxtext="getShowAxis()" syntax="getShowAxis()"/>
      <record jsxtext="getShowLabels()" syntax="getShowLabels()"/>
      <record jsxtext="getTickLength()" syntax="getTickLength()"/>
      <record jsxtext="getTickPlacement()" syntax="getTickPlacement()"/>
      <record jsxtext="getTickStroke()" syntax="getTickStroke()"/>
      <record jsxtext="setAxisStroke()" syntax="setAxisStroke(axisStroke)"/>
      <record jsxtext="setDisplayWidth()" syntax="setDisplayWidth(displayWidth)"/>
      <record jsxtext="setHorizontal()" syntax="setHorizontal(horizontal)"/>
      <record jsxtext="setLabelClass()" syntax="setLabelClass(labelClass)"/>
      <record jsxtext="setLabelColor()" syntax="setLabelColor(labelColor)"/>
      <record jsxtext="setLabelFunction()" syntax="setLabelFunction(labelFunction)"/>
      <record jsxtext="setLabelGap()" syntax="setLabelGap(labelGap)"/>
      <record jsxtext="setLabelPlacement()" syntax="setLabelPlacement(labelPlacement)"/>
      <record jsxtext="setLabelStyle()" syntax="setLabelStyle(labelStyle)"/>
      <record jsxtext="setMinorTickDivisions()" syntax="setMinorTickDivisions(minorTickDivisions)"/>
      <record jsxtext="setMinorTickLength()" syntax="setMinorTickLength(minorTickLength)"/>
      <record jsxtext="setMinorTickPlacement()" syntax="setMinorTickPlacement(minorTickPlacement)"/>
      <record jsxtext="setMinorTickStroke()" syntax="setMinorTickStroke(minorTickStroke)"/>
      <record jsxtext="setShowAxis()" syntax="setShowAxis(showAxis)"/>
      <record jsxtext="setShowLabels()" syntax="setShowLabels(showLabels)"/>
      <record jsxtext="setTickLength()" syntax="setTickLength(tickLength)"/>
      <record jsxtext="setTickPlacement()" syntax="setTickPlacement(tickPlacement)"/>
      <record jsxtext="setTickStroke()" syntax="setTickStroke(tickStroke)"/>
    </record>
    <record jsxtext="BCChart">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="TYPE_CLUSTERED" syntax="jsx3.chart.BCChart.TYPE_CLUSTERED"/>
        <record jsxtext="TYPE_STACKED" syntax="jsx3.chart.BCChart.TYPE_STACKED"/>
        <record jsxtext="TYPE_STACKED100" syntax="jsx3.chart.BCChart.TYPE_STACKED100"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.BCChart()" syntax="new jsx3.chart.BCChart(name,left,top,width,height)"/>
      <record jsxtext="getCategoryCoverage()" syntax="getCategoryCoverage()"/>
      <record jsxtext="getSeriesOverlap()" syntax="getSeriesOverlap()"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="setCategoryCoverage()" syntax="setCategoryCoverage(categoryCoverage)"/>
      <record jsxtext="setSeriesOverlap()" syntax="setSeriesOverlap(seriesOverlap)"/>
      <record jsxtext="setType()" syntax="setType(type)"/>
    </record>
    <record jsxtext="BCSeries">
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.BCSeries()" syntax="new jsx3.chart.BCSeries(name,seriesName)"/>
      <record jsxtext="getMinField()" syntax="getMinField()"/>
      <record jsxtext="getMinValue()" syntax="getMinValue(record)"/>
      <record jsxtext="getXField()" syntax="getXField()"/>
      <record jsxtext="getXValue()" syntax="getXValue(record)"/>
      <record jsxtext="getYField()" syntax="getYField()"/>
      <record jsxtext="getYValue()" syntax="getYValue(record)"/>
      <record jsxtext="setMinField()" syntax="setMinField(minField)"/>
      <record jsxtext="setXField()" syntax="setXField(xField)"/>
      <record jsxtext="setYField()" syntax="setYField(yField)"/>
    </record>
    <record jsxtext="BarChart">
      <record jsxtext="&amp;middot; new jsx3.chart.BarChart()" syntax="new jsx3.chart.BarChart(name,left,top,width,height)"/>
      <record jsxtext="getXRange()" syntax="getXRange(series)"/>
      <record jsxtext="getYRange()" syntax="getYRange(series)"/>
    </record>
    <record jsxtext="BarSeries">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULT_BARHEIGHT" syntax="jsx3.chart.BarSeries.DEFAULT_BARHEIGHT"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="tooltip()" syntax="jsx3.chart.BarSeries.tooltip(series,record)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.chart.BarSeries()" syntax="new jsx3.chart.BarSeries(name,seriesName)"/>
      <record jsxtext="getBarHeight()" syntax="getBarHeight()"/>
      <record jsxtext="setBarHeight()" syntax="setBarHeight(barHeight)"/>
    </record>
    <record jsxtext="BubbleSeries">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="tooltip()" syntax="jsx3.chart.BubbleSeries.tooltip(series,record)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.chart.BubbleSeries()" syntax="new jsx3.chart.BubbleSeries(name,seriesName)"/>
      <record jsxtext="getMagnitudeField()" syntax="getMagnitudeField()"/>
      <record jsxtext="getMagnitudeValue()" syntax="getMagnitudeValue(record)"/>
      <record jsxtext="setMagnitudeField()" syntax="setMagnitudeField(magnitudeField)"/>
    </record>
    <record jsxtext="CartesianChart">
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.CartesianChart()" syntax="new jsx3.chart.CartesianChart(name,left,top,width,height)"/>
      <record jsxtext="getGridLines()" syntax="getGridLines()"/>
      <record jsxtext="getPrimaryXAxis()" syntax="getPrimaryXAxis()"/>
      <record jsxtext="getPrimaryYAxis()" syntax="getPrimaryYAxis()"/>
      <record jsxtext="getRangeForAxis()" syntax="getRangeForAxis(axis)"/>
      <record jsxtext="getXRange()" syntax="getXRange(series)"/>
      <record jsxtext="getYRange()" syntax="getYRange(series)"/>
    </record>
    <record jsxtext="CategoryAxis">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="TICKS_ALIGNED" syntax="jsx3.chart.CategoryAxis.TICKS_ALIGNED"/>
        <record jsxtext="TICKS_BETWEEN" syntax="jsx3.chart.CategoryAxis.TICKS_BETWEEN"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.CategoryAxis()" syntax="new jsx3.chart.CategoryAxis(name,horizontal,primary)"/>
      <record jsxtext="getCategoryField()" syntax="getCategoryField()"/>
      <record jsxtext="getPaddingHigh()" syntax="getPaddingHigh()"/>
      <record jsxtext="getPaddingLow()" syntax="getPaddingLow()"/>
      <record jsxtext="getTickAlignment()" syntax="getTickAlignment()"/>
      <record jsxtext="setCategoryField()" syntax="setCategoryField(categoryField)"/>
      <record jsxtext="setPaddingHigh()" syntax="setPaddingHigh(paddingHigh)"/>
      <record jsxtext="setPaddingLow()" syntax="setPaddingLow(paddingLow)"/>
      <record jsxtext="setTickAlignment()" syntax="setTickAlignment(tickAlignment)"/>
    </record>
    <record jsxtext="Chart">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULT_FILLS" syntax="jsx3.chart.Chart.DEFAULT_FILLS"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.Chart()" syntax="new jsx3.chart.Chart(name,left,top,width,height)"/>
      <record jsxtext="getAlpha()" syntax="getAlpha()"/>
      <record jsxtext="getBorderAlpha()" syntax="getBorderAlpha()"/>
      <record jsxtext="getBorderColor()" syntax="getBorderColor()"/>
      <record jsxtext="getBorderWidth()" syntax="getBorderWidth()"/>
      <record jsxtext="getChartTitle()" syntax="getChartTitle()"/>
      <record jsxtext="getDataPadding()" syntax="getDataPadding()"/>
      <record jsxtext="getLegend()" syntax="getLegend()"/>
      <record jsxtext="getLegendEntryType()" syntax="getLegendEntryType()"/>
      <record jsxtext="getLegendPlacement()" syntax="getLegendPlacement()"/>
      <record jsxtext="getSeries()" syntax="getSeries()"/>
      <record jsxtext="getSeriesIndex()" syntax="getSeriesIndex(s)"/>
      <record jsxtext="getTitlePlacement()" syntax="getTitlePlacement()"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord()"/>
      <record jsxtext="setAlpha()" syntax="setAlpha(alpha)"/>
      <record jsxtext="setBorderAlpha()" syntax="setBorderAlpha(borderAlpha)"/>
      <record jsxtext="setBorderColor()" syntax="setBorderColor(borderColor)"/>
      <record jsxtext="setBorderWidth()" syntax="setBorderWidth(borderWidth)"/>
      <record jsxtext="setDataPadding()" syntax="setDataPadding(dataPadding)"/>
      <record jsxtext="setLegendPlacement()" syntax="setLegendPlacement(legendPlacement)"/>
      <record jsxtext="setTitlePlacement()" syntax="setTitlePlacement(titlePlacement)"/>
    </record>
    <record jsxtext="ChartComponent">
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.ChartComponent()" syntax="new jsx3.chart.ChartComponent(name)"/>
      <record jsxtext="getChart()" syntax="getChart()"/>
    </record>
    <record jsxtext="ChartLabel">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULT_WIDTH" syntax="jsx3.chart.ChartLabel.DEFAULT_WIDTH"/>
        <record jsxtext="ROTATION_CCW" syntax="jsx3.chart.ChartLabel.ROTATION_CCW"/>
        <record jsxtext="ROTATION_CW" syntax="jsx3.chart.ChartLabel.ROTATION_CW"/>
        <record jsxtext="ROTATION_NORMAL" syntax="jsx3.chart.ChartLabel.ROTATION_NORMAL"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.ChartLabel()" syntax="new jsx3.chart.ChartLabel(name,text)"/>
      <record jsxtext="getAlpha()" syntax="getAlpha()"/>
      <record jsxtext="getBorderStroke()" syntax="getBorderStroke()"/>
      <record jsxtext="getLabelRotation()" syntax="getLabelRotation()"/>
      <record jsxtext="getPreferredHeight()" syntax="getPreferredHeight()"/>
      <record jsxtext="getPreferredWidth()" syntax="getPreferredWidth()"/>
      <record jsxtext="getText()" syntax="getText()"/>
      <record jsxtext="isRotated()" syntax="isRotated()"/>
      <record jsxtext="setAlpha()" syntax="setAlpha(alpha)"/>
      <record jsxtext="setBorderStroke()" syntax="setBorderStroke(borderStroke)"/>
      <record jsxtext="setLabelRotation()" syntax="setLabelRotation(labelRotation)"/>
      <record jsxtext="setPreferredHeight()" syntax="setPreferredHeight(preferredHeight)"/>
      <record jsxtext="setPreferredWidth()" syntax="setPreferredWidth(preferredWidth)"/>
      <record jsxtext="setText()" syntax="setText(text)"/>
    </record>
    <record jsxtext="ColumnChart">
      <record jsxtext="&amp;middot; new jsx3.chart.ColumnChart()" syntax="new jsx3.chart.ColumnChart(name,left,top,width,height)"/>
      <record jsxtext="getXRange()" syntax="getXRange(series)"/>
      <record jsxtext="getYRange()" syntax="getYRange(series)"/>
    </record>
    <record jsxtext="ColumnSeries">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULT_COLUMNWIDTH" syntax="jsx3.chart.ColumnSeries.DEFAULT_COLUMNWIDTH"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="tooltip()" syntax="jsx3.chart.ColumnSeries.tooltip(series,record)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.chart.ColumnSeries()" syntax="new jsx3.chart.ColumnSeries(name,seriesName)"/>
      <record jsxtext="getColumnWidth()" syntax="getColumnWidth()"/>
      <record jsxtext="setColumnWidth()" syntax="setColumnWidth(columnWidth)"/>
    </record>
    <record jsxtext="GridLines">
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.GridLines()" syntax="new jsx3.chart.GridLines(name,left,top,width,height)"/>
      <record jsxtext="getBorderStroke()" syntax="getBorderStroke()"/>
      <record jsxtext="getFillH()" syntax="getFillH()"/>
      <record jsxtext="getFillV()" syntax="getFillV()"/>
      <record jsxtext="getHorizontalAbove()" syntax="getHorizontalAbove()"/>
      <record jsxtext="getInForeground()" syntax="getInForeground()"/>
      <record jsxtext="getStrokeMajorH()" syntax="getStrokeMajorH()"/>
      <record jsxtext="getStrokeMajorV()" syntax="getStrokeMajorV()"/>
      <record jsxtext="getStrokeMinorH()" syntax="getStrokeMinorH()"/>
      <record jsxtext="getStrokeMinorV()" syntax="getStrokeMinorV()"/>
      <record jsxtext="getXAxis()" syntax="getXAxis()"/>
      <record jsxtext="getYAxis()" syntax="getYAxis()"/>
      <record jsxtext="setBorderStroke()" syntax="setBorderStroke(borderStroke)"/>
      <record jsxtext="setFillH()" syntax="setFillH(fillH)"/>
      <record jsxtext="setFillV()" syntax="setFillV(fillV)"/>
      <record jsxtext="setHorizontalAbove()" syntax="setHorizontalAbove(horizontalAbove)"/>
      <record jsxtext="setInForeground()" syntax="setInForeground(inForeground)"/>
      <record jsxtext="setStrokeMajorH()" syntax="setStrokeMajorH(strokeMajorH)"/>
      <record jsxtext="setStrokeMajorV()" syntax="setStrokeMajorV(strokeMajorV)"/>
      <record jsxtext="setStrokeMinorH()" syntax="setStrokeMinorH(strokeMinorH)"/>
      <record jsxtext="setStrokeMinorV()" syntax="setStrokeMinorV(strokeMinorV)"/>
    </record>
    <record jsxtext="Legend">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULT_HEIGHT" syntax="jsx3.chart.Legend.DEFAULT_HEIGHT"/>
        <record jsxtext="DEFAULT_WIDTH" syntax="jsx3.chart.Legend.DEFAULT_WIDTH"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.Legend()" syntax="new jsx3.chart.Legend(name)"/>
      <record jsxtext="getBackgroundFill()" syntax="getBackgroundFill()"/>
      <record jsxtext="getBackgroundStroke()" syntax="getBackgroundStroke()"/>
      <record jsxtext="getBoxHeight()" syntax="getBoxHeight()"/>
      <record jsxtext="getLabelClass()" syntax="getLabelClass()"/>
      <record jsxtext="getLabelStyle()" syntax="getLabelStyle()"/>
      <record jsxtext="getLegendTitle()" syntax="getLegendTitle()"/>
      <record jsxtext="getLineHeight()" syntax="getLineHeight()"/>
      <record jsxtext="getPreferredHeight()" syntax="getPreferredHeight()"/>
      <record jsxtext="getPreferredWidth()" syntax="getPreferredWidth()"/>
      <record jsxtext="setBackgroundFill()" syntax="setBackgroundFill(backgroundFill)"/>
      <record jsxtext="setBackgroundStroke()" syntax="setBackgroundStroke(backgroundStroke)"/>
      <record jsxtext="setBoxHeight()" syntax="setBoxHeight(boxHeight)"/>
      <record jsxtext="setLabelClass()" syntax="setLabelClass(labelClass)"/>
      <record jsxtext="setLabelStyle()" syntax="setLabelStyle(labelStyle)"/>
      <record jsxtext="setLineHeight()" syntax="setLineHeight(lineHeight)"/>
      <record jsxtext="setPreferredHeight()" syntax="setPreferredHeight(preferredHeight)"/>
      <record jsxtext="setPreferredWidth()" syntax="setPreferredWidth(preferredWidth)"/>
    </record>
    <record jsxtext="LineChart">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="TYPE_OVERLAY" syntax="jsx3.chart.LineChart.TYPE_OVERLAY"/>
        <record jsxtext="TYPE_STACKED" syntax="jsx3.chart.LineChart.TYPE_STACKED"/>
        <record jsxtext="TYPE_STACKED100" syntax="jsx3.chart.LineChart.TYPE_STACKED100"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.LineChart()" syntax="new jsx3.chart.LineChart(name,left,top,width,height)"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="getXRange()" syntax="getXRange(series)"/>
      <record jsxtext="getYRange()" syntax="getYRange(series)"/>
      <record jsxtext="setType()" syntax="setType(type)"/>
    </record>
    <record jsxtext="LineSeries">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="FORM_HORIZONTAL" syntax="jsx3.chart.LineSeries.FORM_HORIZONTAL"/>
        <record jsxtext="FORM_REVSTEP" syntax="jsx3.chart.LineSeries.FORM_REVSTEP"/>
        <record jsxtext="FORM_SEGMENT" syntax="jsx3.chart.LineSeries.FORM_SEGMENT"/>
        <record jsxtext="FORM_STEP" syntax="jsx3.chart.LineSeries.FORM_STEP"/>
        <record jsxtext="FORM_VERTICAL" syntax="jsx3.chart.LineSeries.FORM_VERTICAL"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="tooltip()" syntax="jsx3.chart.LineSeries.tooltip(series,record)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.chart.LineSeries()" syntax="new jsx3.chart.LineSeries(name,seriesName)"/>
      <record jsxtext="getForm()" syntax="getForm()"/>
      <record jsxtext="getInterpolateValues()" syntax="getInterpolateValues()"/>
      <record jsxtext="getPointFill()" syntax="getPointFill()"/>
      <record jsxtext="getPointGradient()" syntax="getPointGradient()"/>
      <record jsxtext="getPointRadius()" syntax="getPointRadius()"/>
      <record jsxtext="getPointRenderer()" syntax="getPointRenderer()"/>
      <record jsxtext="getPointStroke()" syntax="getPointStroke()"/>
      <record jsxtext="getXField()" syntax="getXField()"/>
      <record jsxtext="getYField()" syntax="getYField()"/>
      <record jsxtext="setForm()" syntax="setForm(form)"/>
      <record jsxtext="setInterpolateValues()" syntax="setInterpolateValues(interpolateValues)"/>
      <record jsxtext="setPointFill()" syntax="setPointFill(pointFill)"/>
      <record jsxtext="setPointGradient()" syntax="setPointGradient(pointGradient)"/>
      <record jsxtext="setPointRadius()" syntax="setPointRadius(pointRadius)"/>
      <record jsxtext="setPointRenderer()" syntax="setPointRenderer(pointRenderer)"/>
      <record jsxtext="setPointStroke()" syntax="setPointStroke(pointStroke)"/>
      <record jsxtext="setXField()" syntax="setXField(xField)"/>
      <record jsxtext="setYField()" syntax="setYField(yField)"/>
    </record>
    <record jsxtext="LinearAxis">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="MAX_INTERVALS" syntax="jsx3.chart.LinearAxis.MAX_INTERVALS"/>
        <record jsxtext="MIN_INTERVALS" syntax="jsx3.chart.LinearAxis.MIN_INTERVALS"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.LinearAxis()" syntax="new jsx3.chart.LinearAxis(name,horizontal,primary)"/>
      <record jsxtext="getAutoAdjust()" syntax="getAutoAdjust()"/>
      <record jsxtext="getBaseAtZero()" syntax="getBaseAtZero()"/>
      <record jsxtext="getCoordinateFor()" syntax="getCoordinateFor(value)"/>
      <record jsxtext="getCoordinateForNoClip()" syntax="getCoordinateForNoClip(value)"/>
      <record jsxtext="getInterval()" syntax="getInterval()"/>
      <record jsxtext="getMax()" syntax="getMax()"/>
      <record jsxtext="getMin()" syntax="getMin()"/>
      <record jsxtext="setAutoAdjust()" syntax="setAutoAdjust(autoAdjust)"/>
      <record jsxtext="setBaseAtZero()" syntax="setBaseAtZero(baseAtZero)"/>
      <record jsxtext="setInterval()" syntax="setInterval(interval)"/>
      <record jsxtext="setMax()" syntax="setMax(max)"/>
      <record jsxtext="setMin()" syntax="setMin(min)"/>
    </record>
    <record jsxtext="LogarithmicAxis">
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.LogarithmicAxis()" syntax="new jsx3.chart.LogarithmicAxis(name,horizontal,primary)"/>
      <record jsxtext="getAutoAdjust()" syntax="getAutoAdjust()"/>
      <record jsxtext="getBase()" syntax="getBase()"/>
      <record jsxtext="getBaseAtZero()" syntax="getBaseAtZero()"/>
      <record jsxtext="getCoordinateFor()" syntax="getCoordinateFor(value)"/>
      <record jsxtext="getCoordinateForNoClip()" syntax="getCoordinateForNoClip(value)"/>
      <record jsxtext="getMajorDivisions()" syntax="getMajorDivisions()"/>
      <record jsxtext="getMaxExponent()" syntax="getMaxExponent()"/>
      <record jsxtext="getMinExponent()" syntax="getMinExponent()"/>
      <record jsxtext="getShowNegativeValues()" syntax="getShowNegativeValues()"/>
      <record jsxtext="setAutoAdjust()" syntax="setAutoAdjust(autoAdjust)"/>
      <record jsxtext="setBase()" syntax="setBase(base)"/>
      <record jsxtext="setBaseAtZero()" syntax="setBaseAtZero(baseAtZero)"/>
      <record jsxtext="setMajorDivisions()" syntax="setMajorDivisions(majorDivisions)"/>
      <record jsxtext="setMaxExponent()" syntax="setMaxExponent(maxExponent)"/>
      <record jsxtext="setMinExponent()" syntax="setMinExponent(minExponent)"/>
      <record jsxtext="setShowNegativeValues()" syntax="setShowNegativeValues(showNegativeValues)"/>
    </record>
    <record jsxtext="PieChart">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="defaultColoring()" syntax="jsx3.chart.PieChart.defaultColoring(record,index)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.chart.PieChart()" syntax="new jsx3.chart.PieChart(name,left,top,width,height)"/>
      <record jsxtext="getCategoryField()" syntax="getCategoryField()"/>
      <record jsxtext="getColorFunction()" syntax="getColorFunction()"/>
      <record jsxtext="getColors()" syntax="getColors()"/>
      <record jsxtext="getInnerRadius()" syntax="getInnerRadius()"/>
      <record jsxtext="getSeriesPadding()" syntax="getSeriesPadding()"/>
      <record jsxtext="getSeriesStroke()" syntax="getSeriesStroke()"/>
      <record jsxtext="getStartAngle()" syntax="getStartAngle()"/>
      <record jsxtext="getTotalAngle()" syntax="getTotalAngle()"/>
      <record jsxtext="setCategoryField()" syntax="setCategoryField(categoryField)"/>
      <record jsxtext="setColorFunction()" syntax="setColorFunction(colorFunction)"/>
      <record jsxtext="setColors()" syntax="setColors(colors)"/>
      <record jsxtext="setInnerRadius()" syntax="setInnerRadius(innerRadius)"/>
      <record jsxtext="setSeriesPadding()" syntax="setSeriesPadding(seriesPadding)"/>
      <record jsxtext="setSeriesStroke()" syntax="setSeriesStroke(seriesStroke)"/>
      <record jsxtext="setStartAngle()" syntax="setStartAngle(startAngle)"/>
      <record jsxtext="setTotalAngle()" syntax="setTotalAngle(totalAngle)"/>
    </record>
    <record jsxtext="PieSeries">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="tooltip()" syntax="jsx3.chart.PieSeries.tooltip(series,record,percent)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.chart.PieSeries()" syntax="new jsx3.chart.PieSeries(name,seriesName)"/>
      <record jsxtext="getColors()" syntax="getColors()"/>
      <record jsxtext="getField()" syntax="getField()"/>
      <record jsxtext="getLabelOffset()" syntax="getLabelOffset()"/>
      <record jsxtext="getLabelPlacement()" syntax="getLabelPlacement()"/>
      <record jsxtext="getStartAngle()" syntax="getStartAngle()"/>
      <record jsxtext="getTotalAngle()" syntax="getTotalAngle()"/>
      <record jsxtext="getValue()" syntax="getValue(record)"/>
      <record jsxtext="setColors()" syntax="setColors(colors)"/>
      <record jsxtext="setField()" syntax="setField(field)"/>
      <record jsxtext="setLabelOffset()" syntax="setLabelOffset(labelOffset)"/>
      <record jsxtext="setLabelPlacement()" syntax="setLabelPlacement(labelPlacement)"/>
      <record jsxtext="setStartAngle()" syntax="setStartAngle(startAngle)"/>
      <record jsxtext="setTotalAngle()" syntax="setTotalAngle(totalAngle)"/>
    </record>
    <record jsxtext="PlotChart">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULT_MAX_POINT_RADIUS" syntax="jsx3.chart.PlotChart.DEFAULT_MAX_POINT_RADIUS"/>
        <record jsxtext="MAG_AREA" syntax="jsx3.chart.PlotChart.MAG_AREA"/>
        <record jsxtext="MAG_DIAMETER" syntax="jsx3.chart.PlotChart.MAG_DIAMETER"/>
        <record jsxtext="MAG_RADIUS" syntax="jsx3.chart.PlotChart.MAG_RADIUS"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.PlotChart()" syntax="new jsx3.chart.PlotChart(name,left,top,width,height)"/>
      <record jsxtext="getMagnitudeMethod()" syntax="getMagnitudeMethod()"/>
      <record jsxtext="getMaxPointRadius()" syntax="getMaxPointRadius()"/>
      <record jsxtext="getXRange()" syntax="getXRange(series)"/>
      <record jsxtext="getYRange()" syntax="getYRange(series)"/>
      <record jsxtext="setMagnitudeMethod()" syntax="setMagnitudeMethod(magnitudeMethod)"/>
      <record jsxtext="setMaxPointRadius()" syntax="setMaxPointRadius(maxPointRadius)"/>
    </record>
    <record jsxtext="PlotSeries">
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.PlotSeries()" syntax="new jsx3.chart.PlotSeries(name,seriesName)"/>
      <record jsxtext="getLegendRenderer()" syntax="getLegendRenderer()"/>
      <record jsxtext="getRenderer()" syntax="getRenderer()"/>
      <record jsxtext="getXField()" syntax="getXField()"/>
      <record jsxtext="getXValue()" syntax="getXValue(record)"/>
      <record jsxtext="getYField()" syntax="getYField()"/>
      <record jsxtext="getYValue()" syntax="getYValue(record)"/>
      <record jsxtext="setRenderer()" syntax="setRenderer(renderer)"/>
      <record jsxtext="setXField()" syntax="setXField(xField)"/>
      <record jsxtext="setYField()" syntax="setYField(yField)"/>
    </record>
    <record jsxtext="PointRenderer">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="BOX" syntax="jsx3.chart.PointRenderer.BOX"/>
        <record jsxtext="CIRCLE" syntax="jsx3.chart.PointRenderer.CIRCLE"/>
        <record jsxtext="CROSS" syntax="jsx3.chart.PointRenderer.CROSS"/>
        <record jsxtext="DIAMOND" syntax="jsx3.chart.PointRenderer.DIAMOND"/>
        <record jsxtext="TRIANGLE" syntax="jsx3.chart.PointRenderer.TRIANGLE"/>
      </record>
      <record jsxtext="areaToRadius()" syntax="areaToRadius(area)"/>
      <record jsxtext="render()" syntax="render(x1,y1,x2,y2,fill,stroke)"/>
    </record>
    <record jsxtext="PointSeries">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULT_MAGNITUDE" syntax="jsx3.chart.PointSeries.DEFAULT_MAGNITUDE"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="tooltip()" syntax="jsx3.chart.PointSeries.tooltip(series,record)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.chart.PointSeries()" syntax="new jsx3.chart.PointSeries(name,seriesName)"/>
      <record jsxtext="getMagnitude()" syntax="getMagnitude()"/>
      <record jsxtext="setMagnitude()" syntax="setMagnitude(magnitude)"/>
    </record>
    <record jsxtext="RadialChart">
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.RadialChart()" syntax="new jsx3.chart.RadialChart(name,left,top,width,height)"/>
    </record>
    <record jsxtext="Series">
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.chart.Series()" syntax="new jsx3.chart.Series(name,seriesName)"/>
      <record jsxtext="getColorFunction()" syntax="getColorFunction()"/>
      <record jsxtext="getFill()" syntax="getFill()"/>
      <record jsxtext="getFillGradient()" syntax="getFillGradient()"/>
      <record jsxtext="getIndex()" syntax="getIndex()"/>
      <record jsxtext="getLabel()" syntax="getLabel()"/>
      <record jsxtext="getSeriesName()" syntax="getSeriesName()"/>
      <record jsxtext="getStroke()" syntax="getStroke()"/>
      <record jsxtext="getTooltipFunction()" syntax="getTooltipFunction()"/>
      <record jsxtext="getXAxis()" syntax="getXAxis()"/>
      <record jsxtext="getYAxis()" syntax="getYAxis()"/>
      <record jsxtext="setColorFunction()" syntax="setColorFunction(colorFunction)"/>
      <record jsxtext="setFill()" syntax="setFill(fill)"/>
      <record jsxtext="setFillGradient()" syntax="setFillGradient(fillGradient)"/>
      <record jsxtext="setSeriesName()" syntax="setSeriesName(seriesName)"/>
      <record jsxtext="setStroke()" syntax="setStroke(stroke)"/>
      <record jsxtext="setTooltipFunction()" syntax="setTooltipFunction(tooltipFunction)"/>
    </record>
  </record>
  <record jsxtext="jsx3.gui">
    <record jsxtext="Alerts">
      <record jsxtext="alert()" syntax="alert(strTitle,strMessage,fctOnOk,strOk,objParams)"/>
      <record jsxtext="configureAlert()" syntax="configureAlert(objDialog,objParams)"/>
      <record jsxtext="confirm()" syntax="confirm(strTitle,strMessage,fctOnOk,fctOnCancel,strOk,strCancel,intBtnDefault,fctOnNo,strNo,objParams)"/>
      <record jsxtext="getAlertsParent()" syntax="getAlertsParent()"/>
      <record jsxtext="prompt()" syntax="prompt(strTitle,strMessage,fctOnOk,fctOnCancel,strOk,strCancel,objParams)"/>
    </record>
    <record jsxtext="Block">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ABSOLUTE" syntax="jsx3.gui.Block.ABSOLUTE"/>
        <record jsxtext="ALIGNCENTER" syntax="jsx3.gui.Block.ALIGNCENTER"/>
        <record jsxtext="ALIGNLEFT" syntax="jsx3.gui.Block.ALIGNLEFT"/>
        <record jsxtext="ALIGNRIGHT" syntax="jsx3.gui.Block.ALIGNRIGHT"/>
        <record jsxtext="DEFAULTCLASSNAME" syntax="jsx3.gui.Block.DEFAULTCLASSNAME"/>
        <record jsxtext="DEFAULTCOLOR" syntax="jsx3.gui.Block.DEFAULTCOLOR"/>
        <record jsxtext="DEFAULTFONTNAME" syntax="jsx3.gui.Block.DEFAULTFONTNAME"/>
        <record jsxtext="DEFAULTFONTSIZE" syntax="jsx3.gui.Block.DEFAULTFONTSIZE"/>
        <record jsxtext="DEFAULTTAGNAME" syntax="jsx3.gui.Block.DEFAULTTAGNAME"/>
        <record jsxtext="DEFAULTTEXT" syntax="jsx3.gui.Block.DEFAULTTEXT"/>
        <record jsxtext="DISPLAYBLOCK" syntax="jsx3.gui.Block.DISPLAYBLOCK"/>
        <record jsxtext="DISPLAYNONE" syntax="jsx3.gui.Block.DISPLAYNONE"/>
        <record jsxtext="FONTBOLD" syntax="jsx3.gui.Block.FONTBOLD"/>
        <record jsxtext="FONTNORMAL" syntax="jsx3.gui.Block.FONTNORMAL"/>
        <record jsxtext="OVERFLOWEXPAND" syntax="jsx3.gui.Block.OVERFLOWEXPAND"/>
        <record jsxtext="OVERFLOWHIDDEN" syntax="jsx3.gui.Block.OVERFLOWHIDDEN"/>
        <record jsxtext="OVERFLOWSCROLL" syntax="jsx3.gui.Block.OVERFLOWSCROLL"/>
        <record jsxtext="RELATIVE" syntax="jsx3.gui.Block.RELATIVE"/>
        <record jsxtext="SPACE" syntax="jsx3.gui.Block.SPACE"/>
        <record jsxtext="VISIBILITYHIDDEN" syntax="jsx3.gui.Block.VISIBILITYHIDDEN"/>
        <record jsxtext="VISIBILITYVISIBLE" syntax="jsx3.gui.Block.VISIBILITYVISIBLE"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Block()" syntax="new jsx3.gui.Block(strName,vntLeft,vntTop,vntWidth,vntHeight,strHTML)"/>
      <record jsxtext="getBackground()" syntax="getBackground()"/>
      <record jsxtext="getBackgroundColor()" syntax="getBackgroundColor()"/>
      <record jsxtext="getBorder()" syntax="getBorder()"/>
      <record jsxtext="getCDFAttribute()" syntax="getCDFAttribute()"/>
      <record jsxtext="getCDFId()" syntax="getCDFId()"/>
      <record jsxtext="getCSSOverride()" syntax="getCSSOverride()"/>
      <record jsxtext="getClassName()" syntax="getClassName()"/>
      <record jsxtext="getColor()" syntax="getColor()"/>
      <record jsxtext="getCursor()" syntax="getCursor()"/>
      <record jsxtext="getDimensions()" syntax="getDimensions()"/>
      <record jsxtext="getDisplay()" syntax="getDisplay()"/>
      <record jsxtext="getFontName()" syntax="getFontName()"/>
      <record jsxtext="getFontSize()" syntax="getFontSize()"/>
      <record jsxtext="getFontWeight()" syntax="getFontWeight()"/>
      <record jsxtext="getHeight()" syntax="getHeight()"/>
      <record jsxtext="getIndex()" syntax="getIndex()"/>
      <record jsxtext="getLeft()" syntax="getLeft()"/>
      <record jsxtext="getMargin()" syntax="getMargin()"/>
      <record jsxtext="getOverflow()" syntax="getOverflow()"/>
      <record jsxtext="getPadding()" syntax="getPadding()"/>
      <record jsxtext="getRelativePosition()" syntax="getRelativePosition()"/>
      <record jsxtext="getTagName()" syntax="getTagName()"/>
      <record jsxtext="getText()" syntax="getText()"/>
      <record jsxtext="getTextAlign()" syntax="getTextAlign()"/>
      <record jsxtext="getTip()" syntax="getTip()"/>
      <record jsxtext="getTop()" syntax="getTop()"/>
      <record jsxtext="getVisibility()" syntax="getVisibility()"/>
      <record jsxtext="getWidth()" syntax="getWidth()"/>
      <record jsxtext="getZIndex()" syntax="getZIndex()"/>
      <record jsxtext="hideMask()" syntax="hideMask()"/>
      <record jsxtext="paint()" syntax="paint(strData)"/>
      <record jsxtext="setBackground()" syntax="setBackground(strBG)"/>
      <record jsxtext="setBackgroundColor()" syntax="setBackgroundColor(strColor,bUpdateView)"/>
      <record jsxtext="setBorder()" syntax="setBorder(strCSS,bUpdateView)"/>
      <record jsxtext="setCDFAttribute()" syntax="setCDFAttribute(strAttName)"/>
      <record jsxtext="setCDFId()" syntax="setCDFId(strCDFId)"/>
      <record jsxtext="setCSSOverride()" syntax="setCSSOverride(strCSS)"/>
      <record jsxtext="setClassName()" syntax="setClassName(strClassName)"/>
      <record jsxtext="setColor()" syntax="setColor(strColor,bUpdateView)"/>
      <record jsxtext="setCursor()" syntax="setCursor(strCursor,bUpdateView)"/>
      <record jsxtext="setDimensions()" syntax="setDimensions(left,top,width,height,bUpdateView)"/>
      <record jsxtext="setDisplay()" syntax="setDisplay(DISPLAY,bUpdateView)"/>
      <record jsxtext="setFontName()" syntax="setFontName(strFontName)"/>
      <record jsxtext="setFontSize()" syntax="setFontSize(intPixelSize)"/>
      <record jsxtext="setFontWeight()" syntax="setFontWeight(FONTWEIGHT)"/>
      <record jsxtext="setHeight()" syntax="setHeight(vntHeight,bUpdateView)"/>
      <record jsxtext="setIndex()" syntax="setIndex(intIndex,bUpdateView)"/>
      <record jsxtext="setLeft()" syntax="setLeft(vntLeft,bUpdateView)"/>
      <record jsxtext="setMargin()" syntax="setMargin(strCSS,bUpdateView)"/>
      <record jsxtext="setOverflow()" syntax="setOverflow(OVERFLOW)"/>
      <record jsxtext="setPadding()" syntax="setPadding(strCSS,bUpdateView)"/>
      <record jsxtext="setRelativePosition()" syntax="setRelativePosition(intRelative,bUpdateView)"/>
      <record jsxtext="setTagName()" syntax="setTagName(strTagName)"/>
      <record jsxtext="setText()" syntax="setText(strText,bRepaint)"/>
      <record jsxtext="setTextAlign()" syntax="setTextAlign(ALIGN)"/>
      <record jsxtext="setTip()" syntax="setTip(strTip)"/>
      <record jsxtext="setTop()" syntax="setTop(vntTop,bUpdateView)"/>
      <record jsxtext="setVisibility()" syntax="setVisibility(VISIBILITY,bUpdateView)"/>
      <record jsxtext="setWidth()" syntax="setWidth(vntWidth,bUpdateView)"/>
      <record jsxtext="setZIndex()" syntax="setZIndex(intZIndex,bUpdateView)"/>
      <record jsxtext="showMask()" syntax="showMask(strMessage)"/>
    </record>
    <record jsxtext="BlockX">
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.BlockX()" syntax="new jsx3.gui.BlockX(strName,vntLeft,vntTop,vntWidth,vntHeight)"/>
      <record jsxtext="getXSLString()" syntax="getXSLString()"/>
      <record jsxtext="getXSLURL()" syntax="getXSLURL()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setXSLString()" syntax="setXSLString(strXSL)"/>
      <record jsxtext="setXSLURL()" syntax="setXSLURL(strXSLURL)"/>
    </record>
    <record jsxtext="Button">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTBACKGROUNDCOLOR" syntax="jsx3.gui.Button.DEFAULTBACKGROUNDCOLOR"/>
        <record jsxtext="DEFAULTCLASSNAME" syntax="jsx3.gui.Button.DEFAULTCLASSNAME"/>
        <record jsxtext="DEFAULTHEIGHT" syntax="jsx3.gui.Button.DEFAULTHEIGHT"/>
        <record jsxtext="DEFAULTHIGHLIGHT" syntax="jsx3.gui.Button.DEFAULTHIGHLIGHT"/>
        <record jsxtext="DEFAULTSHADOW" syntax="jsx3.gui.Button.DEFAULTSHADOW"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Button()" syntax="new jsx3.gui.Button(strName,intLeft,intTop,intWidth,strText)"/>
      <record jsxtext="doExecute()" syntax="doExecute(objEvent)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="paint()" syntax="paint()"/>
    </record>
    <record jsxtext="CDF">
      <record jsxtext="&amp;middot; new jsx3.gui.CDF()" syntax="new jsx3.gui.CDF(strName)"/>
      <record jsxtext="getCDFId()" syntax="getCDFId()"/>
      <record jsxtext="read()" syntax="read(bRepaint,strRecordId)"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord(strRecordId,intAction)"/>
      <record jsxtext="setCDFId()" syntax="setCDFId(strCDFId)"/>
      <record jsxtext="write()" syntax="write()"/>
    </record>
    <record jsxtext="CheckBox">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="CHECKED" syntax="jsx3.gui.CheckBox.CHECKED"/>
        <record jsxtext="DEFAULTCLASSNAME" syntax="jsx3.gui.CheckBox.DEFAULTCLASSNAME"/>
        <record jsxtext="PARTIAL" syntax="jsx3.gui.CheckBox.PARTIAL"/>
        <record jsxtext="UNCHECKED" syntax="jsx3.gui.CheckBox.UNCHECKED"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.CheckBox()" syntax="new jsx3.gui.CheckBox(strName,vntLeft,vntTop,vntWidth,vntHeight,strText,CHECKED)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getChecked()" syntax="getChecked()"/>
      <record jsxtext="getDefaultChecked()" syntax="getDefaultChecked()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setChecked()" syntax="setChecked(intChecked)"/>
      <record jsxtext="setDefaultChecked()" syntax="setDefaultChecked(CHECKED)"/>
      <record jsxtext="setValue()" syntax="setValue(vntValue)"/>
    </record>
    <record jsxtext="ColorPicker">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="BRIGHTNESS" syntax="jsx3.gui.ColorPicker.BRIGHTNESS"/>
        <record jsxtext="DEFAULT_HEIGHT" syntax="jsx3.gui.ColorPicker.DEFAULT_HEIGHT"/>
        <record jsxtext="DEFAULT_WIDTH" syntax="jsx3.gui.ColorPicker.DEFAULT_WIDTH"/>
        <record jsxtext="HUE" syntax="jsx3.gui.ColorPicker.HUE"/>
        <record jsxtext="SATURATION" syntax="jsx3.gui.ColorPicker.SATURATION"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="HSBtoRGB()" syntax="jsx3.gui.ColorPicker.HSBtoRGB(h,s,l)"/>
        <record jsxtext="RGBtoHSB()" syntax="jsx3.gui.ColorPicker.RGBtoHSB(r,g,b)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.gui.ColorPicker()" syntax="new jsx3.gui.ColorPicker(strName,vntLeft,vntTop,vntWidth,vntHeight)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getAxis()" syntax="getAxis()"/>
      <record jsxtext="getRGB()" syntax="getRGB()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setAxis()" syntax="setAxis(intAxis)"/>
      <record jsxtext="setHSB()" syntax="setHSB(h,s,b)"/>
      <record jsxtext="setRGB()" syntax="setRGB(rgb)"/>
      <record jsxtext="setValue()" syntax="setValue(strValue)"/>
    </record>
    <record jsxtext="DatePicker">
      <record jsxtext="&amp;middot; Static Fields"/>
      <record jsxtext="&amp;middot; new jsx3.gui.DatePicker()" syntax="new jsx3.gui.DatePicker(strName,intLeft,intTop,intWidth,intHeight)"/>
      <record jsxtext="allowDate()" syntax="allowDate(y,m,d)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="focusCalendar()" syntax="focusCalendar()"/>
      <record jsxtext="getDate()" syntax="getDate()"/>
      <record jsxtext="getDefaultText()" syntax="getDefaultText()"/>
      <record jsxtext="getFirstDayOfWeek()" syntax="getFirstDayOfWeek()"/>
      <record jsxtext="getFormat()" syntax="getFormat()"/>
      <record jsxtext="getIcon()" syntax="getIcon(strDefault)"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setDate()" syntax="setDate(date)"/>
      <record jsxtext="setDefaultText()" syntax="setDefaultText(label)"/>
      <record jsxtext="setFirstDayOfWeek()" syntax="setFirstDayOfWeek(jsxfirstweekday)"/>
      <record jsxtext="setFormat()" syntax="setFormat(jsxformat)"/>
      <record jsxtext="setIcon()" syntax="setIcon(strPath)"/>
      <record jsxtext="setValue()" syntax="setValue(vntValue)"/>
    </record>
    <record jsxtext="Dialog">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTBACKGROUNDCOLOR" syntax="jsx3.gui.Dialog.DEFAULTBACKGROUNDCOLOR"/>
        <record jsxtext="FIXED" syntax="jsx3.gui.Dialog.FIXED"/>
        <record jsxtext="MAXIMIZED" syntax="jsx3.gui.Dialog.MAXIMIZED"/>
        <record jsxtext="MINIMIZED" syntax="jsx3.gui.Dialog.MINIMIZED"/>
        <record jsxtext="MODAL" syntax="jsx3.gui.Dialog.MODAL"/>
        <record jsxtext="NONMODAL" syntax="jsx3.gui.Dialog.NONMODAL"/>
        <record jsxtext="RESIZABLE" syntax="jsx3.gui.Dialog.RESIZABLE"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Dialog()" syntax="new jsx3.gui.Dialog(strName,vntWidth,vntHeight,strTitle)"/>
      <record jsxtext="beep()" syntax="beep()"/>
      <record jsxtext="constrainPosition()" syntax="constrainPosition(arg)"/>
      <record jsxtext="doClose()" syntax="doClose()"/>
      <record jsxtext="doMaximize()" syntax="doMaximize(objTBB)"/>
      <record jsxtext="doToggleState()" syntax="doToggleState(STATE)"/>
      <record jsxtext="focus()" syntax="focus(bTimeout)"/>
      <record jsxtext="getAbsolutePosition()" syntax="getAbsolutePosition(objRoot)"/>
      <record jsxtext="getAlertsParent()" syntax="getAlertsParent()"/>
      <record jsxtext="getBorder()" syntax="getBorder(strDefault)"/>
      <record jsxtext="getBuffer()" syntax="getBuffer(strDefault)"/>
      <record jsxtext="getCaptionBar()" syntax="getCaptionBar()"/>
      <record jsxtext="getContentBorder()" syntax="getContentBorder(strDefault)"/>
      <record jsxtext="getModal()" syntax="getModal()"/>
      <record jsxtext="getResize()" syntax="getResize()"/>
      <record jsxtext="getTaskButton()" syntax="getTaskButton(objTaskBar)"/>
      <record jsxtext="getWindowState()" syntax="getWindowState()"/>
      <record jsxtext="getZMultiplier()" syntax="getZMultiplier()"/>
      <record jsxtext="isFront()" syntax="isFront()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="paintChild()" syntax="paintChild(objJSX,bGroup)"/>
      <record jsxtext="recalcBox()" syntax="recalcBox()"/>
      <record jsxtext="setBorder()" syntax="setBorder(strCSS)"/>
      <record jsxtext="setBuffer()" syntax="setBuffer(intBuffer)"/>
      <record jsxtext="setContentBorder()" syntax="setContentBorder(strCSS)"/>
      <record jsxtext="setModal()" syntax="setModal(intModal)"/>
      <record jsxtext="setResize()" syntax="setResize(RESIZE)"/>
      <record jsxtext="setResizeParameters()" syntax="setResizeParameters(RESIZE,intMinX,intMinY,intMaxX,intMaxY,strAfterResizeFunction)"/>
      <record jsxtext="setWindowState()" syntax="setWindowState(STATE)"/>
      <record jsxtext="setZMultiplier()" syntax="setZMultiplier(intMultiplier)"/>
    </record>
    <record jsxtext="DojoWidget">
      <record jsxtext="&amp;middot; new jsx3.gui.DojoWidget()" syntax="new jsx3.gui.DojoWidget(strName,vntLeft,vntTop,vntWidth,vntHeight,dijitClassName,dijitProps,dijitStyleSheets)"/>
      <record jsxtext="attr()" syntax="attr(name,value)"/>
    </record>
    <record jsxtext="Event">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="BEFOREUNLOAD" syntax="jsx3.gui.Event.BEFOREUNLOAD"/>
        <record jsxtext="BLUR" syntax="jsx3.gui.Event.BLUR"/>
        <record jsxtext="CHANGE" syntax="jsx3.gui.Event.CHANGE"/>
        <record jsxtext="CLICK" syntax="jsx3.gui.Event.CLICK"/>
        <record jsxtext="DOUBLECLICK" syntax="jsx3.gui.Event.DOUBLECLICK"/>
        <record jsxtext="ERROR" syntax="jsx3.gui.Event.ERROR"/>
        <record jsxtext="FOCUS" syntax="jsx3.gui.Event.FOCUS"/>
        <record jsxtext="KEYDOWN" syntax="jsx3.gui.Event.KEYDOWN"/>
        <record jsxtext="KEYPRESS" syntax="jsx3.gui.Event.KEYPRESS"/>
        <record jsxtext="KEYUP" syntax="jsx3.gui.Event.KEYUP"/>
        <record jsxtext="KEY_0" syntax="jsx3.gui.Event.KEY_0"/>
        <record jsxtext="KEY_9" syntax="jsx3.gui.Event.KEY_9"/>
        <record jsxtext="KEY_A" syntax="jsx3.gui.Event.KEY_A"/>
        <record jsxtext="KEY_ALT" syntax="jsx3.gui.Event.KEY_ALT"/>
        <record jsxtext="KEY_ARROW_DOWN" syntax="jsx3.gui.Event.KEY_ARROW_DOWN"/>
        <record jsxtext="KEY_ARROW_LEFT" syntax="jsx3.gui.Event.KEY_ARROW_LEFT"/>
        <record jsxtext="KEY_ARROW_RIGHT" syntax="jsx3.gui.Event.KEY_ARROW_RIGHT"/>
        <record jsxtext="KEY_ARROW_UP" syntax="jsx3.gui.Event.KEY_ARROW_UP"/>
        <record jsxtext="KEY_BACKSPACE" syntax="jsx3.gui.Event.KEY_BACKSPACE"/>
        <record jsxtext="KEY_CONTROL" syntax="jsx3.gui.Event.KEY_CONTROL"/>
        <record jsxtext="KEY_DELETE" syntax="jsx3.gui.Event.KEY_DELETE"/>
        <record jsxtext="KEY_END" syntax="jsx3.gui.Event.KEY_END"/>
        <record jsxtext="KEY_ENTER" syntax="jsx3.gui.Event.KEY_ENTER"/>
        <record jsxtext="KEY_ESCAPE" syntax="jsx3.gui.Event.KEY_ESCAPE"/>
        <record jsxtext="KEY_F1" syntax="jsx3.gui.Event.KEY_F1"/>
        <record jsxtext="KEY_F15" syntax="jsx3.gui.Event.KEY_F15"/>
        <record jsxtext="KEY_HOME" syntax="jsx3.gui.Event.KEY_HOME"/>
        <record jsxtext="KEY_INSERT" syntax="jsx3.gui.Event.KEY_INSERT"/>
        <record jsxtext="KEY_META" syntax="jsx3.gui.Event.KEY_META"/>
        <record jsxtext="KEY_NP0" syntax="jsx3.gui.Event.KEY_NP0"/>
        <record jsxtext="KEY_NP9" syntax="jsx3.gui.Event.KEY_NP9"/>
        <record jsxtext="KEY_NPADD" syntax="jsx3.gui.Event.KEY_NPADD"/>
        <record jsxtext="KEY_NPDEC" syntax="jsx3.gui.Event.KEY_NPDEC"/>
        <record jsxtext="KEY_NPDIV" syntax="jsx3.gui.Event.KEY_NPDIV"/>
        <record jsxtext="KEY_NPMUL" syntax="jsx3.gui.Event.KEY_NPMUL"/>
        <record jsxtext="KEY_NPSUB" syntax="jsx3.gui.Event.KEY_NPSUB"/>
        <record jsxtext="KEY_PAGE_DOWN" syntax="jsx3.gui.Event.KEY_PAGE_DOWN"/>
        <record jsxtext="KEY_PAGE_UP" syntax="jsx3.gui.Event.KEY_PAGE_UP"/>
        <record jsxtext="KEY_SHIFT" syntax="jsx3.gui.Event.KEY_SHIFT"/>
        <record jsxtext="KEY_SPACE" syntax="jsx3.gui.Event.KEY_SPACE"/>
        <record jsxtext="KEY_TAB" syntax="jsx3.gui.Event.KEY_TAB"/>
        <record jsxtext="KEY_Z" syntax="jsx3.gui.Event.KEY_Z"/>
        <record jsxtext="LOAD" syntax="jsx3.gui.Event.LOAD"/>
        <record jsxtext="MOUSEDOWN" syntax="jsx3.gui.Event.MOUSEDOWN"/>
        <record jsxtext="MOUSEMOVE" syntax="jsx3.gui.Event.MOUSEMOVE"/>
        <record jsxtext="MOUSEOUT" syntax="jsx3.gui.Event.MOUSEOUT"/>
        <record jsxtext="MOUSEOVER" syntax="jsx3.gui.Event.MOUSEOVER"/>
        <record jsxtext="MOUSEUP" syntax="jsx3.gui.Event.MOUSEUP"/>
        <record jsxtext="MOUSEWHEEL" syntax="jsx3.gui.Event.MOUSEWHEEL"/>
        <record jsxtext="RESIZE" syntax="jsx3.gui.Event.RESIZE"/>
        <record jsxtext="UNLOAD" syntax="jsx3.gui.Event.UNLOAD"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="subscribe()" syntax="jsx3.gui.Event.subscribe(strEventId,objHandler,objFunction)"/>
        <record jsxtext="unsubscribe()" syntax="jsx3.gui.Event.unsubscribe(strEventId,objHandler)"/>
        <record jsxtext="unsubscribeAll()" syntax="jsx3.gui.Event.unsubscribeAll(strEventId)"/>
      </record>
      <record jsxtext="altKey()" syntax="altKey()"/>
      <record jsxtext="backspaceKey()" syntax="backspaceKey()"/>
      <record jsxtext="button()" syntax="button()"/>
      <record jsxtext="cancelBubble()" syntax="cancelBubble()"/>
      <record jsxtext="cancelKey()" syntax="cancelKey()"/>
      <record jsxtext="cancelReturn()" syntax="cancelReturn()"/>
      <record jsxtext="clientX()" syntax="clientX()"/>
      <record jsxtext="clientY()" syntax="clientY()"/>
      <record jsxtext="ctrlKey()" syntax="ctrlKey()"/>
      <record jsxtext="deleteKey()" syntax="deleteKey()"/>
      <record jsxtext="downArrow()" syntax="downArrow()"/>
      <record jsxtext="endKey()" syntax="endKey()"/>
      <record jsxtext="enterKey()" syntax="enterKey()"/>
      <record jsxtext="escapeKey()" syntax="escapeKey()"/>
      <record jsxtext="fromElement()" syntax="fromElement()"/>
      <record jsxtext="getTrueX()" syntax="getTrueX()"/>
      <record jsxtext="getTrueY()" syntax="getTrueY()"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="homeKey()" syntax="homeKey()"/>
      <record jsxtext="insertKey()" syntax="insertKey()"/>
      <record jsxtext="isArrowKey()" syntax="isArrowKey()"/>
      <record jsxtext="isFunctionKey()" syntax="isFunctionKey()"/>
      <record jsxtext="keyCode()" syntax="keyCode()"/>
      <record jsxtext="leftArrow()" syntax="leftArrow()"/>
      <record jsxtext="leftButton()" syntax="leftButton()"/>
      <record jsxtext="pageDownKey()" syntax="pageDownKey()"/>
      <record jsxtext="pageUpKey()" syntax="pageUpKey()"/>
      <record jsxtext="rightArrow()" syntax="rightArrow()"/>
      <record jsxtext="rightButton()" syntax="rightButton()"/>
      <record jsxtext="setReturn()" syntax="setReturn(strReturn)"/>
      <record jsxtext="shiftKey()" syntax="shiftKey()"/>
      <record jsxtext="spaceKey()" syntax="spaceKey()"/>
      <record jsxtext="srcElement()" syntax="srcElement()"/>
      <record jsxtext="tabKey()" syntax="tabKey()"/>
      <record jsxtext="toElement()" syntax="toElement()"/>
      <record jsxtext="upArrow()" syntax="upArrow()"/>
    </record>
    <record jsxtext="Form">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTDISABLEDBACKGROUNDCOLOR" syntax="jsx3.gui.Form.DEFAULTDISABLEDBACKGROUNDCOLOR"/>
        <record jsxtext="DEFAULTDISABLEDCOLOR" syntax="jsx3.gui.Form.DEFAULTDISABLEDCOLOR"/>
        <record jsxtext="OPTIONAL" syntax="jsx3.gui.Form.OPTIONAL"/>
        <record jsxtext="REQUIRED" syntax="jsx3.gui.Form.REQUIRED"/>
        <record jsxtext="STATEDISABLED" syntax="jsx3.gui.Form.STATEDISABLED"/>
        <record jsxtext="STATEENABLED" syntax="jsx3.gui.Form.STATEENABLED"/>
        <record jsxtext="STATEINVALID" syntax="jsx3.gui.Form.STATEINVALID"/>
        <record jsxtext="STATEVALID" syntax="jsx3.gui.Form.STATEVALID"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="reset()" syntax="jsx3.gui.Form.reset(objJSXContainer)"/>
        <record jsxtext="validate()" syntax="jsx3.gui.Form.validate(objJSXContainer,objHandler)"/>
      </record>
      <record jsxtext="doKeyBinding()" syntax="doKeyBinding(fctCallback,strKeys)"/>
      <record jsxtext="doReset()" syntax="doReset()"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getDisabledBackgroundColor()" syntax="getDisabledBackgroundColor()"/>
      <record jsxtext="getDisabledColor()" syntax="getDisabledColor()"/>
      <record jsxtext="getEnabled()" syntax="getEnabled()"/>
      <record jsxtext="getKeyBinding()" syntax="getKeyBinding()"/>
      <record jsxtext="getRequired()" syntax="getRequired()"/>
      <record jsxtext="getValidationState()" syntax="getValidationState()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="setDisabledBackgroundColor()" syntax="setDisabledBackgroundColor(strColor)"/>
      <record jsxtext="setDisabledColor()" syntax="setDisabledColor(strColor)"/>
      <record jsxtext="setEnabled()" syntax="setEnabled(intEnabled,bRepaint)"/>
      <record jsxtext="setKeyBinding()" syntax="setKeyBinding(strSequence)"/>
      <record jsxtext="setRequired()" syntax="setRequired(required)"/>
      <record jsxtext="setValidationState()" syntax="setValidationState(intState)"/>
      <record jsxtext="setValue()" syntax="setValue(vntValue)"/>
    </record>
    <record jsxtext="Heavyweight">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTZINDEX" syntax="jsx3.gui.Heavyweight.DEFAULTZINDEX"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="GO()" syntax="jsx3.gui.Heavyweight.GO(strId)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.gui.Heavyweight()" syntax="new jsx3.gui.Heavyweight(strId,objOwner)"/>
      <record jsxtext="addRule()" syntax="addRule(intPixel,strPoint,intOff,strAxis)"/>
      <record jsxtext="addXRule()" syntax="addXRule(objAnchor,strAnchorPoint,strPoint,intOff)"/>
      <record jsxtext="addYRule()" syntax="addYRule(objAnchor,strAnchorPoint,strPoint,intOff)"/>
      <record jsxtext="applyRatio()" syntax="applyRatio(objGUI)"/>
      <record jsxtext="applyRules()" syntax="applyRules(strAxis,intSize)"/>
      <record jsxtext="destroy()" syntax="destroy()"/>
      <record jsxtext="getClassName()" syntax="getClassName()"/>
      <record jsxtext="getDomParent()" syntax="getDomParent()"/>
      <record jsxtext="getHTML()" syntax="getHTML()"/>
      <record jsxtext="getHeight()" syntax="getHeight()"/>
      <record jsxtext="getId()" syntax="getId()"/>
      <record jsxtext="getOverflow()" syntax="getOverflow()"/>
      <record jsxtext="getPoint()" syntax="getPoint(objGUI,strPoint)"/>
      <record jsxtext="getPositionRule()" syntax="getPositionRule(intIndex,strAxis)"/>
      <record jsxtext="getPositionRules()" syntax="getPositionRules()"/>
      <record jsxtext="getRatio()" syntax="getRatio()"/>
      <record jsxtext="getRendered()" syntax="getRendered(objGUI)"/>
      <record jsxtext="getWidth()" syntax="getWidth()"/>
      <record jsxtext="getZIndex()" syntax="getZIndex()"/>
      <record jsxtext="hide()" syntax="hide()"/>
      <record jsxtext="setClassName()" syntax="setClassName(strClassName)"/>
      <record jsxtext="setDomParent()" syntax="setDomParent(objGUI)"/>
      <record jsxtext="setHTML()" syntax="setHTML(strHTML,bRepaint)"/>
      <record jsxtext="setHeight()" syntax="setHeight(intHeight)"/>
      <record jsxtext="setOverflow()" syntax="setOverflow(strOverflow)"/>
      <record jsxtext="setRatio()" syntax="setRatio(vntRatio)"/>
      <record jsxtext="setVisibility()" syntax="setVisibility(strVisibility)"/>
      <record jsxtext="setWidth()" syntax="setWidth(intWidth)"/>
      <record jsxtext="setZIndex()" syntax="setZIndex(intZIndex)"/>
      <record jsxtext="show()" syntax="show(bDisplay)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="HotKey">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="WAS_INVOKED" syntax="jsx3.gui.HotKey.WAS_INVOKED"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="keyDownCharToCode()" syntax="jsx3.gui.HotKey.keyDownCharToCode(strChar)"/>
        <record jsxtext="valueOf()" syntax="jsx3.gui.HotKey.valueOf(strKey,fctCallback)"/>
      </record>
      <record jsxtext="destroy()" syntax="destroy()"/>
      <record jsxtext="getKeyCode()" syntax="getKeyCode()"/>
      <record jsxtext="invoke()" syntax="invoke(objThis,arrArgs)"/>
      <record jsxtext="isDestroyed()" syntax="isDestroyed()"/>
      <record jsxtext="isEnabled()" syntax="isEnabled()"/>
      <record jsxtext="isMatch()" syntax="isMatch(objEvent)"/>
      <record jsxtext="setEnabled()" syntax="setEnabled(bEnabled)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="IFrame">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="SCROLLAUTO" syntax="jsx3.gui.IFrame.SCROLLAUTO"/>
        <record jsxtext="SCROLLNO" syntax="jsx3.gui.IFrame.SCROLLNO"/>
        <record jsxtext="SCROLLYES" syntax="jsx3.gui.IFrame.SCROLLYES"/>
      </record>
      <record jsxtext="getContentDocument()" syntax="getContentDocument()"/>
      <record jsxtext="getIFrame()" syntax="getIFrame()"/>
      <record jsxtext="getIFrameId()" syntax="getIFrameId()"/>
      <record jsxtext="getScrolling()" syntax="getScrolling()"/>
      <record jsxtext="getSrc()" syntax="getSrc()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setScrolling()" syntax="setScrolling(intScrolling)"/>
      <record jsxtext="setSrc()" syntax="setSrc(srcSrc)"/>
    </record>
    <record jsxtext="Image">
      <record jsxtext="getRenderedHeight()" syntax="getRenderedHeight()"/>
      <record jsxtext="getRenderedWidth()" syntax="getRenderedWidth()"/>
      <record jsxtext="getSrc()" syntax="getSrc()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setSrc()" syntax="setSrc(srcSrc)"/>
    </record>
    <record jsxtext="ImageButton">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="STATE_OFF" syntax="jsx3.gui.ImageButton.STATE_OFF"/>
        <record jsxtext="STATE_ON" syntax="jsx3.gui.ImageButton.STATE_ON"/>
        <record jsxtext="TYPE_NORMAL" syntax="jsx3.gui.ImageButton.TYPE_NORMAL"/>
        <record jsxtext="TYPE_TOGGLE" syntax="jsx3.gui.ImageButton.TYPE_TOGGLE"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.gui.ImageButton()" syntax="new jsx3.gui.ImageButton(strName,vntLeft,vntTop,vntWidth,vntHeight)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getDisabledImage()" syntax="getDisabledImage()"/>
      <record jsxtext="getDownImage()" syntax="getDownImage()"/>
      <record jsxtext="getImage()" syntax="getImage()"/>
      <record jsxtext="getOnImage()" syntax="getOnImage()"/>
      <record jsxtext="getOverImage()" syntax="getOverImage()"/>
      <record jsxtext="getState()" syntax="getState()"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="isPreFetch()" syntax="isPreFetch()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setDisabledImage()" syntax="setDisabledImage(strImage)"/>
      <record jsxtext="setDownImage()" syntax="setDownImage(strImage)"/>
      <record jsxtext="setImage()" syntax="setImage(strImage)"/>
      <record jsxtext="setOnImage()" syntax="setOnImage(strImage)"/>
      <record jsxtext="setOverImage()" syntax="setOverImage(strImage)"/>
      <record jsxtext="setPreFetch()" syntax="setPreFetch(bFetch)"/>
      <record jsxtext="setState()" syntax="setState(intState)"/>
      <record jsxtext="setType()" syntax="setType(intType)"/>
    </record>
    <record jsxtext="Interactive">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ADOPT" syntax="jsx3.gui.Interactive.ADOPT"/>
        <record jsxtext="AFTER_APPEND" syntax="jsx3.gui.Interactive.AFTER_APPEND"/>
        <record jsxtext="AFTER_COMMIT" syntax="jsx3.gui.Interactive.AFTER_COMMIT"/>
        <record jsxtext="AFTER_EDIT" syntax="jsx3.gui.Interactive.AFTER_EDIT"/>
        <record jsxtext="AFTER_MOVE" syntax="jsx3.gui.Interactive.AFTER_MOVE"/>
        <record jsxtext="AFTER_REORDER" syntax="jsx3.gui.Interactive.AFTER_REORDER"/>
        <record jsxtext="AFTER_RESIZE" syntax="jsx3.gui.Interactive.AFTER_RESIZE"/>
        <record jsxtext="AFTER_RESIZE_VIEW" syntax="jsx3.gui.Interactive.AFTER_RESIZE_VIEW"/>
        <record jsxtext="AFTER_SORT" syntax="jsx3.gui.Interactive.AFTER_SORT"/>
        <record jsxtext="BEFORE_APPEND" syntax="jsx3.gui.Interactive.BEFORE_APPEND"/>
        <record jsxtext="BEFORE_DROP" syntax="jsx3.gui.Interactive.BEFORE_DROP"/>
        <record jsxtext="BEFORE_EDIT" syntax="jsx3.gui.Interactive.BEFORE_EDIT"/>
        <record jsxtext="BEFORE_MOVE" syntax="jsx3.gui.Interactive.BEFORE_MOVE"/>
        <record jsxtext="BEFORE_RESIZE" syntax="jsx3.gui.Interactive.BEFORE_RESIZE"/>
        <record jsxtext="BEFORE_SELECT" syntax="jsx3.gui.Interactive.BEFORE_SELECT"/>
        <record jsxtext="BEFORE_SORT" syntax="jsx3.gui.Interactive.BEFORE_SORT"/>
        <record jsxtext="CANCEL_DROP" syntax="jsx3.gui.Interactive.CANCEL_DROP"/>
        <record jsxtext="CHANGE" syntax="jsx3.gui.Interactive.CHANGE"/>
        <record jsxtext="CTRL_DROP" syntax="jsx3.gui.Interactive.CTRL_DROP"/>
        <record jsxtext="DATA" syntax="jsx3.gui.Interactive.DATA"/>
        <record jsxtext="DESTROY" syntax="jsx3.gui.Interactive.DESTROY"/>
        <record jsxtext="DRAG" syntax="jsx3.gui.Interactive.DRAG"/>
        <record jsxtext="DROP" syntax="jsx3.gui.Interactive.DROP"/>
        <record jsxtext="EXECUTE" syntax="jsx3.gui.Interactive.EXECUTE"/>
        <record jsxtext="FOCUS_STYLE" syntax="jsx3.gui.Interactive.FOCUS_STYLE"/>
        <record jsxtext="HIDE" syntax="jsx3.gui.Interactive.HIDE"/>
        <record jsxtext="INCR_CHANGE" syntax="jsx3.gui.Interactive.INCR_CHANGE"/>
        <record jsxtext="INPUT" syntax="jsx3.gui.Interactive.INPUT"/>
        <record jsxtext="JSXBLUR" syntax="jsx3.gui.Interactive.JSXBLUR"/>
        <record jsxtext="JSXCHANGE" syntax="jsx3.gui.Interactive.JSXCHANGE"/>
        <record jsxtext="JSXCLICK" syntax="jsx3.gui.Interactive.JSXCLICK"/>
        <record jsxtext="JSXDOUBLECLICK" syntax="jsx3.gui.Interactive.JSXDOUBLECLICK"/>
        <record jsxtext="JSXFOCUS" syntax="jsx3.gui.Interactive.JSXFOCUS"/>
        <record jsxtext="JSXKEYDOWN" syntax="jsx3.gui.Interactive.JSXKEYDOWN"/>
        <record jsxtext="JSXKEYPRESS" syntax="jsx3.gui.Interactive.JSXKEYPRESS"/>
        <record jsxtext="JSXKEYUP" syntax="jsx3.gui.Interactive.JSXKEYUP"/>
        <record jsxtext="JSXLOAD" syntax="jsx3.gui.Interactive.JSXLOAD"/>
        <record jsxtext="JSXMOUSEDOWN" syntax="jsx3.gui.Interactive.JSXMOUSEDOWN"/>
        <record jsxtext="JSXMOUSEOUT" syntax="jsx3.gui.Interactive.JSXMOUSEOUT"/>
        <record jsxtext="JSXMOUSEOVER" syntax="jsx3.gui.Interactive.JSXMOUSEOVER"/>
        <record jsxtext="JSXMOUSEUP" syntax="jsx3.gui.Interactive.JSXMOUSEUP"/>
        <record jsxtext="JSXMOUSEWHEEL" syntax="jsx3.gui.Interactive.JSXMOUSEWHEEL"/>
        <record jsxtext="MENU" syntax="jsx3.gui.Interactive.MENU"/>
        <record jsxtext="SCROLL" syntax="jsx3.gui.Interactive.SCROLL"/>
        <record jsxtext="SELECT" syntax="jsx3.gui.Interactive.SELECT"/>
        <record jsxtext="SHOW" syntax="jsx3.gui.Interactive.SHOW"/>
        <record jsxtext="SPYGLASS" syntax="jsx3.gui.Interactive.SPYGLASS"/>
        <record jsxtext="TOGGLE" syntax="jsx3.gui.Interactive.TOGGLE"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="doEvent()" syntax="doEvent(strType,objContext)"/>
      <record jsxtext="getCanDrag()" syntax="getCanDrag()"/>
      <record jsxtext="getCanDrop()" syntax="getCanDrop()"/>
      <record jsxtext="getCanMove()" syntax="getCanMove()"/>
      <record jsxtext="getCanSpy()" syntax="getCanSpy()"/>
      <record jsxtext="getEvent()" syntax="getEvent(strType)"/>
      <record jsxtext="getEvents()" syntax="getEvents()"/>
      <record jsxtext="getMenu()" syntax="getMenu()"/>
      <record jsxtext="hasEvent()" syntax="hasEvent(strType)"/>
      <record jsxtext="registerHotKey()" syntax="registerHotKey(vntCallback,vntKey,bShift,bControl,bAlt)"/>
      <record jsxtext="removeEvent()" syntax="removeEvent(strType)"/>
      <record jsxtext="removeEvents()" syntax="removeEvents()"/>
      <record jsxtext="setCanDrag()" syntax="setCanDrag(bDrag)"/>
      <record jsxtext="setCanDrop()" syntax="setCanDrop(bDrop)"/>
      <record jsxtext="setCanMove()" syntax="setCanMove(bMovable)"/>
      <record jsxtext="setCanSpy()" syntax="setCanSpy(bSpy)"/>
      <record jsxtext="setEvent()" syntax="setEvent(strScript,strType)"/>
      <record jsxtext="setMenu()" syntax="setMenu(strMenu)"/>
      <record jsxtext="setSpyStyles()" syntax="setSpyStyles(strCSS)"/>
      <record jsxtext="showSpy()" syntax="showSpy(strHTML,intLeft,intTop)"/>
    </record>
    <record jsxtext="Label">
      <record jsxtext="getFor()" syntax="getFor()"/>
      <record jsxtext="setFor()" syntax="setFor(strFor)"/>
    </record>
    <record jsxtext="LayoutGrid">
      <record jsxtext="&amp;middot; Static Fields"/>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.LayoutGrid()" syntax="new jsx3.gui.LayoutGrid(strName)"/>
      <record jsxtext="getCols()" syntax="getCols()"/>
      <record jsxtext="getRows()" syntax="getRows()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setCols()" syntax="setCols(strCols,bRepaint)"/>
      <record jsxtext="setRows()" syntax="setRows(strRows,bRepaint)"/>
    </record>
    <record jsxtext="Matrix.BlockMask">
      <record jsxtext="emBeginEdit()" syntax="emBeginEdit(strValue,objTdDim,objPaneDim,objMatrix,objColumn,strRecordId,objTD)"/>
      <record jsxtext="emEndEdit()" syntax="emEndEdit()"/>
      <record jsxtext="emGetValue()" syntax="emGetValue()"/>
      <record jsxtext="emInit()" syntax="emInit(objColumn)"/>
      <record jsxtext="getMaskFirstResponder()" syntax="getMaskFirstResponder()"/>
      <record jsxtext="getMaskValue()" syntax="getMaskValue()"/>
      <record jsxtext="setMaskValue()" syntax="setMaskValue(strValue)"/>
    </record>
    <record jsxtext="Matrix.Column">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULT_VALIGN" syntax="jsx3.gui.Matrix.Column.DEFAULT_VALIGN"/>
        <record jsxtext="DEFAULT_WIDTH" syntax="jsx3.gui.Matrix.Column.DEFAULT_WIDTH"/>
        <record jsxtext="TYPE_NUMBER" syntax="jsx3.gui.Matrix.Column.TYPE_NUMBER"/>
        <record jsxtext="TYPE_TEXT" syntax="jsx3.gui.Matrix.Column.TYPE_TEXT"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.gui.Matrix.Column()" syntax="new jsx3.gui.Matrix.Column(strName)"/>
      <record jsxtext="getCanSort()" syntax="getCanSort()"/>
      <record jsxtext="getCellBackgroundColor()" syntax="getCellBackgroundColor()"/>
      <record jsxtext="getCellBorder()" syntax="getCellBorder()"/>
      <record jsxtext="getCellColor()" syntax="getCellColor()"/>
      <record jsxtext="getCellCursor()" syntax="getCellCursor()"/>
      <record jsxtext="getCellFontName()" syntax="getCellFontName()"/>
      <record jsxtext="getCellFontSize()" syntax="getCellFontSize()"/>
      <record jsxtext="getCellFontWeight()" syntax="getCellFontWeight()"/>
      <record jsxtext="getCellPadding()" syntax="getCellPadding()"/>
      <record jsxtext="getCellTextAlign()" syntax="getCellTextAlign()"/>
      <record jsxtext="getCellVAlign()" syntax="getCellVAlign()"/>
      <record jsxtext="getCellWrap()" syntax="getCellWrap(strDefault)"/>
      <record jsxtext="getDataType()" syntax="getDataType()"/>
      <record jsxtext="getDisplayIndex()" syntax="getDisplayIndex()"/>
      <record jsxtext="getFormatHandler()" syntax="getFormatHandler()"/>
      <record jsxtext="getPath()" syntax="getPath()"/>
      <record jsxtext="getResizable()" syntax="getResizable()"/>
      <record jsxtext="getSortDataType()" syntax="getSortDataType()"/>
      <record jsxtext="getSortPath()" syntax="getSortPath()"/>
      <record jsxtext="getTriggers()" syntax="getTriggers()"/>
      <record jsxtext="getVAlign()" syntax="getVAlign()"/>
      <record jsxtext="getValueTemplate()" syntax="getValueTemplate(strDefault)"/>
      <record jsxtext="getWrap()" syntax="getWrap(strDefault)"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="repaint()" syntax="repaint()"/>
      <record jsxtext="setBorder()" syntax="setBorder(strCSS)"/>
      <record jsxtext="setCanSort()" syntax="setCanSort(SORT)"/>
      <record jsxtext="setCellBackgroundColor()" syntax="setCellBackgroundColor(strColor)"/>
      <record jsxtext="setCellBorder()" syntax="setCellBorder(strCSS,bSuppressRepaint)"/>
      <record jsxtext="setCellColor()" syntax="setCellColor(strColor)"/>
      <record jsxtext="setCellCursor()" syntax="setCellCursor(strCursor)"/>
      <record jsxtext="setCellFontName()" syntax="setCellFontName(strFontName)"/>
      <record jsxtext="setCellFontSize()" syntax="setCellFontSize(intPixelSize)"/>
      <record jsxtext="setCellFontWeight()" syntax="setCellFontWeight(FONTWEIGHT)"/>
      <record jsxtext="setCellPadding()" syntax="setCellPadding(strCSS,bSuppressRepaint)"/>
      <record jsxtext="setCellTextAlign()" syntax="setCellTextAlign(ALIGN)"/>
      <record jsxtext="setCellVAlign()" syntax="setCellVAlign(VALIGN)"/>
      <record jsxtext="setCellWrap()" syntax="setCellWrap(WRAP)"/>
      <record jsxtext="setDataType()" syntax="setDataType(DATATYPE)"/>
      <record jsxtext="setDisplay()" syntax="setDisplay(DISPLAY,bRepaint)"/>
      <record jsxtext="setFormatHandler()" syntax="setFormatHandler(handler)"/>
      <record jsxtext="setPadding()" syntax="setPadding(strCSS)"/>
      <record jsxtext="setPath()" syntax="setPath(strPath,bSuppressRepaint)"/>
      <record jsxtext="setResizable()" syntax="setResizable(RESIZE)"/>
      <record jsxtext="setSortDataType()" syntax="setSortDataType(DATATYPE)"/>
      <record jsxtext="setSortPath()" syntax="setSortPath(strPath)"/>
      <record jsxtext="setText()" syntax="setText(strText,bRepaint)"/>
      <record jsxtext="setTriggers()" syntax="setTriggers(strTriggers)"/>
      <record jsxtext="setVAlign()" syntax="setVAlign(VALIGN)"/>
      <record jsxtext="setValueTemplate()" syntax="setValueTemplate(TEMPLATE)"/>
      <record jsxtext="setWidth()" syntax="setWidth(vntWidth,bRepaint)"/>
      <record jsxtext="setWrap()" syntax="setWrap(WRAP)"/>
    </record>
    <record jsxtext="Matrix.ColumnFormat">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="getInstance()" syntax="jsx3.gui.Matrix.ColumnFormat.getInstance(strKey,objColumn)"/>
      </record>
      <record jsxtext="format()" syntax="format(objDiv,strCDFKey,objMatrix,objMatrixColumn,intRowNumber,objServer)"/>
      <record jsxtext="validate()" syntax="validate()"/>
    </record>
    <record jsxtext="Matrix.EditMask">
      <record jsxtext="commitEditMask()" syntax="commitEditMask(objEvent,bKeepOpen)"/>
      <record jsxtext="emBeginEdit()" syntax="emBeginEdit(strValue,objTdDim,objPaneDim,objMatrix,objColumn,strRecordId,objTD)"/>
      <record jsxtext="emEndEdit()" syntax="emEndEdit()"/>
      <record jsxtext="emGetSession()" syntax="emGetSession()"/>
      <record jsxtext="emGetValue()" syntax="emGetValue()"/>
      <record jsxtext="emInit()" syntax="emInit(objColumn)"/>
      <record jsxtext="resumeEditSession()" syntax="resumeEditSession()"/>
      <record jsxtext="suspendEditSession()" syntax="suspendEditSession()"/>
    </record>
    <record jsxtext="Matrix">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="APPEND_IMG" syntax="jsx3.gui.Matrix.APPEND_IMG"/>
        <record jsxtext="AUTOROW_FIRST_ROW" syntax="jsx3.gui.Matrix.AUTOROW_FIRST_ROW"/>
        <record jsxtext="AUTOROW_LAST_ROW" syntax="jsx3.gui.Matrix.AUTOROW_LAST_ROW"/>
        <record jsxtext="AUTOROW_NONE" syntax="jsx3.gui.Matrix.AUTOROW_NONE"/>
        <record jsxtext="AUTO_SCROLL_INTERVAL" syntax="jsx3.gui.Matrix.AUTO_SCROLL_INTERVAL"/>
        <record jsxtext="DEFAULTXSLURL" syntax="jsx3.gui.Matrix.DEFAULTXSLURL"/>
        <record jsxtext="DEFAULT_HEADER_HEIGHT" syntax="jsx3.gui.Matrix.DEFAULT_HEADER_HEIGHT"/>
        <record jsxtext="DEFAULT_PANEL_POOL_COUNT" syntax="jsx3.gui.Matrix.DEFAULT_PANEL_POOL_COUNT"/>
        <record jsxtext="DEFAULT_PANEL_QUEUE_SIZE" syntax="jsx3.gui.Matrix.DEFAULT_PANEL_QUEUE_SIZE"/>
        <record jsxtext="DEFAULT_REAPER_INTERVAL" syntax="jsx3.gui.Matrix.DEFAULT_REAPER_INTERVAL"/>
        <record jsxtext="DEFAULT_ROWS_PER_PANEL" syntax="jsx3.gui.Matrix.DEFAULT_ROWS_PER_PANEL"/>
        <record jsxtext="DEFAULT_ROW_HEIGHT" syntax="jsx3.gui.Matrix.DEFAULT_ROW_HEIGHT"/>
        <record jsxtext="FOCUS_STYLE" syntax="jsx3.gui.Matrix.FOCUS_STYLE"/>
        <record jsxtext="ICON" syntax="jsx3.gui.Matrix.ICON"/>
        <record jsxtext="ICON_MINUS" syntax="jsx3.gui.Matrix.ICON_MINUS"/>
        <record jsxtext="ICON_PLUS" syntax="jsx3.gui.Matrix.ICON_PLUS"/>
        <record jsxtext="INSERT_BEFORE_IMG" syntax="jsx3.gui.Matrix.INSERT_BEFORE_IMG"/>
        <record jsxtext="MINIMUM_COLUMN_WIDTH" syntax="jsx3.gui.Matrix.MINIMUM_COLUMN_WIDTH"/>
        <record jsxtext="ON_PAINT_PAGE" syntax="jsx3.gui.Matrix.ON_PAINT_PAGE"/>
        <record jsxtext="PAGING_2PASS" syntax="jsx3.gui.Matrix.PAGING_2PASS"/>
        <record jsxtext="PAGING_CHUNKED" syntax="jsx3.gui.Matrix.PAGING_CHUNKED"/>
        <record jsxtext="PAGING_OFF" syntax="jsx3.gui.Matrix.PAGING_OFF"/>
        <record jsxtext="PAGING_PAGED" syntax="jsx3.gui.Matrix.PAGING_PAGED"/>
        <record jsxtext="PAGING_STEPPED" syntax="jsx3.gui.Matrix.PAGING_STEPPED"/>
        <record jsxtext="SELECTION_BG" syntax="jsx3.gui.Matrix.SELECTION_BG"/>
        <record jsxtext="SELECTION_MULTI_ROW" syntax="jsx3.gui.Matrix.SELECTION_MULTI_ROW"/>
        <record jsxtext="SELECTION_ROW" syntax="jsx3.gui.Matrix.SELECTION_ROW"/>
        <record jsxtext="SELECTION_UNSELECTABLE" syntax="jsx3.gui.Matrix.SELECTION_UNSELECTABLE"/>
        <record jsxtext="SORT_ASCENDING" syntax="jsx3.gui.Matrix.SORT_ASCENDING"/>
        <record jsxtext="SORT_ASCENDING_IMG" syntax="jsx3.gui.Matrix.SORT_ASCENDING_IMG"/>
        <record jsxtext="SORT_DESCENDING" syntax="jsx3.gui.Matrix.SORT_DESCENDING"/>
        <record jsxtext="SORT_DESCENDING_IMG" syntax="jsx3.gui.Matrix.SORT_DESCENDING_IMG"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.gui.Matrix()" syntax="new jsx3.gui.Matrix(strName)"/>
      <record jsxtext="adoptChild()" syntax="adoptChild(objChild,bRepaint,bForce)"/>
      <record jsxtext="commitAutoRowSession()" syntax="commitAutoRowSession(objEvent,intCellIndex)"/>
      <record jsxtext="deleteRecord()" syntax="deleteRecord(strRecordId,bRedraw)"/>
      <record jsxtext="deselectAllRecords()" syntax="deselectAllRecords()"/>
      <record jsxtext="deselectRecord()" syntax="deselectRecord(strRecordId)"/>
      <record jsxtext="doSort()" syntax="doSort(intSortDir)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="executeRecord()" syntax="executeRecord(strRecordId)"/>
      <record jsxtext="focusCellById()" syntax="focusCellById(strCdfId,strAttName)"/>
      <record jsxtext="focusCellByIndex()" syntax="focusCellByIndex(strCdfId,intCellIndex)"/>
      <record jsxtext="focusRowById()" syntax="focusRowById(strCdfId)"/>
      <record jsxtext="getAutoRow()" syntax="getAutoRow()"/>
      <record jsxtext="getAutoRowSession()" syntax="getAutoRowSession()"/>
      <record jsxtext="getBodyBorder()" syntax="getBodyBorder()"/>
      <record jsxtext="getCanReorder()" syntax="getCanReorder()"/>
      <record jsxtext="getCanSort()" syntax="getCanSort()"/>
      <record jsxtext="getContentElement()" syntax="getContentElement(strCdfId,strAttName)"/>
      <record jsxtext="getFixedColumnIndex()" syntax="getFixedColumnIndex(strDefault)"/>
      <record jsxtext="getFocusStyle()" syntax="getFocusStyle(strDefault)"/>
      <record jsxtext="getHeaderBorder()" syntax="getHeaderBorder()"/>
      <record jsxtext="getHeaderHeight()" syntax="getHeaderHeight(strDefault)"/>
      <record jsxtext="getIcon()" syntax="getIcon(strDefault)"/>
      <record jsxtext="getIconMinus()" syntax="getIconMinus(strDefault)"/>
      <record jsxtext="getIconPlus()" syntax="getIconPlus(strDefault)"/>
      <record jsxtext="getPagingModel()" syntax="getPagingModel(strDefault)"/>
      <record jsxtext="getPanelPoolSize()" syntax="getPanelPoolSize(strDefault)"/>
      <record jsxtext="getPanelQueueSize()" syntax="getPanelQueueSize(strDefault)"/>
      <record jsxtext="getReaperInterval()" syntax="getReaperInterval(strDefault)"/>
      <record jsxtext="getRenderNavigators()" syntax="getRenderNavigators(strDefault)"/>
      <record jsxtext="getRenderingContext()" syntax="getRenderingContext(strDefault)"/>
      <record jsxtext="getRenderingModel()" syntax="getRenderingModel(strDefault)"/>
      <record jsxtext="getResizable()" syntax="getResizable()"/>
      <record jsxtext="getRowHeight()" syntax="getRowHeight(strDefault)"/>
      <record jsxtext="getRowsPerPanel()" syntax="getRowsPerPanel(strDefault)"/>
      <record jsxtext="getScaleWidth()" syntax="getScaleWidth()"/>
      <record jsxtext="getScrollInfoLabel()" syntax="getScrollInfoLabel(strDefault)"/>
      <record jsxtext="getScrollLeft()" syntax="getScrollLeft()"/>
      <record jsxtext="getScrollTop()" syntax="getScrollTop()"/>
      <record jsxtext="getSelectedIds()" syntax="getSelectedIds()"/>
      <record jsxtext="getSelectedNodes()" syntax="getSelectedNodes()"/>
      <record jsxtext="getSelectionBG()" syntax="getSelectionBG(strDefault)"/>
      <record jsxtext="getSelectionModel()" syntax="getSelectionModel(strDefault)"/>
      <record jsxtext="getSortDirection()" syntax="getSortDirection()"/>
      <record jsxtext="getSortPath()" syntax="getSortPath()"/>
      <record jsxtext="getSortType()" syntax="getSortType()"/>
      <record jsxtext="getSortedIds()" syntax="getSortedIds()"/>
      <record jsxtext="getSuppressHScroller()" syntax="getSuppressHScroller(strDefault)"/>
      <record jsxtext="getSuppressVScroller()" syntax="getSuppressVScroller(strDefault)"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="insertBefore()" syntax="insertBefore(objMoveChild,objPrecedeChild,bRepaint)"/>
      <record jsxtext="insertRecordProperty()" syntax="insertRecordProperty(strRecordId,strPropName,strPropValue,bRedraw)"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="paintChild()" syntax="paintChild(objJSX,bGroup)"/>
      <record jsxtext="redrawCell()" syntax="redrawCell(strRecordId,objColumn,bSuppressTriggers,objTRXML)"/>
      <record jsxtext="redrawMappedCells()" syntax="redrawMappedCells(strRecordId,strAttName)"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord(strRecordId,intAction,bRecurse)"/>
      <record jsxtext="repaint()" syntax="repaint()"/>
      <record jsxtext="repaintData()" syntax="repaintData()"/>
      <record jsxtext="repaintHead()" syntax="repaintHead()"/>
      <record jsxtext="resetCacheData()" syntax="resetCacheData(objServer)"/>
      <record jsxtext="resetFocusContext()" syntax="resetFocusContext(strId)"/>
      <record jsxtext="resetMask()" syntax="resetMask()"/>
      <record jsxtext="resetXmlCacheData()" syntax="resetXmlCacheData(objServer)"/>
      <record jsxtext="revealRecord()" syntax="revealRecord(strRecordId)"/>
      <record jsxtext="selectRecord()" syntax="selectRecord(strRecordId)"/>
      <record jsxtext="setAutoRow()" syntax="setAutoRow(intBoolean)"/>
      <record jsxtext="setBodyBorder()" syntax="setBodyBorder(strCSS,bSuppressRepaint)"/>
      <record jsxtext="setCanReorder()" syntax="setCanReorder(REORDER)"/>
      <record jsxtext="setCanSort()" syntax="setCanSort(SORT)"/>
      <record jsxtext="setFixedColumnIndex()" syntax="setFixedColumnIndex(intIndex)"/>
      <record jsxtext="setFocusStyle()" syntax="setFocusStyle(strCSS)"/>
      <record jsxtext="setHeaderBorder()" syntax="setHeaderBorder(strCSS)"/>
      <record jsxtext="setHeaderHeight()" syntax="setHeaderHeight(intHeight,bSuppressRepaint)"/>
      <record jsxtext="setIcon()" syntax="setIcon(strURL)"/>
      <record jsxtext="setIconMinus()" syntax="setIconMinus(strURL)"/>
      <record jsxtext="setIconPlus()" syntax="setIconPlus(strURL)"/>
      <record jsxtext="setPagingModel()" syntax="setPagingModel(intModel)"/>
      <record jsxtext="setPanelPoolSize()" syntax="setPanelPoolSize(intCount)"/>
      <record jsxtext="setPanelQueueSize()" syntax="setPanelQueueSize(intCount)"/>
      <record jsxtext="setReaperInterval()" syntax="setReaperInterval(intInterval)"/>
      <record jsxtext="setRenderNavigators()" syntax="setRenderNavigators(intTrueFalse,bSuppressRepaint)"/>
      <record jsxtext="setRenderingContext()" syntax="setRenderingContext(strJsxId,bSuppressRepaint)"/>
      <record jsxtext="setRenderingModel()" syntax="setRenderingModel(MODEL,bSuppressRepaint)"/>
      <record jsxtext="setResizable()" syntax="setResizable(RESIZE)"/>
      <record jsxtext="setRowHeight()" syntax="setRowHeight(intHeight,bSuppressRepaint)"/>
      <record jsxtext="setRowsPerPanel()" syntax="setRowsPerPanel(intCount,bSuppressRepaint)"/>
      <record jsxtext="setScaleWidth()" syntax="setScaleWidth(intBoolean)"/>
      <record jsxtext="setScrollInfoLabel()" syntax="setScrollInfoLabel(strLabel)"/>
      <record jsxtext="setScrollLeft()" syntax="setScrollLeft(intScrollLeft)"/>
      <record jsxtext="setScrollTop()" syntax="setScrollTop(intScrollTop,objGUI)"/>
      <record jsxtext="setSelectionBG()" syntax="setSelectionBG(strURL)"/>
      <record jsxtext="setSelectionModel()" syntax="setSelectionModel(intType)"/>
      <record jsxtext="setSortDirection()" syntax="setSortDirection(intSortDir)"/>
      <record jsxtext="setSortPath()" syntax="setSortPath(strAttr)"/>
      <record jsxtext="setSortType()" syntax="setSortType(DATATYPE)"/>
      <record jsxtext="setSuppressHScroller()" syntax="setSuppressHScroller(intTrueFalse)"/>
      <record jsxtext="setSuppressVScroller()" syntax="setSuppressVScroller(intTrueFalse,bSuppressRepaint)"/>
      <record jsxtext="setValue()" syntax="setValue(strId)"/>
      <record jsxtext="setXMLId()" syntax="setXMLId(strXMLId)"/>
      <record jsxtext="setXMLString()" syntax="setXMLString(strXML)"/>
      <record jsxtext="setXMLURL()" syntax="setXMLURL(strXMLURL)"/>
      <record jsxtext="synchronizeVScroller()" syntax="synchronizeVScroller()"/>
      <record jsxtext="toggleItem()" syntax="toggleItem(strRecordId,bOpen)"/>
    </record>
    <record jsxtext="Menu">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTBACKGROUND" syntax="jsx3.gui.Menu.DEFAULTBACKGROUND"/>
        <record jsxtext="DEFAULTBACKGROUNDCOLOR" syntax="jsx3.gui.Menu.DEFAULTBACKGROUNDCOLOR"/>
        <record jsxtext="DEFAULTCONTEXTLEFTOFFSET" syntax="jsx3.gui.Menu.DEFAULTCONTEXTLEFTOFFSET"/>
        <record jsxtext="DEFAULTXSLURL" syntax="jsx3.gui.Menu.DEFAULTXSLURL"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Menu()" syntax="new jsx3.gui.Menu(strName,strText)"/>
      <record jsxtext="deselectItem()" syntax="deselectItem(strRecordId)"/>
      <record jsxtext="disableItem()" syntax="disableItem(strRecordId)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="enableItem()" syntax="enableItem(strRecordId,bEnabled)"/>
      <record jsxtext="executeRecord()" syntax="executeRecord(strRecordId)"/>
      <record jsxtext="getContextParent()" syntax="getContextParent()"/>
      <record jsxtext="getContextRecordId()" syntax="getContextRecordId()"/>
      <record jsxtext="getDivider()" syntax="getDivider()"/>
      <record jsxtext="getImage()" syntax="getImage()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="isItemEnabled()" syntax="isItemEnabled(strRecordId)"/>
      <record jsxtext="isItemSelected()" syntax="isItemSelected(strRecordId)"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord()"/>
      <record jsxtext="selectItem()" syntax="selectItem(strRecordId,bSelected)"/>
      <record jsxtext="setDivider()" syntax="setDivider(intDivider,bRecalc)"/>
      <record jsxtext="setImage()" syntax="setImage(strURL)"/>
    </record>
    <record jsxtext="NativeButton">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="BUTTON" syntax="jsx3.gui.NativeButton.BUTTON"/>
        <record jsxtext="RESET" syntax="jsx3.gui.NativeButton.RESET"/>
        <record jsxtext="SUBMIT" syntax="jsx3.gui.NativeButton.SUBMIT"/>
      </record>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="setType()" syntax="setType(intType)"/>
    </record>
    <record jsxtext="NativeFileUpload">
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="setValue()" syntax="setValue(strValue)"/>
    </record>
    <record jsxtext="NativeForm">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="BLANK" syntax="jsx3.gui.NativeForm.BLANK"/>
        <record jsxtext="GET" syntax="jsx3.gui.NativeForm.GET"/>
        <record jsxtext="IFRAME" syntax="jsx3.gui.NativeForm.IFRAME"/>
        <record jsxtext="POST" syntax="jsx3.gui.NativeForm.POST"/>
        <record jsxtext="SELF" syntax="jsx3.gui.NativeForm.SELF"/>
        <record jsxtext="TOP" syntax="jsx3.gui.NativeForm.TOP"/>
      </record>
      <record jsxtext="getAction()" syntax="getAction()"/>
      <record jsxtext="getIFrame()" syntax="getIFrame()"/>
      <record jsxtext="getMethod()" syntax="getMethod()"/>
      <record jsxtext="getMultipart()" syntax="getMultipart()"/>
      <record jsxtext="getResponseText()" syntax="getResponseText()"/>
      <record jsxtext="getResponseXML()" syntax="getResponseXML()"/>
      <record jsxtext="getTarget()" syntax="getTarget()"/>
      <record jsxtext="reset()" syntax="reset()"/>
      <record jsxtext="setAction()" syntax="setAction(strAction)"/>
      <record jsxtext="setIFrame()" syntax="setIFrame(strIframe)"/>
      <record jsxtext="setMethod()" syntax="setMethod(strMethod)"/>
      <record jsxtext="setMultipart()" syntax="setMultipart(bMulti)"/>
      <record jsxtext="setTarget()" syntax="setTarget(intTarget)"/>
      <record jsxtext="submit()" syntax="submit()"/>
    </record>
    <record jsxtext="NativeHidden">
      <record jsxtext="doValidate()" syntax="doValidate()"/>
    </record>
    <record jsxtext="NativeSelect">
      <record jsxtext="&amp;middot; new jsx3.gui.NativeSelect()" syntax="new jsx3.gui.NativeSelect(strName,vntLeft,vntTop,vntWidth,vntHeight,strSelectedValue)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getMultiple()" syntax="getMultiple()"/>
      <record jsxtext="getSize()" syntax="getSize()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord(strRecordId,intAction)"/>
      <record jsxtext="setMultiple()" syntax="setMultiple(bMultiple)"/>
      <record jsxtext="setSize()" syntax="setSize(intSize)"/>
      <record jsxtext="setValue()" syntax="setValue(strValue)"/>
    </record>
    <record jsxtext="NumberInput">
      <record jsxtext="getFormat()" syntax="getFormat()"/>
      <record jsxtext="setFormat()" syntax="setFormat(format)"/>
    </record>
    <record jsxtext="Painted">
      <record jsxtext="&amp;middot; new jsx3.gui.Painted()" syntax="new jsx3.gui.Painted(strName)"/>
      <record jsxtext="focus()" syntax="focus()"/>
      <record jsxtext="getAbsolutePosition()" syntax="getAbsolutePosition(objRoot,objGUI)"/>
      <record jsxtext="getAttribute()" syntax="getAttribute(strName)"/>
      <record jsxtext="getAttributes()" syntax="getAttributes()"/>
      <record jsxtext="getRendered()" syntax="getRendered(objGUI)"/>
      <record jsxtext="onAfterPaint()" syntax="onAfterPaint(objGUI)"/>
      <record jsxtext="onAfterRestoreView()" syntax="onAfterRestoreView(objGUI)"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="paintChild()" syntax="paintChild(objChild,bGroup,objGUI,bCascadeOnly)"/>
      <record jsxtext="paintChildren()" syntax="paintChildren(c)"/>
      <record jsxtext="recalcBox()" syntax="recalcBox(properties)"/>
      <record jsxtext="removeAttribute()" syntax="removeAttribute(strName)"/>
      <record jsxtext="removeAttributes()" syntax="removeAttributes()"/>
      <record jsxtext="repaint()" syntax="repaint()"/>
      <record jsxtext="setAttribute()" syntax="setAttribute(strName,strValue)"/>
    </record>
    <record jsxtext="RadioButton">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTCLASSNAME" syntax="jsx3.gui.RadioButton.DEFAULTCLASSNAME"/>
        <record jsxtext="SELECTED" syntax="jsx3.gui.RadioButton.SELECTED"/>
        <record jsxtext="UNSELECTED" syntax="jsx3.gui.RadioButton.UNSELECTED"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.RadioButton()" syntax="new jsx3.gui.RadioButton(strName,vntLeft,vntTop,vntWidth,vntHeight,strText,strValue,strGroupName,intSelected)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getDefaultSelected()" syntax="getDefaultSelected()"/>
      <record jsxtext="getGroupName()" syntax="getGroupName()"/>
      <record jsxtext="getGroupValue()" syntax="getGroupValue()"/>
      <record jsxtext="getSelected()" syntax="getSelected()"/>
      <record jsxtext="getSiblings()" syntax="getSiblings(bRendered)"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setDefaultSelected()" syntax="setDefaultSelected(intSelected)"/>
      <record jsxtext="setGroupName()" syntax="setGroupName(strGroupName)"/>
      <record jsxtext="setGroupValue()" syntax="setGroupValue(strValue)"/>
      <record jsxtext="setSelected()" syntax="setSelected(intSelected,objGUI)"/>
      <record jsxtext="setValue()" syntax="setValue(strValue)"/>
    </record>
    <record jsxtext="Select">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ARROWICON" syntax="jsx3.gui.Select.ARROWICON"/>
        <record jsxtext="DEFAULTCLASSNAME" syntax="jsx3.gui.Select.DEFAULTCLASSNAME"/>
        <record jsxtext="DEFAULTXSLURL" syntax="jsx3.gui.Select.DEFAULTXSLURL"/>
        <record jsxtext="OVERIMAGE" syntax="jsx3.gui.Select.OVERIMAGE"/>
        <record jsxtext="SELECTEDIMAGE" syntax="jsx3.gui.Select.SELECTEDIMAGE"/>
        <record jsxtext="TYPEAHEADDELAY" syntax="jsx3.gui.Select.TYPEAHEADDELAY"/>
        <record jsxtext="TYPECOMBO" syntax="jsx3.gui.Select.TYPECOMBO"/>
        <record jsxtext="TYPESELECT" syntax="jsx3.gui.Select.TYPESELECT"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Select()" syntax="new jsx3.gui.Select(strName,vntLeft,vntTop,vntWidth,vntHeight,strSelectedValue)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="focus()" syntax="focus()"/>
      <record jsxtext="getDefaultText()" syntax="getDefaultText()"/>
      <record jsxtext="getIcon()" syntax="getIcon(strDefault)"/>
      <record jsxtext="getMaxLength()" syntax="getMaxLength()"/>
      <record jsxtext="getText()" syntax="getText()"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="getXSL()" syntax="getXSL()"/>
      <record jsxtext="hide()" syntax="hide(bFocus)"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord(strRecordId,intAction)"/>
      <record jsxtext="setDefaultText()" syntax="setDefaultText(strDefaultText)"/>
      <record jsxtext="setIcon()" syntax="setIcon(strPath)"/>
      <record jsxtext="setMaxLength()" syntax="setMaxLength(intMaxLength)"/>
      <record jsxtext="setType()" syntax="setType(TYPE)"/>
      <record jsxtext="setValue()" syntax="setValue(strRecordId)"/>
      <record jsxtext="show()" syntax="show()"/>
    </record>
    <record jsxtext="Slider">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="HORIZONTAL" syntax="jsx3.gui.Slider.HORIZONTAL"/>
        <record jsxtext="VERTICAL" syntax="jsx3.gui.Slider.VERTICAL"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Slider()" syntax="new jsx3.gui.Slider(strName,vntLeft,vntTop,vntLength)"/>
      <record jsxtext="constrainValue()" syntax="constrainValue(fpValue)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getHandleImage()" syntax="getHandleImage()"/>
      <record jsxtext="getLength()" syntax="getLength()"/>
      <record jsxtext="getOrientation()" syntax="getOrientation()"/>
      <record jsxtext="getPaintTrack()" syntax="getPaintTrack()"/>
      <record jsxtext="getTrackClickable()" syntax="getTrackClickable()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setHandleImage()" syntax="setHandleImage(strUrl)"/>
      <record jsxtext="setLength()" syntax="setLength(vntLength,bRepaint)"/>
      <record jsxtext="setOrientation()" syntax="setOrientation(intValue)"/>
      <record jsxtext="setPaintTrack()" syntax="setPaintTrack(bValue)"/>
      <record jsxtext="setTrackClickable()" syntax="setTrackClickable(bValue)"/>
      <record jsxtext="setValue()" syntax="setValue(fpValue)"/>
    </record>
    <record jsxtext="Sound">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="QUICKTIME" syntax="jsx3.gui.Sound.QUICKTIME"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.gui.Sound()" syntax="new jsx3.gui.Sound(strName,strURL)"/>
      <record jsxtext="getLength()" syntax="getLength()"/>
      <record jsxtext="getPluginVersion()" syntax="getPluginVersion()"/>
      <record jsxtext="getPosition()" syntax="getPosition()"/>
      <record jsxtext="getURL()" syntax="getURL()"/>
      <record jsxtext="getVolume()" syntax="getVolume()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="pause()" syntax="pause()"/>
      <record jsxtext="play()" syntax="play()"/>
      <record jsxtext="rewind()" syntax="rewind()"/>
      <record jsxtext="setPosition()" syntax="setPosition(position)"/>
      <record jsxtext="setURL()" syntax="setURL(strURL)"/>
      <record jsxtext="setVolume()" syntax="setVolume(intVolume)"/>
    </record>
    <record jsxtext="Splitter">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ORIENTATIONH" syntax="jsx3.gui.Splitter.ORIENTATIONH"/>
        <record jsxtext="ORIENTATIONV" syntax="jsx3.gui.Splitter.ORIENTATIONV"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Splitter()" syntax="new jsx3.gui.Splitter(strName,ORIENTATION)"/>
      <record jsxtext="getEnabled()" syntax="getEnabled()"/>
      <record jsxtext="getHSplitImage()" syntax="getHSplitImage()"/>
      <record jsxtext="getOrientation()" syntax="getOrientation()"/>
      <record jsxtext="getSubcontainer1Min()" syntax="getSubcontainer1Min()"/>
      <record jsxtext="getSubcontainer1Pct()" syntax="getSubcontainer1Pct()"/>
      <record jsxtext="getSubcontainer2Min()" syntax="getSubcontainer2Min()"/>
      <record jsxtext="getVSplitImage()" syntax="getVSplitImage()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="paintChild()" syntax="paintChild(objJSXChild,bGroup)"/>
      <record jsxtext="setEnabled()" syntax="setEnabled(intEnabled)"/>
      <record jsxtext="setHSplitImage()" syntax="setHSplitImage(strURL)"/>
      <record jsxtext="setOrientation()" syntax="setOrientation(ORIENTATION)"/>
      <record jsxtext="setSubcontainer1Min()" syntax="setSubcontainer1Min(intMin)"/>
      <record jsxtext="setSubcontainer1Pct()" syntax="setSubcontainer1Pct(strSubcontainerPct,bView)"/>
      <record jsxtext="setSubcontainer2Min()" syntax="setSubcontainer2Min(intMin)"/>
      <record jsxtext="setVSplitImage()" syntax="setVSplitImage(strURL)"/>
    </record>
    <record jsxtext="Stack">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ACTIVECOLOR" syntax="jsx3.gui.Stack.ACTIVECOLOR"/>
        <record jsxtext="BACKGROUND" syntax="jsx3.gui.Stack.BACKGROUND"/>
        <record jsxtext="BORDER" syntax="jsx3.gui.Stack.BORDER"/>
        <record jsxtext="CHILDBGCOLOR" syntax="jsx3.gui.Stack.CHILDBGCOLOR"/>
        <record jsxtext="INACTIVECOLOR" syntax="jsx3.gui.Stack.INACTIVECOLOR"/>
        <record jsxtext="ORIENTATIONH" syntax="jsx3.gui.Stack.ORIENTATIONH"/>
        <record jsxtext="ORIENTATIONV" syntax="jsx3.gui.Stack.ORIENTATIONV"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Stack()" syntax="new jsx3.gui.Stack(strName,strCaption)"/>
      <record jsxtext="doShow()" syntax="doShow()"/>
      <record jsxtext="focus()" syntax="focus()"/>
      <record jsxtext="getActiveColor()" syntax="getActiveColor()"/>
      <record jsxtext="getContentChild()" syntax="getContentChild()"/>
      <record jsxtext="getInactiveColor()" syntax="getInactiveColor()"/>
      <record jsxtext="isFront()" syntax="isFront()"/>
      <record jsxtext="onSetParent()" syntax="onSetParent(objParent)"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setActiveColor()" syntax="setActiveColor(strActiveColor)"/>
      <record jsxtext="setInactiveColor()" syntax="setInactiveColor(strInactiveColor)"/>
    </record>
    <record jsxtext="StackGroup">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTBARSIZE" syntax="jsx3.gui.StackGroup.DEFAULTBARSIZE"/>
        <record jsxtext="ORIENTATIONH" syntax="jsx3.gui.StackGroup.ORIENTATIONH"/>
        <record jsxtext="ORIENTATIONV" syntax="jsx3.gui.StackGroup.ORIENTATIONV"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.StackGroup()" syntax="new jsx3.gui.StackGroup(strName)"/>
      <record jsxtext="getBarSize()" syntax="getBarSize()"/>
      <record jsxtext="getOrientation()" syntax="getOrientation()"/>
      <record jsxtext="getSelectedIndex()" syntax="getSelectedIndex()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setBarSize()" syntax="setBarSize(intBarSize)"/>
      <record jsxtext="setOrientation()" syntax="setOrientation(intOrientation)"/>
    </record>
    <record jsxtext="Tab">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ACTIVEBEVEL" syntax="jsx3.gui.Tab.ACTIVEBEVEL"/>
        <record jsxtext="CHILDBGCOLOR" syntax="jsx3.gui.Tab.CHILDBGCOLOR"/>
        <record jsxtext="DEFAULTACTIVECOLOR" syntax="jsx3.gui.Tab.DEFAULTACTIVECOLOR"/>
        <record jsxtext="DEFAULTBEVELIMAGE" syntax="jsx3.gui.Tab.DEFAULTBEVELIMAGE"/>
        <record jsxtext="DEFAULTINACTIVECOLOR" syntax="jsx3.gui.Tab.DEFAULTINACTIVECOLOR"/>
        <record jsxtext="INACTIVEBEVEL" syntax="jsx3.gui.Tab.INACTIVEBEVEL"/>
        <record jsxtext="STATEDISABLED" syntax="jsx3.gui.Tab.STATEDISABLED"/>
        <record jsxtext="STATEENABLED" syntax="jsx3.gui.Tab.STATEENABLED"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Tab()" syntax="new jsx3.gui.Tab(strName,strText,vntWidth,strHexActiveColor,strHexInactiveColor)"/>
      <record jsxtext="doShow()" syntax="doShow()"/>
      <record jsxtext="getActiveColor()" syntax="getActiveColor()"/>
      <record jsxtext="getBevel()" syntax="getBevel()"/>
      <record jsxtext="getContentChild()" syntax="getContentChild()"/>
      <record jsxtext="getEnabled()" syntax="getEnabled()"/>
      <record jsxtext="getInactiveColor()" syntax="getInactiveColor()"/>
      <record jsxtext="isFront()" syntax="isFront()"/>
      <record jsxtext="onSetParent()" syntax="onSetParent(objParent)"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setActiveColor()" syntax="setActiveColor(strActiveColor)"/>
      <record jsxtext="setBevel()" syntax="setBevel(strURL)"/>
      <record jsxtext="setEnabled()" syntax="setEnabled(STATE)"/>
      <record jsxtext="setInactiveColor()" syntax="setInactiveColor(strInactiveColor)"/>
      <record jsxtext="setText()" syntax="setText(strText,bRepaint)"/>
    </record>
    <record jsxtext="TabbedPane">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="AUTO_SCROLL_INTERVAL" syntax="jsx3.gui.TabbedPane.AUTO_SCROLL_INTERVAL"/>
        <record jsxtext="CONTENTBORDER" syntax="jsx3.gui.TabbedPane.CONTENTBORDER"/>
        <record jsxtext="DEFAULTTABHEIGHT" syntax="jsx3.gui.TabbedPane.DEFAULTTABHEIGHT"/>
        <record jsxtext="LSCROLLER" syntax="jsx3.gui.TabbedPane.LSCROLLER"/>
        <record jsxtext="RSCROLLER" syntax="jsx3.gui.TabbedPane.RSCROLLER"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.TabbedPane()" syntax="new jsx3.gui.TabbedPane(strName)"/>
      <record jsxtext="getSelectedIndex()" syntax="getSelectedIndex()"/>
      <record jsxtext="getShowTabs()" syntax="getShowTabs()"/>
      <record jsxtext="getTabHeight()" syntax="getTabHeight()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setSelectedIndex()" syntax="setSelectedIndex(intIndex,bRepaint)"/>
      <record jsxtext="setShowTabs()" syntax="setShowTabs(intShowTabs)"/>
      <record jsxtext="setTabHeight()" syntax="setTabHeight(intTabHeight)"/>
    </record>
    <record jsxtext="Table">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTXSLURL" syntax="jsx3.gui.Table.DEFAULTXSLURL"/>
        <record jsxtext="DEFAULT_CELL_VALUE_TEMPLATE" syntax="jsx3.gui.Table.DEFAULT_CELL_VALUE_TEMPLATE"/>
        <record jsxtext="DEFAULT_HEADER_HEIGHT" syntax="jsx3.gui.Table.DEFAULT_HEADER_HEIGHT"/>
        <record jsxtext="SELECTION_BG" syntax="jsx3.gui.Table.SELECTION_BG"/>
        <record jsxtext="SELECTION_MULTI_ROW" syntax="jsx3.gui.Table.SELECTION_MULTI_ROW"/>
        <record jsxtext="SELECTION_ROW" syntax="jsx3.gui.Table.SELECTION_ROW"/>
        <record jsxtext="SELECTION_UNSELECTABLE" syntax="jsx3.gui.Table.SELECTION_UNSELECTABLE"/>
        <record jsxtext="SORT_ASCENDING" syntax="jsx3.gui.Table.SORT_ASCENDING"/>
        <record jsxtext="SORT_ASCENDING_IMG" syntax="jsx3.gui.Table.SORT_ASCENDING_IMG"/>
        <record jsxtext="SORT_DESCENDING" syntax="jsx3.gui.Table.SORT_DESCENDING"/>
        <record jsxtext="SORT_DESCENDING_IMG" syntax="jsx3.gui.Table.SORT_DESCENDING_IMG"/>
        <record jsxtext="TYPE_NUMBER" syntax="jsx3.gui.Table.TYPE_NUMBER"/>
        <record jsxtext="TYPE_TEXT" syntax="jsx3.gui.Table.TYPE_TEXT"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.gui.Table()" syntax="new jsx3.gui.Table(strName)"/>
      <record jsxtext="deselectAllRecords()" syntax="deselectAllRecords()"/>
      <record jsxtext="deselectRecord()" syntax="deselectRecord(strRecordId)"/>
      <record jsxtext="doSort()" syntax="doSort(intSortDir)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="focusRowById()" syntax="focusRowById(strCdfId)"/>
      <record jsxtext="getAlternateRowClass()" syntax="getAlternateRowClass(strDefault)"/>
      <record jsxtext="getAlternateRowStyle()" syntax="getAlternateRowStyle(strDefault)"/>
      <record jsxtext="getCanSort()" syntax="getCanSort()"/>
      <record jsxtext="getCellClass()" syntax="getCellClass()"/>
      <record jsxtext="getCellStyle()" syntax="getCellStyle()"/>
      <record jsxtext="getColumnProfile()" syntax="getColumnProfile()"/>
      <record jsxtext="getColumnProfileDocument()" syntax="getColumnProfileDocument()"/>
      <record jsxtext="getContentElement()" syntax="getContentElement(strCdfId,strAttName)"/>
      <record jsxtext="getHeaderClass()" syntax="getHeaderClass(strDefault)"/>
      <record jsxtext="getHeaderHeight()" syntax="getHeaderHeight(strDefault)"/>
      <record jsxtext="getHeaderStyle()" syntax="getHeaderStyle(strDefault)"/>
      <record jsxtext="getNoDataMessage()" syntax="getNoDataMessage()"/>
      <record jsxtext="getRenderingContext()" syntax="getRenderingContext(strDefault)"/>
      <record jsxtext="getRowClass()" syntax="getRowClass()"/>
      <record jsxtext="getRowStyle()" syntax="getRowStyle()"/>
      <record jsxtext="getSelectedIds()" syntax="getSelectedIds()"/>
      <record jsxtext="getSelectedNodes()" syntax="getSelectedNodes()"/>
      <record jsxtext="getSelectionBG()" syntax="getSelectionBG(strDefault)"/>
      <record jsxtext="getSelectionModel()" syntax="getSelectionModel(strDefault)"/>
      <record jsxtext="getSortDirection()" syntax="getSortDirection()"/>
      <record jsxtext="getSortPath()" syntax="getSortPath()"/>
      <record jsxtext="getSortType()" syntax="getSortType()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="getValueTemplate()" syntax="getValueTemplate(strDefault)"/>
      <record jsxtext="getWrap()" syntax="getWrap(strDefault)"/>
      <record jsxtext="getXSL()" syntax="getXSL()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord(strRecordId,ACTION)"/>
      <record jsxtext="repaintData()" syntax="repaintData()"/>
      <record jsxtext="repaintHead()" syntax="repaintHead()"/>
      <record jsxtext="selectRecord()" syntax="selectRecord(strRecordId)"/>
      <record jsxtext="setAlternateRowClass()" syntax="setAlternateRowClass(strRuleName)"/>
      <record jsxtext="setAlternateRowStyle()" syntax="setAlternateRowStyle(strCSS)"/>
      <record jsxtext="setCanSort()" syntax="setCanSort(SORT)"/>
      <record jsxtext="setCellClass()" syntax="setCellClass(strRuleName)"/>
      <record jsxtext="setCellStyle()" syntax="setCellStyle(strCSS)"/>
      <record jsxtext="setColumnProfile()" syntax="setColumnProfile(objCDF)"/>
      <record jsxtext="setHeaderClass()" syntax="setHeaderClass(strRuleName)"/>
      <record jsxtext="setHeaderHeight()" syntax="setHeaderHeight(intHeight,bSuppressRepaint)"/>
      <record jsxtext="setHeaderStyle()" syntax="setHeaderStyle(strCSS)"/>
      <record jsxtext="setRenderingContext()" syntax="setRenderingContext(strJsxId,bSuppressRepaint)"/>
      <record jsxtext="setRowClass()" syntax="setRowClass(strRuleName)"/>
      <record jsxtext="setRowStyle()" syntax="setRowStyle(strCSS)"/>
      <record jsxtext="setSelectionBG()" syntax="setSelectionBG(strURL)"/>
      <record jsxtext="setSelectionModel()" syntax="setSelectionModel(intType)"/>
      <record jsxtext="setSortDirection()" syntax="setSortDirection(intSortDir)"/>
      <record jsxtext="setSortPath()" syntax="setSortPath(strAttr)"/>
      <record jsxtext="setSortType()" syntax="setSortType(DATATYPE)"/>
      <record jsxtext="setValue()" syntax="setValue(strId)"/>
      <record jsxtext="setValueTemplate()" syntax="setValueTemplate(TEMPLATE)"/>
      <record jsxtext="setWrap()" syntax="setWrap(WRAP)"/>
    </record>
    <record jsxtext="Template.Block">
      <record jsxtext="&amp;middot; new jsx3.gui.Template.Block()" syntax="new jsx3.gui.Template.Block(strName,vntLeft,vntTop,vntWidth,vntHeight)"/>
      <record jsxtext="clearBoxProfile()" syntax="clearBoxProfile(bRecurse)"/>
      <record jsxtext="getRenderedBox()" syntax="getRenderedBox(strId,objRoot)"/>
      <record jsxtext="getTemplateXML()" syntax="getTemplateXML()"/>
      <record jsxtext="recalc()" syntax="recalc()"/>
      <record jsxtext="setProperty()" syntax="setProperty(strName,strValue)"/>
      <record jsxtext="setPropertyGUI()" syntax="setPropertyGUI(objGUI,strName,strValue)"/>
      <record jsxtext="syncProperty()" syntax="syncProperty(strPropName,VIEW,objGUI)"/>
    </record>
    <record jsxtext="Template">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="addLibrary()" syntax="jsx3.gui.Template.addLibrary(strLibraryId,arrLibrary)"/>
        <record jsxtext="addResolver()" syntax="jsx3.gui.Template.addResolver(strSetId,strResolverId,objResolver,META)"/>
        <record jsxtext="compile()" syntax="jsx3.gui.Template.compile(Markup,objClass,bCache)"/>
        <record jsxtext="precompile()" syntax="jsx3.gui.Template.precompile(strClassName,strPrototypeName,strQualifiedName)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.gui.Template()" syntax="new jsx3.gui.Template()"/>
    </record>
    <record jsxtext="TextBox">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTBACKGROUNDCOLOR" syntax="jsx3.gui.TextBox.DEFAULTBACKGROUNDCOLOR"/>
        <record jsxtext="DEFAULTCLASSNAME" syntax="jsx3.gui.TextBox.DEFAULTCLASSNAME"/>
        <record jsxtext="OVERFLOWAUTO" syntax="jsx3.gui.TextBox.OVERFLOWAUTO"/>
        <record jsxtext="OVERFLOWNORMAL" syntax="jsx3.gui.TextBox.OVERFLOWNORMAL"/>
        <record jsxtext="OVERFLOWSCROLL" syntax="jsx3.gui.TextBox.OVERFLOWSCROLL"/>
        <record jsxtext="TYPEPASSWORD" syntax="jsx3.gui.TextBox.TYPEPASSWORD"/>
        <record jsxtext="TYPETEXT" syntax="jsx3.gui.TextBox.TYPETEXT"/>
        <record jsxtext="TYPETEXTAREA" syntax="jsx3.gui.TextBox.TYPETEXTAREA"/>
        <record jsxtext="VALIDATIONEMAIL" syntax="jsx3.gui.TextBox.VALIDATIONEMAIL"/>
        <record jsxtext="VALIDATIONLETTER" syntax="jsx3.gui.TextBox.VALIDATIONLETTER"/>
        <record jsxtext="VALIDATIONNONE" syntax="jsx3.gui.TextBox.VALIDATIONNONE"/>
        <record jsxtext="VALIDATIONNUMBER" syntax="jsx3.gui.TextBox.VALIDATIONNUMBER"/>
        <record jsxtext="VALIDATIONPHONE" syntax="jsx3.gui.TextBox.VALIDATIONPHONE"/>
        <record jsxtext="VALIDATIONSSN" syntax="jsx3.gui.TextBox.VALIDATIONSSN"/>
        <record jsxtext="VALIDATIONUSZIP" syntax="jsx3.gui.TextBox.VALIDATIONUSZIP"/>
        <record jsxtext="WRAPNO" syntax="jsx3.gui.TextBox.WRAPNO"/>
        <record jsxtext="WRAPYES" syntax="jsx3.gui.TextBox.WRAPYES"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.TextBox()" syntax="new jsx3.gui.TextBox(strName,vntLeft,vntTop,vntWidth,vntHeight,strValue,TYPE)"/>
      <record jsxtext="beep()" syntax="beep()"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="formatValue()" syntax="formatValue(value)"/>
      <record jsxtext="getDefaultValue()" syntax="getDefaultValue()"/>
      <record jsxtext="getMaxLength()" syntax="getMaxLength()"/>
      <record jsxtext="getReadonly()" syntax="getReadonly()"/>
      <record jsxtext="getSelection()" syntax="getSelection()"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="getValidationExpression()" syntax="getValidationExpression()"/>
      <record jsxtext="getValidationType()" syntax="getValidationType()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="getWrap()" syntax="getWrap()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="parseValue()" syntax="parseValue(input)"/>
      <record jsxtext="setDefaultValue()" syntax="setDefaultValue(strValue)"/>
      <record jsxtext="setMaxLength()" syntax="setMaxLength(intMaxLength)"/>
      <record jsxtext="setOverflow()" syntax="setOverflow(OVERFLOW)"/>
      <record jsxtext="setReadonly()" syntax="setReadonly(val)"/>
      <record jsxtext="setSelection()" syntax="setSelection(intStart,intEnd)"/>
      <record jsxtext="setType()" syntax="setType(TYPE)"/>
      <record jsxtext="setValidationExpression()" syntax="setValidationExpression(strValidationExpression)"/>
      <record jsxtext="setValidationType()" syntax="setValidationType(VALIDATIONTYPE)"/>
      <record jsxtext="setValue()" syntax="setValue(strValue)"/>
      <record jsxtext="setWrap()" syntax="setWrap(bWrap)"/>
    </record>
    <record jsxtext="TimePicker">
      <record jsxtext="&amp;middot; new jsx3.gui.TimePicker()" syntax="new jsx3.gui.TimePicker(strName,intLeft,intTop,intHeight)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getDate()" syntax="getDate(objDate)"/>
      <record jsxtext="getHours()" syntax="getHours()"/>
      <record jsxtext="getMilliseconds()" syntax="getMilliseconds()"/>
      <record jsxtext="getMinutes()" syntax="getMinutes()"/>
      <record jsxtext="getSeconds()" syntax="getSeconds()"/>
      <record jsxtext="getShowMillis()" syntax="getShowMillis()"/>
      <record jsxtext="getShowSeconds()" syntax="getShowSeconds()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="is24Hour()" syntax="is24Hour()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="set24Hour()" syntax="set24Hour(b24Hour)"/>
      <record jsxtext="setDate()" syntax="setDate(objDate)"/>
      <record jsxtext="setFontSize()" syntax="setFontSize(intPixelSize)"/>
      <record jsxtext="setHours()" syntax="setHours(intHours)"/>
      <record jsxtext="setMilliseconds()" syntax="setMilliseconds(intMillis)"/>
      <record jsxtext="setMinutes()" syntax="setMinutes(intMinutes)"/>
      <record jsxtext="setSeconds()" syntax="setSeconds(intSeconds)"/>
      <record jsxtext="setShowMillis()" syntax="setShowMillis(bShow)"/>
      <record jsxtext="setShowSeconds()" syntax="setShowSeconds(bShow)"/>
      <record jsxtext="setValue()" syntax="setValue(vntValue)"/>
    </record>
    <record jsxtext="ToolbarButton">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="STATEOFF" syntax="jsx3.gui.ToolbarButton.STATEOFF"/>
        <record jsxtext="STATEON" syntax="jsx3.gui.ToolbarButton.STATEON"/>
        <record jsxtext="TYPECHECK" syntax="jsx3.gui.ToolbarButton.TYPECHECK"/>
        <record jsxtext="TYPENORMAL" syntax="jsx3.gui.ToolbarButton.TYPENORMAL"/>
        <record jsxtext="TYPERADIO" syntax="jsx3.gui.ToolbarButton.TYPERADIO"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.ToolbarButton()" syntax="new jsx3.gui.ToolbarButton(strName,intType,strTip)"/>
      <record jsxtext="doExecute()" syntax="doExecute(objEvent)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="getDisabledImage()" syntax="getDisabledImage()"/>
      <record jsxtext="getDivider()" syntax="getDivider()"/>
      <record jsxtext="getGroupName()" syntax="getGroupName()"/>
      <record jsxtext="getImage()" syntax="getImage()"/>
      <record jsxtext="getState()" syntax="getState()"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setDisabledImage()" syntax="setDisabledImage(strURL)"/>
      <record jsxtext="setDivider()" syntax="setDivider(intDivider,bRecalc)"/>
      <record jsxtext="setGroupName()" syntax="setGroupName(strGroupName)"/>
      <record jsxtext="setImage()" syntax="setImage(strURL)"/>
      <record jsxtext="setState()" syntax="setState(intState)"/>
      <record jsxtext="setType()" syntax="setType(TYPE)"/>
    </record>
    <record jsxtext="Tree">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="APPEND_IMG" syntax="jsx3.gui.Tree.APPEND_IMG"/>
        <record jsxtext="DEFAULTBACKGROUNDCOLOR" syntax="jsx3.gui.Tree.DEFAULTBACKGROUNDCOLOR"/>
        <record jsxtext="DEFAULTNODATAMSG" syntax="jsx3.gui.Tree.DEFAULTNODATAMSG"/>
        <record jsxtext="DEFAULTXSLURL" syntax="jsx3.gui.Tree.DEFAULTXSLURL"/>
        <record jsxtext="ICON" syntax="jsx3.gui.Tree.ICON"/>
        <record jsxtext="ICONMINUS" syntax="jsx3.gui.Tree.ICONMINUS"/>
        <record jsxtext="ICONPLUS" syntax="jsx3.gui.Tree.ICONPLUS"/>
        <record jsxtext="INSERT_BEFORE_IMG" syntax="jsx3.gui.Tree.INSERT_BEFORE_IMG"/>
        <record jsxtext="MULTI" syntax="jsx3.gui.Tree.MULTI"/>
        <record jsxtext="SELECTEDIMAGE" syntax="jsx3.gui.Tree.SELECTEDIMAGE"/>
        <record jsxtext="SINGLE" syntax="jsx3.gui.Tree.SINGLE"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.Tree()" syntax="new jsx3.gui.Tree(strName,strId)"/>
      <record jsxtext="doValidate()" syntax="doValidate()"/>
      <record jsxtext="executeRecord()" syntax="executeRecord(strRecordId)"/>
      <record jsxtext="getIcon()" syntax="getIcon()"/>
      <record jsxtext="getIconMinus()" syntax="getIconMinus()"/>
      <record jsxtext="getIconPlus()" syntax="getIconPlus()"/>
      <record jsxtext="getMultiSelect()" syntax="getMultiSelect()"/>
      <record jsxtext="getNoDataMessage()" syntax="getNoDataMessage()"/>
      <record jsxtext="getRoot()" syntax="getRoot()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="getXSL()" syntax="getXSL()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord(strRecordId,ACTION)"/>
      <record jsxtext="revealRecord()" syntax="revealRecord(strRecordId,objJSX)"/>
      <record jsxtext="setIcon()" syntax="setIcon(strURL)"/>
      <record jsxtext="setIconMinus()" syntax="setIconMinus(strURL)"/>
      <record jsxtext="setIconPlus()" syntax="setIconPlus(strURL)"/>
      <record jsxtext="setMultiSelect()" syntax="setMultiSelect(intMulti)"/>
      <record jsxtext="setRoot()" syntax="setRoot(bBoolean)"/>
      <record jsxtext="setValue()" syntax="setValue(strRecordId,bReveal)"/>
      <record jsxtext="toggleItem()" syntax="toggleItem(strRecordId,bOpen)"/>
    </record>
    <record jsxtext="Window">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DID_FOCUS" syntax="jsx3.gui.Window.DID_FOCUS"/>
        <record jsxtext="DID_OPEN" syntax="jsx3.gui.Window.DID_OPEN"/>
        <record jsxtext="DID_RESIZE" syntax="jsx3.gui.Window.DID_RESIZE"/>
        <record jsxtext="PARENT_DID_CLOSE" syntax="jsx3.gui.Window.PARENT_DID_CLOSE"/>
        <record jsxtext="WILL_CLOSE" syntax="jsx3.gui.Window.WILL_CLOSE"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.gui.Window()" syntax="new jsx3.gui.Window(strName)"/>
      <record jsxtext="close()" syntax="close()"/>
      <record jsxtext="constrainToScreen()" syntax="constrainToScreen()"/>
      <record jsxtext="doClose()" syntax="doClose()"/>
      <record jsxtext="focus()" syntax="focus()"/>
      <record jsxtext="getHeight()" syntax="getHeight()"/>
      <record jsxtext="getOffsetLeft()" syntax="getOffsetLeft()"/>
      <record jsxtext="getOffsetTop()" syntax="getOffsetTop()"/>
      <record jsxtext="getRootBlock()" syntax="getRootBlock()"/>
      <record jsxtext="getTitle()" syntax="getTitle()"/>
      <record jsxtext="getWidth()" syntax="getWidth()"/>
      <record jsxtext="isDependent()" syntax="isDependent()"/>
      <record jsxtext="isOpen()" syntax="isOpen()"/>
      <record jsxtext="isParentOpen()" syntax="isParentOpen()"/>
      <record jsxtext="isResizable()" syntax="isResizable()"/>
      <record jsxtext="isScrollable()" syntax="isScrollable()"/>
      <record jsxtext="moveTo()" syntax="moveTo(intOffsetLeft,intOffsetTop)"/>
      <record jsxtext="open()" syntax="open()"/>
      <record jsxtext="repaint()" syntax="repaint()"/>
      <record jsxtext="setDependent()" syntax="setDependent(bDependent)"/>
      <record jsxtext="setHeight()" syntax="setHeight(intHeight)"/>
      <record jsxtext="setResizable()" syntax="setResizable(bResizable)"/>
      <record jsxtext="setScrollable()" syntax="setScrollable(bScrollable)"/>
      <record jsxtext="setTitle()" syntax="setTitle(strTitle)"/>
      <record jsxtext="setWidth()" syntax="setWidth(intWidth)"/>
      <record jsxtext="toString()" syntax="toString(strTitle)"/>
    </record>
    <record jsxtext="WindowBar">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULTBACKGROUND" syntax="jsx3.gui.WindowBar.DEFAULTBACKGROUND"/>
        <record jsxtext="DEFAULTBG" syntax="jsx3.gui.WindowBar.DEFAULTBG"/>
        <record jsxtext="DEFAULTBGCAPTION" syntax="jsx3.gui.WindowBar.DEFAULTBGCAPTION"/>
        <record jsxtext="DEFAULTBORDER" syntax="jsx3.gui.WindowBar.DEFAULTBORDER"/>
        <record jsxtext="DEFAULTBORDERCAPTION" syntax="jsx3.gui.WindowBar.DEFAULTBORDERCAPTION"/>
        <record jsxtext="DEFAULTFONTSIZE" syntax="jsx3.gui.WindowBar.DEFAULTFONTSIZE"/>
        <record jsxtext="DEFAULTFONTWEIGHT" syntax="jsx3.gui.WindowBar.DEFAULTFONTWEIGHT"/>
        <record jsxtext="DEFAULTHEIGHT" syntax="jsx3.gui.WindowBar.DEFAULTHEIGHT"/>
        <record jsxtext="TYPECAPTION" syntax="jsx3.gui.WindowBar.TYPECAPTION"/>
        <record jsxtext="TYPEMENU" syntax="jsx3.gui.WindowBar.TYPEMENU"/>
        <record jsxtext="TYPETASK" syntax="jsx3.gui.WindowBar.TYPETASK"/>
        <record jsxtext="TYPETOOL" syntax="jsx3.gui.WindowBar.TYPETOOL"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.gui.WindowBar()" syntax="new jsx3.gui.WindowBar(strName,TYPE)"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="setText()" syntax="setText(strText,bRepaint)"/>
      <record jsxtext="setType()" syntax="setType(TYPE)"/>
    </record>
  </record>
  <record jsxtext="jsx3.html">
    <record jsxtext="&amp;middot; Static Methods">
      <record jsxtext="copy()" syntax="jsx3.html.copy(strText)"/>
      <record jsxtext="getJSXParent()" syntax="jsx3.html.getJSXParent(objGUI,objServer)"/>
      <record jsxtext="getOuterHTML()" syntax="jsx3.html.getOuterHTML(objElement)"/>
      <record jsxtext="loadImages()" syntax="jsx3.html.loadImages(varImages)"/>
      <record jsxtext="paste()" syntax="jsx3.html.paste()"/>
      <record jsxtext="scrollIntoView()" syntax="jsx3.html.scrollIntoView(objGUI,objRoot,intPaddingX,intPaddingY)"/>
      <record jsxtext="setInnerText()" syntax="jsx3.html.setInnerText(objElement,strText)"/>
      <record jsxtext="setOuterHTML()" syntax="jsx3.html.setOuterHTML(objElement,strHTML)"/>
    </record>
    <record jsxtext="BlockTag">
      <record jsxtext="&amp;middot; new jsx3.html.BlockTag()" syntax="new jsx3.html.BlockTag(strTagNS,strTagName,left,top,width,height)"/>
      <record jsxtext="getBackgroundColor()" syntax="getBackgroundColor()"/>
      <record jsxtext="getDimensions()" syntax="getDimensions()"/>
      <record jsxtext="getHeight()" syntax="getHeight()"/>
      <record jsxtext="getLeft()" syntax="getLeft()"/>
      <record jsxtext="getMargin()" syntax="getMargin()"/>
      <record jsxtext="getMarginDimensions()" syntax="getMarginDimensions()"/>
      <record jsxtext="getPadding()" syntax="getPadding()"/>
      <record jsxtext="getPaddingDimensions()" syntax="getPaddingDimensions()"/>
      <record jsxtext="getPosition()" syntax="getPosition()"/>
      <record jsxtext="getTop()" syntax="getTop()"/>
      <record jsxtext="getWidth()" syntax="getWidth()"/>
      <record jsxtext="getZIndex()" syntax="getZIndex()"/>
      <record jsxtext="setBackgroundColor()" syntax="setBackgroundColor(bgcolor)"/>
      <record jsxtext="setDimensions()" syntax="setDimensions(left,top,width,height)"/>
      <record jsxtext="setHeight()" syntax="setHeight(height)"/>
      <record jsxtext="setLeft()" syntax="setLeft(left)"/>
      <record jsxtext="setMargin()" syntax="setMargin(margin)"/>
      <record jsxtext="setPadding()" syntax="setPadding(padding)"/>
      <record jsxtext="setPosition()" syntax="setPosition(position)"/>
      <record jsxtext="setTop()" syntax="setTop(top)"/>
      <record jsxtext="setWidth()" syntax="setWidth(width)"/>
      <record jsxtext="setZIndex()" syntax="setZIndex(zIndex)"/>
    </record>
    <record jsxtext="DOM">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="clearStyles()" syntax="jsx3.html.DOM.clearStyles(objNode,strCSS)"/>
        <record jsxtext="getExtendedOffsetHeight()" syntax="jsx3.html.DOM.getExtendedOffsetHeight(objNode)"/>
        <record jsxtext="getExtendedOffsetWidth()" syntax="jsx3.html.DOM.getExtendedOffsetWidth(objNode)"/>
        <record jsxtext="removeEventListener()" syntax="jsx3.html.DOM.removeEventListener(objNode,strName,objFn)"/>
        <record jsxtext="setStyle()" syntax="jsx3.html.DOM.setStyle(objNode,strCSSName,strValue)"/>
        <record jsxtext="setStyles()" syntax="jsx3.html.DOM.setStyles(objNode,strCSS)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.html.DOM()" syntax="new jsx3.html.DOM()"/>
    </record>
    <record jsxtext="FontTag">
      <record jsxtext="getColor()" syntax="getColor()"/>
      <record jsxtext="getFontFamily()" syntax="getFontFamily()"/>
      <record jsxtext="getFontSize()" syntax="getFontSize()"/>
      <record jsxtext="getFontStyle()" syntax="getFontStyle()"/>
      <record jsxtext="getFontWeight()" syntax="getFontWeight()"/>
      <record jsxtext="getTextAlign()" syntax="getTextAlign()"/>
      <record jsxtext="getTextDecoration()" syntax="getTextDecoration()"/>
      <record jsxtext="setColor()" syntax="setColor(color)"/>
      <record jsxtext="setFontFamily()" syntax="setFontFamily(fontFamily)"/>
      <record jsxtext="setFontSize()" syntax="setFontSize(fontSize)"/>
      <record jsxtext="setFontStyle()" syntax="setFontStyle(fontStyle)"/>
      <record jsxtext="setFontWeight()" syntax="setFontWeight(fontWeight)"/>
      <record jsxtext="setTextAlign()" syntax="setTextAlign(textAlign)"/>
      <record jsxtext="setTextDecoration()" syntax="setTextDecoration(textDecoration)"/>
    </record>
    <record jsxtext="Style">
      <record jsxtext="&amp;middot; new jsx3.html.Style()" syntax="new jsx3.html.Style()"/>
    </record>
    <record jsxtext="Tag">
      <record jsxtext="&amp;middot; new jsx3.html.Tag()" syntax="new jsx3.html.Tag(strTagNS,strTagName)"/>
      <record jsxtext="appendChild()" syntax="appendChild(child)"/>
      <record jsxtext="getChildren()" syntax="getChildren()"/>
      <record jsxtext="getClassName()" syntax="getClassName()"/>
      <record jsxtext="getClassName()" syntax="getClassName()"/>
      <record jsxtext="getFirstChildOfType()" syntax="getFirstChildOfType(type)"/>
      <record jsxtext="getId()" syntax="getId()"/>
      <record jsxtext="getParent()" syntax="getParent()"/>
      <record jsxtext="getProperty()" syntax="getProperty(strName)"/>
      <record jsxtext="getStyle()" syntax="getStyle(strName)"/>
      <record jsxtext="getTagNS()" syntax="getTagNS()"/>
      <record jsxtext="getTagName()" syntax="getTagName()"/>
      <record jsxtext="onAppendChild()" syntax="onAppendChild(child)"/>
      <record jsxtext="onRemoveChild()" syntax="onRemoveChild(child)"/>
      <record jsxtext="paint()" syntax="paint()"/>
      <record jsxtext="paintDom()" syntax="paintDom()"/>
      <record jsxtext="paintUpdate()" syntax="paintUpdate()"/>
      <record jsxtext="release()" syntax="release()"/>
      <record jsxtext="removeChild()" syntax="removeChild(child)"/>
      <record jsxtext="removeChildren()" syntax="removeChildren()"/>
      <record jsxtext="removeProperty()" syntax="removeProperty(strName)"/>
      <record jsxtext="removeStyle()" syntax="removeStyle(strName)"/>
      <record jsxtext="replaceChild()" syntax="replaceChild(child,oldChild)"/>
      <record jsxtext="setClassName()" syntax="setClassName(cssClass)"/>
      <record jsxtext="setClassName()" syntax="setClassName(cssClass)"/>
      <record jsxtext="setExtraStyles()" syntax="setExtraStyles(extraStyles)"/>
      <record jsxtext="setId()" syntax="setId(id)"/>
      <record jsxtext="setProperty()" syntax="setProperty(strName,strValue)"/>
      <record jsxtext="setStyle()" syntax="setStyle(strName,strValue)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="Text">
      <record jsxtext="&amp;middot; new jsx3.html.Text()" syntax="new jsx3.html.Text(strText)"/>
    </record>
  </record>
  <record jsxtext="jsx3.lang">
    <record jsxtext="&amp;middot; Static Methods">
      <record jsxtext="getCaller()" syntax="jsx3.lang.getCaller(intUp)"/>
      <record jsxtext="getStack()" syntax="jsx3.lang.getStack(intUp)"/>
    </record>
    <record jsxtext="AOP">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="after()" syntax="jsx3.lang.AOP.after(strPName,fctAdvice,bRemove)"/>
        <record jsxtext="around()" syntax="jsx3.lang.AOP.around(strPName,fctAdvice,bRemove)"/>
        <record jsxtext="before()" syntax="jsx3.lang.AOP.before(strPName,fctAdvice,bRemove)"/>
        <record jsxtext="pc()" syntax="jsx3.lang.AOP.pc(strName,objConditions)"/>
        <record jsxtext="pcrem()" syntax="jsx3.lang.AOP.pcrem(strName)"/>
      </record>
    </record>
    <record jsxtext="Class">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="defineClass()" syntax="jsx3.lang.Class.defineClass(strName,objExtends,arrImplements,fctBody)"/>
        <record jsxtext="defineInterface()" syntax="jsx3.lang.Class.defineInterface(strName,objExtends,fctBody)"/>
        <record jsxtext="forName()" syntax="jsx3.lang.Class.forName(strName)"/>
      </record>
      <record jsxtext="addMethodMixin()" syntax="addMethodMixin(strMethod,objClass,strMixin)"/>
      <record jsxtext="bless()" syntax="bless(obj)"/>
      <record jsxtext="getClasses()" syntax="getClasses()"/>
      <record jsxtext="getConstructor()" syntax="getConstructor()"/>
      <record jsxtext="getGetter()" syntax="getGetter(strProp)"/>
      <record jsxtext="getInheritance()" syntax="getInheritance()"/>
      <record jsxtext="getInstanceFieldNames()" syntax="getInstanceFieldNames()"/>
      <record jsxtext="getInstanceMethod()" syntax="getInstanceMethod(strMethodName)"/>
      <record jsxtext="getInstanceMethods()" syntax="getInstanceMethods()"/>
      <record jsxtext="getInterfaces()" syntax="getInterfaces()"/>
      <record jsxtext="getName()" syntax="getName()"/>
      <record jsxtext="getPackage()" syntax="getPackage()"/>
      <record jsxtext="getPackageName()" syntax="getPackageName()"/>
      <record jsxtext="getSetter()" syntax="getSetter(strProp)"/>
      <record jsxtext="getStaticFieldNames()" syntax="getStaticFieldNames()"/>
      <record jsxtext="getStaticMethod()" syntax="getStaticMethod(strMethodName)"/>
      <record jsxtext="getStaticMethods()" syntax="getStaticMethods()"/>
      <record jsxtext="getSuperClass()" syntax="getSuperClass()"/>
      <record jsxtext="isAssignableFrom()" syntax="isAssignableFrom(objClass)"/>
      <record jsxtext="isInstance()" syntax="isInstance(obj)"/>
      <record jsxtext="isInterface()" syntax="isInterface()"/>
      <record jsxtext="mixin()" syntax="mixin(obj,bNoClobber,arrNames)"/>
      <record jsxtext="newInnerClass()" syntax="newInnerClass(arg)"/>
      <record jsxtext="newInstance()" syntax="newInstance(arg)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="ClassLoader">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="LOAD_ALWAYS" syntax="jsx3.lang.ClassLoader.LOAD_ALWAYS"/>
        <record jsxtext="LOAD_AUTO" syntax="jsx3.lang.ClassLoader.LOAD_AUTO"/>
      </record>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="loadAddin()" syntax="loadAddin(objAddin)"/>
      <record jsxtext="loadApp()" syntax="loadApp(strAppPath,objGUI,objEnv)"/>
      <record jsxtext="loadClass()" syntax="loadClass(strClass)"/>
      <record jsxtext="loadClassAsync()" syntax="loadClassAsync(strClass,cb)"/>
      <record jsxtext="loadJSFile()" syntax="loadJSFile(strURI,cb)"/>
      <record jsxtext="loadJSFileSync()" syntax="loadJSFileSync(strURI)"/>
    </record>
    <record jsxtext="Exception">
      <record jsxtext="&amp;middot; new jsx3.lang.Exception()" syntax="new jsx3.lang.Exception(strMessage,objCause)"/>
      <record jsxtext="getCause()" syntax="getCause()"/>
      <record jsxtext="getMessage()" syntax="getMessage()"/>
      <record jsxtext="getStack()" syntax="getStack()"/>
      <record jsxtext="printStackTrace()" syntax="printStackTrace()"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="IllegalArgumentException">
      <record jsxtext="&amp;middot; new jsx3.lang.IllegalArgumentException()" syntax="new jsx3.lang.IllegalArgumentException(strArg,objValue)"/>
    </record>
    <record jsxtext="Method">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="newAbstract()" syntax="jsx3.lang.Method.newAbstract(paramNames)"/>
      </record>
      <record jsxtext="apply()" syntax="apply(thisArg,argArray)"/>
      <record jsxtext="call()" syntax="call(arg)"/>
      <record jsxtext="getArity()" syntax="getArity()"/>
      <record jsxtext="getDeclaringClass()" syntax="getDeclaringClass()"/>
      <record jsxtext="getFunction()" syntax="getFunction()"/>
      <record jsxtext="getName()" syntax="getName()"/>
      <record jsxtext="getParameterName()" syntax="getParameterName(intIndex)"/>
      <record jsxtext="getParameterNames()" syntax="getParameterNames()"/>
      <record jsxtext="isAbstract()" syntax="isAbstract()"/>
      <record jsxtext="isPackageMethod()" syntax="isPackageMethod()"/>
      <record jsxtext="isStatic()" syntax="isStatic()"/>
    </record>
    <record jsxtext="NativeError">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="initErrorCapture()" syntax="jsx3.lang.NativeError.initErrorCapture(fctTrap)"/>
        <record jsxtext="wrap()" syntax="jsx3.lang.NativeError.wrap(objError)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.lang.NativeError()" syntax="new jsx3.lang.NativeError(objError)"/>
      <record jsxtext="getFileName()" syntax="getFileName()"/>
      <record jsxtext="getLineNumber()" syntax="getLineNumber()"/>
      <record jsxtext="getMessage()" syntax="getMessage()"/>
      <record jsxtext="getName()" syntax="getName()"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="Object">
      <record jsxtext="&amp;middot; new jsx3.lang.Object()" syntax="new jsx3.lang.Object()"/>
      <record jsxtext="clone()" syntax="clone()"/>
      <record jsxtext="equals()" syntax="equals(obj)"/>
      <record jsxtext="eval()" syntax="eval(strScript,objContext)"/>
      <record jsxtext="getClass()" syntax="getClass()"/>
      <record jsxtext="instanceOf()" syntax="instanceOf(objClass)"/>
      <record jsxtext="jsxsuper()" syntax="jsxsuper(arg)"/>
      <record jsxtext="jsxsupermix()" syntax="jsxsupermix(arg)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="Package">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="definePackage()" syntax="jsx3.lang.Package.definePackage(strName,fctBody)"/>
        <record jsxtext="forName()" syntax="jsx3.lang.Package.forName(strName)"/>
        <record jsxtext="getPackages()" syntax="jsx3.lang.Package.getPackages()"/>
      </record>
      <record jsxtext="getClasses()" syntax="getClasses()"/>
      <record jsxtext="getName()" syntax="getName()"/>
      <record jsxtext="getNamespace()" syntax="getNamespace()"/>
      <record jsxtext="getStaticFieldNames()" syntax="getStaticFieldNames()"/>
      <record jsxtext="getStaticMethod()" syntax="getStaticMethod(strMethodName)"/>
      <record jsxtext="getStaticMethods()" syntax="getStaticMethods()"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="System">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="getLocale()" syntax="jsx3.lang.System.getLocale()"/>
        <record jsxtext="getMessage()" syntax="jsx3.lang.System.getMessage(strKey,strTokens)"/>
        <record jsxtext="getProperty()" syntax="jsx3.lang.System.getProperty(strKey)"/>
        <record jsxtext="getVersion()" syntax="jsx3.lang.System.getVersion()"/>
        <record jsxtext="reloadLocalizedResources()" syntax="jsx3.lang.System.reloadLocalizedResources()"/>
        <record jsxtext="setLocale()" syntax="jsx3.lang.System.setLocale(objLocale)"/>
      </record>
    </record>
  </record>
  <record jsxtext="jsx3.net">
    <record jsxtext="Form">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="EVENT_FILE_SELECTED" syntax="jsx3.net.Form.EVENT_FILE_SELECTED"/>
        <record jsxtext="EVENT_ON_ERROR" syntax="jsx3.net.Form.EVENT_ON_ERROR"/>
        <record jsxtext="EVENT_ON_RESPONSE" syntax="jsx3.net.Form.EVENT_ON_RESPONSE"/>
        <record jsxtext="EVENT_ON_TIMEOUT" syntax="jsx3.net.Form.EVENT_ON_TIMEOUT"/>
        <record jsxtext="METHOD_GET" syntax="jsx3.net.Form.METHOD_GET"/>
        <record jsxtext="METHOD_POST" syntax="jsx3.net.Form.METHOD_POST"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="newFromFragment()" syntax="jsx3.net.Form.newFromFragment(strFragment)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.net.Form()" syntax="new jsx3.net.Form(strMethod,strAction,bMultipart)"/>
      <record jsxtext="abort()" syntax="abort()"/>
      <record jsxtext="addFileUploadField()" syntax="addFileUploadField(strName)"/>
      <record jsxtext="conceal()" syntax="conceal()"/>
      <record jsxtext="destroy()" syntax="destroy()"/>
      <record jsxtext="getAction()" syntax="getAction()"/>
      <record jsxtext="getField()" syntax="getField(strName)"/>
      <record jsxtext="getFields()" syntax="getFields()"/>
      <record jsxtext="getMethod()" syntax="getMethod()"/>
      <record jsxtext="getMultipart()" syntax="getMultipart()"/>
      <record jsxtext="getResponseText()" syntax="getResponseText()"/>
      <record jsxtext="getResponseXML()" syntax="getResponseXML()"/>
      <record jsxtext="promptForFile()" syntax="promptForFile(strFieldName)"/>
      <record jsxtext="removeField()" syntax="removeField(strName)"/>
      <record jsxtext="reveal()" syntax="reveal(l,t,w,h)"/>
      <record jsxtext="send()" syntax="send(intPollInterval,intTimeout)"/>
      <record jsxtext="setAction()" syntax="setAction(action)"/>
      <record jsxtext="setField()" syntax="setField(strName,strValue,bConcat)"/>
      <record jsxtext="setMethod()" syntax="setMethod(method)"/>
      <record jsxtext="setMultipart()" syntax="setMultipart(multipart)"/>
    </record>
    <record jsxtext="Request">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="EVENT_ON_RESPONSE" syntax="jsx3.net.Request.EVENT_ON_RESPONSE"/>
        <record jsxtext="EVENT_ON_TIMEOUT" syntax="jsx3.net.Request.EVENT_ON_TIMEOUT"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="addSchemeHandler()" syntax="jsx3.net.Request.addSchemeHandler(scheme,handler)"/>
        <record jsxtext="open()" syntax="jsx3.net.Request.open(strMethod,strURL,bAsync,strUser,strPass)"/>
        <record jsxtext="xdr()" syntax="jsx3.net.Request.xdr(strURI,strData)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.net.Request()" syntax="new jsx3.net.Request(id)"/>
      <record jsxtext="abort()" syntax="abort()"/>
      <record jsxtext="getAllResponseHeaders()" syntax="getAllResponseHeaders()"/>
      <record jsxtext="getResponseHeader()" syntax="getResponseHeader(strName)"/>
      <record jsxtext="getResponseText()" syntax="getResponseText()"/>
      <record jsxtext="getResponseXML()" syntax="getResponseXML()"/>
      <record jsxtext="getStatus()" syntax="getStatus()"/>
      <record jsxtext="getStatusText()" syntax="getStatusText()"/>
      <record jsxtext="getURL()" syntax="getURL()"/>
      <record jsxtext="open()" syntax="open(strMethod,strURL,bAsync,strUser,strPass)"/>
      <record jsxtext="send()" syntax="send(strContent,intTimeout)"/>
      <record jsxtext="setRequestHeader()" syntax="setRequestHeader(strName,strValue)"/>
    </record>
    <record jsxtext="Service">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ON_ERROR" syntax="jsx3.net.Service.ON_ERROR"/>
        <record jsxtext="ON_INVALID" syntax="jsx3.net.Service.ON_INVALID"/>
        <record jsxtext="ON_PROCESS_RULE" syntax="jsx3.net.Service.ON_PROCESS_RULE"/>
        <record jsxtext="ON_SUCCESS" syntax="jsx3.net.Service.ON_SUCCESS"/>
        <record jsxtext="ON_TIMEOUT" syntax="jsx3.net.Service.ON_TIMEOUT"/>
        <record jsxtext="json_namespace" syntax="jsx3.net.Service.json_namespace"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="JSON2XML()" syntax="jsx3.net.Service.JSON2XML(objJ)"/>
        <record jsxtext="XML2JSON()" syntax="jsx3.net.Service.XML2JSON(objXML)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.net.Service()" syntax="new jsx3.net.Service(strRulesURL,strOperationName,strOutboundURL,strInboundURL)"/>
      <record jsxtext="compile()" syntax="compile()"/>
      <record jsxtext="doCall()" syntax="doCall(bCancelIfInvalid)"/>
      <record jsxtext="doInboundMap()" syntax="doInboundMap()"/>
      <record jsxtext="doRespond()" syntax="doRespond(objEvent)"/>
      <record jsxtext="getEndpointURL()" syntax="getEndpointURL()"/>
      <record jsxtext="getInboundDocument()" syntax="getInboundDocument()"/>
      <record jsxtext="getInboundURL()" syntax="getInboundURL()"/>
      <record jsxtext="getJSONP()" syntax="getJSONP()"/>
      <record jsxtext="getMethod()" syntax="getMethod()"/>
      <record jsxtext="getMode()" syntax="getMode()"/>
      <record jsxtext="getNamespace()" syntax="getNamespace()"/>
      <record jsxtext="getOperationName()" syntax="getOperationName()"/>
      <record jsxtext="getOutboundDocument()" syntax="getOutboundDocument()"/>
      <record jsxtext="getOutboundStubPath()" syntax="getOutboundStubPath()"/>
      <record jsxtext="getOutboundStubURL()" syntax="getOutboundStubURL()"/>
      <record jsxtext="getOutboundURL()" syntax="getOutboundURL()"/>
      <record jsxtext="getRequest()" syntax="getRequest()"/>
      <record jsxtext="getRulesURL()" syntax="getRulesURL()"/>
      <record jsxtext="getRulesXML()" syntax="getRulesXML()"/>
      <record jsxtext="getServer()" syntax="getServer()"/>
      <record jsxtext="getServiceMessage()" syntax="getServiceMessage(MESSAGETYPE,strShellURL)"/>
      <record jsxtext="getStatus()" syntax="getStatus()"/>
      <record jsxtext="getSupportedNamespaces()" syntax="getSupportedNamespaces()"/>
      <record jsxtext="getUserName()" syntax="getUserName()"/>
      <record jsxtext="getUserPass()" syntax="getUserPass()"/>
      <record jsxtext="resetRules()" syntax="resetRules()"/>
      <record jsxtext="resetRulesTree()" syntax="resetRulesTree()"/>
      <record jsxtext="setEndpointURL()" syntax="setEndpointURL(strAlternateURL)"/>
      <record jsxtext="setInboundDocument()" syntax="setInboundDocument(objXML)"/>
      <record jsxtext="setInboundURL()" syntax="setInboundURL(strInboundURL)"/>
      <record jsxtext="setJSONP()" syntax="setJSONP(bJSONP)"/>
      <record jsxtext="setMethod()" syntax="setMethod(METHOD)"/>
      <record jsxtext="setMode()" syntax="setMode(MODE)"/>
      <record jsxtext="setNamespace()" syntax="setNamespace(namespace)"/>
      <record jsxtext="setOperationName()" syntax="setOperationName(strOperationName)"/>
      <record jsxtext="setOutboundStubDocument()" syntax="setOutboundStubDocument(objDocument)"/>
      <record jsxtext="setOutboundStubPath()" syntax="setOutboundStubPath(strPath)"/>
      <record jsxtext="setOutboundStubURL()" syntax="setOutboundStubURL(strURL)"/>
      <record jsxtext="setOutboundURL()" syntax="setOutboundURL(strOutboundURL)"/>
      <record jsxtext="setRequestHeader()" syntax="setRequestHeader(strName,strValue)"/>
      <record jsxtext="setRulesURL()" syntax="setRulesURL(strRulesURL)"/>
      <record jsxtext="setStatus()" syntax="setStatus(intStatus)"/>
      <record jsxtext="setTimeout()" syntax="setTimeout(intTimeout,objHandler,objFunction)"/>
      <record jsxtext="setUserName()" syntax="setUserName(strName)"/>
      <record jsxtext="setUserPass()" syntax="setUserPass(strPass)"/>
    </record>
    <record jsxtext="URI">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="fromParts()" syntax="jsx3.net.URI.fromParts(scheme,userInfo,host,port,path,query,fragment)"/>
        <record jsxtext="valueOf()" syntax="jsx3.net.URI.valueOf(strURI)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.net.URI()" syntax="new jsx3.net.URI(strURI)"/>
      <record jsxtext="equals()" syntax="equals(obj)"/>
      <record jsxtext="getAuthority()" syntax="getAuthority()"/>
      <record jsxtext="getFragment()" syntax="getFragment()"/>
      <record jsxtext="getHost()" syntax="getHost()"/>
      <record jsxtext="getPath()" syntax="getPath()"/>
      <record jsxtext="getPort()" syntax="getPort()"/>
      <record jsxtext="getQuery()" syntax="getQuery()"/>
      <record jsxtext="getQueryParam()" syntax="getQueryParam(strParam)"/>
      <record jsxtext="getQueryParams()" syntax="getQueryParams()"/>
      <record jsxtext="getScheme()" syntax="getScheme()"/>
      <record jsxtext="getSchemeSpecificPart()" syntax="getSchemeSpecificPart()"/>
      <record jsxtext="getUserInfo()" syntax="getUserInfo()"/>
      <record jsxtext="isAbsolute()" syntax="isAbsolute()"/>
      <record jsxtext="isOpaque()" syntax="isOpaque()"/>
      <record jsxtext="normalize()" syntax="normalize()"/>
      <record jsxtext="relativize()" syntax="relativize(uri)"/>
      <record jsxtext="resolve()" syntax="resolve(uri)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="URIResolver">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEFAULT" syntax="jsx3.net.URIResolver.DEFAULT"/>
        <record jsxtext="JSX" syntax="jsx3.net.URIResolver.JSX"/>
        <record jsxtext="USER" syntax="jsx3.net.URIResolver.USER"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="getResolver()" syntax="jsx3.net.URIResolver.getResolver(strURI)"/>
        <record jsxtext="isAbsoluteURI()" syntax="jsx3.net.URIResolver.isAbsoluteURI(strURI)"/>
        <record jsxtext="register()" syntax="jsx3.net.URIResolver.register(strScheme,objResolver)"/>
      </record>
      <record jsxtext="getUriPrefix()" syntax="getUriPrefix()"/>
      <record jsxtext="relativizeURI()" syntax="relativizeURI(strURI,bRel)"/>
      <record jsxtext="resolveURI()" syntax="resolveURI(strURI)"/>
    </record>
  </record>
  <record jsxtext="jsx3">
    <record jsxtext="&amp;middot; Static Fields">
      <record jsxtext="ADDINSPATH" syntax="jsx3.ADDINSPATH"/>
      <record jsxtext="CLASS_LOADER" syntax="jsx3.CLASS_LOADER"/>
      <record jsxtext="STARTUP_EVENT" syntax="jsx3.STARTUP_EVENT"/>
    </record>
    <record jsxtext="&amp;middot; Static Methods">
      <record jsxtext="$A()" syntax="jsx3.$A(a)"/>
      <record jsxtext="$F()" syntax="jsx3.$F(f)"/>
      <record jsxtext="$H()" syntax="jsx3.$H(o)"/>
      <record jsxtext="$O()" syntax="jsx3.$O(o)"/>
      <record jsxtext="$S()" syntax="jsx3.$S(s)"/>
      <record jsxtext="$Y()" syntax="jsx3.$Y(f)"/>
      <record jsxtext="$Z()" syntax="jsx3.$Z(strMethod,objThis)"/>
      <record jsxtext="GO()" syntax="jsx3.GO(strIdName,strNS)"/>
      <record jsxtext="eval()" syntax="jsx3.eval(strScript,objContext)"/>
      <record jsxtext="getEnv()" syntax="jsx3.getEnv(strKey)"/>
      <record jsxtext="getSharedCache()" syntax="jsx3.getSharedCache()"/>
      <record jsxtext="getVersion()" syntax="jsx3.getVersion()"/>
      <record jsxtext="log()" syntax="jsx3.log(strMessage)"/>
      <record jsxtext="require()" syntax="jsx3.require(strClass)"/>
      <record jsxtext="requireAsync()" syntax="jsx3.requireAsync(strClass)"/>
      <record jsxtext="resolveURI()" syntax="jsx3.resolveURI(strURI)"/>
      <record jsxtext="sleep()" syntax="jsx3.sleep(objFunction,strId,objThis,bClobber)"/>
    </record>
  </record>
  <record jsxtext="jsx3.util">
    <record jsxtext="&amp;middot; Static Methods">
      <record jsxtext="arrIndexOf()" syntax="jsx3.util.arrIndexOf(a,o)"/>
      <record jsxtext="isName()" syntax="jsx3.util.isName(n)"/>
      <record jsxtext="numIsNaN()" syntax="jsx3.util.numIsNaN(v)"/>
      <record jsxtext="numMod()" syntax="jsx3.util.numMod(v,mod)"/>
      <record jsxtext="numRound()" syntax="jsx3.util.numRound(v,intUnit)"/>
      <record jsxtext="strDecodeBase64()" syntax="jsx3.util.strDecodeBase64(s)"/>
      <record jsxtext="strEmpty()" syntax="jsx3.util.strEmpty(s)"/>
      <record jsxtext="strEncodeBase64()" syntax="jsx3.util.strEncodeBase64(s)"/>
      <record jsxtext="strEndsWith()" syntax="jsx3.util.strEndsWith(s,strTest)"/>
      <record jsxtext="strEscapeHTML()" syntax="jsx3.util.strEscapeHTML(s)"/>
      <record jsxtext="strEscapeJSON()" syntax="jsx3.util.strEscapeJSON(str)"/>
      <record jsxtext="strTrim()" syntax="jsx3.util.strTrim(s)"/>
      <record jsxtext="strTruncate()" syntax="jsx3.util.strTruncate(s,intMax,strEllipsis,fltPos)"/>
    </record>
    <record jsxtext="DateFormat">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="FULL" syntax="jsx3.util.DateFormat.FULL"/>
        <record jsxtext="LONG" syntax="jsx3.util.DateFormat.LONG"/>
        <record jsxtext="MEDIUM" syntax="jsx3.util.DateFormat.MEDIUM"/>
        <record jsxtext="SHORT" syntax="jsx3.util.DateFormat.SHORT"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="getDateInstance()" syntax="jsx3.util.DateFormat.getDateInstance(intType,objLocale)"/>
        <record jsxtext="getDateTimeInstance()" syntax="jsx3.util.DateFormat.getDateTimeInstance(intDateType,intTimeType,objLocale)"/>
        <record jsxtext="getTimeInstance()" syntax="jsx3.util.DateFormat.getTimeInstance(intType,objLocale)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.util.DateFormat()" syntax="new jsx3.util.DateFormat(strFormat,objLocale)"/>
      <record jsxtext="format()" syntax="format(objDate)"/>
      <record jsxtext="getFormat()" syntax="getFormat()"/>
      <record jsxtext="getLocale()" syntax="getLocale()"/>
      <record jsxtext="getTimeZoneOffset()" syntax="getTimeZoneOffset(objDate)"/>
      <record jsxtext="parse()" syntax="parse(strDate)"/>
      <record jsxtext="setLocale()" syntax="setLocale(objLocale)"/>
      <record jsxtext="setTimeZoneOffset()" syntax="setTimeZoneOffset(intMinutes)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="Dojo">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="hub" syntax="jsx3.util.Dojo.hub"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="getPath()" syntax="jsx3.util.Dojo.getPath(s)"/>
        <record jsxtext="isLoaded()" syntax="jsx3.util.Dojo.isLoaded()"/>
        <record jsxtext="load()" syntax="jsx3.util.Dojo.load()"/>
      </record>
    </record>
    <record jsxtext="EventDispatcher">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="SUBJECT_ALL" syntax="jsx3.util.EventDispatcher.SUBJECT_ALL"/>
      </record>
      <record jsxtext="publish()" syntax="publish(objEvent)"/>
      <record jsxtext="subscribe()" syntax="subscribe(strEventId,objHandler,objFunction)"/>
      <record jsxtext="unsubscribe()" syntax="unsubscribe(strEventId,objHandler)"/>
      <record jsxtext="unsubscribeAll()" syntax="unsubscribeAll(strEventId)"/>
    </record>
    <record jsxtext="GNode">
      <record jsxtext="&amp;middot; new jsx3.util.GNode()" syntax="new jsx3.util.GNode(id)"/>
      <record jsxtext="add()" syntax="add(objNode)"/>
      <record jsxtext="del()" syntax="del(objNode)"/>
      <record jsxtext="down()" syntax="down()"/>
      <record jsxtext="graph()" syntax="graph()"/>
      <record jsxtext="id()" syntax="id()"/>
      <record jsxtext="up()" syntax="up()"/>
    </record>
    <record jsxtext="Graph">
      <record jsxtext="&amp;middot; new jsx3.util.Graph()" syntax="new jsx3.util.Graph()"/>
      <record jsxtext="add()" syntax="add(objNode)"/>
      <record jsxtext="del()" syntax="del(objNode)"/>
      <record jsxtext="node()" syntax="node(id)"/>
      <record jsxtext="nodes()" syntax="nodes()"/>
      <record jsxtext="roots()" syntax="roots()"/>
      <record jsxtext="size()" syntax="size()"/>
    </record>
    <record jsxtext="Iterator">
      <record jsxtext="hasNext()" syntax="hasNext()"/>
      <record jsxtext="next()" syntax="next()"/>
      <record jsxtext="remove()" syntax="remove()"/>
    </record>
    <record jsxtext="Job">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DONE" syntax="jsx3.util.Job.DONE"/>
        <record jsxtext="FINISH" syntax="jsx3.util.Job.FINISH"/>
        <record jsxtext="FINISHED" syntax="jsx3.util.Job.FINISHED"/>
        <record jsxtext="PUSH" syntax="jsx3.util.Job.PUSH"/>
        <record jsxtext="SLEEP" syntax="jsx3.util.Job.SLEEP"/>
        <record jsxtext="WAIT" syntax="jsx3.util.Job.WAIT"/>
        <record jsxtext="WAITING" syntax="jsx3.util.Job.WAITING"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.util.Job()" syntax="new jsx3.util.Job(id,fctRun)"/>
      <record jsxtext="finish()" syntax="finish()"/>
      <record jsxtext="run()" syntax="run()"/>
      <record jsxtext="state()" syntax="state()"/>
    </record>
    <record jsxtext="JobGraph">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DONE" syntax="jsx3.util.JobGraph.DONE"/>
        <record jsxtext="RAN_JOB" syntax="jsx3.util.JobGraph.RAN_JOB"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.util.JobGraph()" syntax="new jsx3.util.JobGraph()"/>
      <record jsxtext="addJob()" syntax="addJob(objJob,preReqs,postReqs)"/>
      <record jsxtext="addPrereq()" syntax="addPrereq(objJob,preJob)"/>
      <record jsxtext="doneCt()" syntax="doneCt()"/>
      <record jsxtext="insertJob()" syntax="insertJob(newJob,referenceJob)"/>
      <record jsxtext="isRunning()" syntax="isRunning()"/>
      <record jsxtext="pause()" syntax="pause()"/>
      <record jsxtext="reset()" syntax="reset()"/>
      <record jsxtext="start()" syntax="start()"/>
    </record>
    <record jsxtext="List">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="wrap()" syntax="jsx3.util.List.wrap(a)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.util.List()" syntax="new jsx3.util.List(a,bLive)"/>
      <record jsxtext="add()" syntax="add(objElm,intAt)"/>
      <record jsxtext="addAll()" syntax="addAll(a,intAt)"/>
      <record jsxtext="clear()" syntax="clear()"/>
      <record jsxtext="clone()" syntax="clone()"/>
      <record jsxtext="contains()" syntax="contains(objElm)"/>
      <record jsxtext="equals()" syntax="equals(l)"/>
      <record jsxtext="filter()" syntax="filter(fctFilter)"/>
      <record jsxtext="get()" syntax="get(intIndex)"/>
      <record jsxtext="indexOf()" syntax="indexOf(objElm,intStartAt)"/>
      <record jsxtext="iterator()" syntax="iterator()"/>
      <record jsxtext="lastIndexOf()" syntax="lastIndexOf(objElm,intStartAt)"/>
      <record jsxtext="map()" syntax="map(fctMapper,bExpand,bObject)"/>
      <record jsxtext="remove()" syntax="remove(objElm)"/>
      <record jsxtext="removeAt()" syntax="removeAt(intStart,intEnd)"/>
      <record jsxtext="set()" syntax="set(intIndex,objElm)"/>
      <record jsxtext="size()" syntax="size()"/>
      <record jsxtext="slice()" syntax="slice(intStart,intEnd)"/>
      <record jsxtext="sort()" syntax="sort(fctComparator)"/>
      <record jsxtext="toArray()" syntax="toArray(bLive)"/>
    </record>
    <record jsxtext="Locale">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ENGLISH" syntax="jsx3.util.Locale.ENGLISH"/>
        <record jsxtext="ROOT" syntax="jsx3.util.Locale.ROOT"/>
        <record jsxtext="UK" syntax="jsx3.util.Locale.UK"/>
        <record jsxtext="US" syntax="jsx3.util.Locale.US"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="valueOf()" syntax="jsx3.util.Locale.valueOf(strKey)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.util.Locale()" syntax="new jsx3.util.Locale(strLanguage,strCountry)"/>
      <record jsxtext="equals()" syntax="equals(obj)"/>
      <record jsxtext="getCountry()" syntax="getCountry()"/>
      <record jsxtext="getDisplayCountry()" syntax="getDisplayCountry(objLocale)"/>
      <record jsxtext="getDisplayLanguage()" syntax="getDisplayLanguage(objLocale)"/>
      <record jsxtext="getDisplayName()" syntax="getDisplayName(objLocale)"/>
      <record jsxtext="getLanguage()" syntax="getLanguage()"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="Logger.AlertHandler">
      <record jsxtext="getConfirmInterval()" syntax="getConfirmInterval()"/>
      <record jsxtext="setConfirmInterval()" syntax="setConfirmInterval(intInterval)"/>
    </record>
    <record jsxtext="Logger.ConsoleHandler"/>
    <record jsxtext="Logger.FormatHandler">
      <record jsxtext="getFormat()" syntax="getFormat()"/>
      <record jsxtext="setFormat()" syntax="setFormat(strFormat)"/>
    </record>
    <record jsxtext="Logger.Handler">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="registerHandlerClass()" syntax="jsx3.util.Logger.Handler.registerHandlerClass(objClass)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.util.Logger.Handler()" syntax="new jsx3.util.Logger.Handler(strName)"/>
      <record jsxtext="getLevel()" syntax="getLevel()"/>
      <record jsxtext="getName()" syntax="getName()"/>
      <record jsxtext="handle()" syntax="handle(objRecord)"/>
      <record jsxtext="isLoggable()" syntax="isLoggable(intLevel)"/>
      <record jsxtext="setLevel()" syntax="setLevel(intLevel)"/>
    </record>
    <record jsxtext="Logger.Manager">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="getManager()" syntax="jsx3.util.Logger.Manager.getManager()"/>
      </record>
      <record jsxtext="addHandler()" syntax="addHandler(objHandler)"/>
      <record jsxtext="addLogger()" syntax="addLogger(objLogger)"/>
      <record jsxtext="getHandler()" syntax="getHandler(strName)"/>
      <record jsxtext="getHandlerNames()" syntax="getHandlerNames()"/>
      <record jsxtext="getLogger()" syntax="getLogger(strName)"/>
    </record>
    <record jsxtext="Logger.MemoryHandler">
      <record jsxtext="&amp;middot; new jsx3.util.Logger.MemoryHandler()" syntax="new jsx3.util.Logger.MemoryHandler(strName)"/>
      <record jsxtext="clearBuffer()" syntax="clearBuffer()"/>
      <record jsxtext="getBufferSize()" syntax="getBufferSize()"/>
      <record jsxtext="getRecords()" syntax="getRecords(intCount)"/>
      <record jsxtext="handle()" syntax="handle(objRecord)"/>
      <record jsxtext="setBufferSize()" syntax="setBufferSize(intBufferSize)"/>
    </record>
    <record jsxtext="Logger.Record">
      <record jsxtext="&amp;middot; new jsx3.util.Logger.Record()" syntax="new jsx3.util.Logger.Record(strMessage,arrParams,intLevel,strLogger,arrStack,objError)"/>
      <record jsxtext="getDate()" syntax="getDate()"/>
      <record jsxtext="getError()" syntax="getError()"/>
      <record jsxtext="getFunction()" syntax="getFunction()"/>
      <record jsxtext="getLevel()" syntax="getLevel()"/>
      <record jsxtext="getLoggerName()" syntax="getLoggerName()"/>
      <record jsxtext="getMessage()" syntax="getMessage()"/>
      <record jsxtext="getParameters()" syntax="getParameters()"/>
      <record jsxtext="getSerial()" syntax="getSerial()"/>
      <record jsxtext="getStack()" syntax="getStack()"/>
    </record>
    <record jsxtext="Logger">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DEBUG" syntax="jsx3.util.Logger.DEBUG"/>
        <record jsxtext="ERROR" syntax="jsx3.util.Logger.ERROR"/>
        <record jsxtext="FATAL" syntax="jsx3.util.Logger.FATAL"/>
        <record jsxtext="GLOBAL" syntax="jsx3.util.Logger.GLOBAL"/>
        <record jsxtext="INFO" syntax="jsx3.util.Logger.INFO"/>
        <record jsxtext="OFF" syntax="jsx3.util.Logger.OFF"/>
        <record jsxtext="TRACE" syntax="jsx3.util.Logger.TRACE"/>
        <record jsxtext="WARN" syntax="jsx3.util.Logger.WARN"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="getLogger()" syntax="jsx3.util.Logger.getLogger(strName)"/>
        <record jsxtext="levelAsString()" syntax="jsx3.util.Logger.levelAsString(intLevel)"/>
      </record>
      <record jsxtext="addHandler()" syntax="addHandler(objHandler)"/>
      <record jsxtext="debug()" syntax="debug(strMessage,strArgs)"/>
      <record jsxtext="error()" syntax="error(strMessage,strArgs)"/>
      <record jsxtext="fatal()" syntax="fatal(strMessage,strArgs)"/>
      <record jsxtext="getEffectiveLevel()" syntax="getEffectiveLevel()"/>
      <record jsxtext="getLevel()" syntax="getLevel()"/>
      <record jsxtext="getName()" syntax="getName()"/>
      <record jsxtext="getParent()" syntax="getParent()"/>
      <record jsxtext="getUseParentHandlers()" syntax="getUseParentHandlers()"/>
      <record jsxtext="info()" syntax="info(strMessage,strArgs)"/>
      <record jsxtext="isLoggable()" syntax="isLoggable(intLevel)"/>
      <record jsxtext="log()" syntax="log(intLevel,strMessage,strArgs)"/>
      <record jsxtext="logError()" syntax="logError(intLevel,strMessage,objError)"/>
      <record jsxtext="logStack()" syntax="logStack(intLevel,strMessage,intSkip)"/>
      <record jsxtext="removeHandler()" syntax="removeHandler(objHandler)"/>
      <record jsxtext="setLevel()" syntax="setLevel(intLevel)"/>
      <record jsxtext="setParent()" syntax="setParent(objParent)"/>
      <record jsxtext="setUseParentHandlers()" syntax="setUseParentHandlers(bUseParent)"/>
      <record jsxtext="trace()" syntax="trace(strMessage,strArgs)"/>
      <record jsxtext="warn()" syntax="warn(strMessage,strArgs)"/>
    </record>
    <record jsxtext="MessageFormat">
      <record jsxtext="&amp;middot; new jsx3.util.MessageFormat()" syntax="new jsx3.util.MessageFormat(strFormat,objLocale)"/>
      <record jsxtext="format()" syntax="format(args)"/>
      <record jsxtext="getLocale()" syntax="getLocale()"/>
      <record jsxtext="setLocale()" syntax="setLocale(objLocale)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="NumberFormat">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="CURRENCY" syntax="jsx3.util.NumberFormat.CURRENCY"/>
        <record jsxtext="INTEGER" syntax="jsx3.util.NumberFormat.INTEGER"/>
        <record jsxtext="NUMBER" syntax="jsx3.util.NumberFormat.NUMBER"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="getCurrencyInstance()" syntax="jsx3.util.NumberFormat.getCurrencyInstance(objLocale)"/>
        <record jsxtext="getInstance()" syntax="jsx3.util.NumberFormat.getInstance(intType,objLocale)"/>
        <record jsxtext="getIntegerInstance()" syntax="jsx3.util.NumberFormat.getIntegerInstance(objLocale)"/>
        <record jsxtext="getNumberInstance()" syntax="jsx3.util.NumberFormat.getNumberInstance(objLocale)"/>
        <record jsxtext="getPercentInstance()" syntax="jsx3.util.NumberFormat.getPercentInstance(objLocale)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.util.NumberFormat()" syntax="new jsx3.util.NumberFormat(strFormat,objLocale)"/>
      <record jsxtext="format()" syntax="format(number)"/>
      <record jsxtext="getLocale()" syntax="getLocale()"/>
      <record jsxtext="parse()" syntax="parse(s)"/>
      <record jsxtext="setLocale()" syntax="setLocale(objLocale)"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
  </record>
  <record jsxtext="jsx3.vector">
    <record jsxtext="&amp;middot; Static Methods">
      <record jsxtext="colorAsHtml()" syntax="jsx3.vector.colorAsHtml(color)"/>
      <record jsxtext="degreesToRadians()" syntax="jsx3.vector.degreesToRadians(degrees)"/>
      <record jsxtext="paintEventHandler()" syntax="jsx3.vector.paintEventHandler(obj,strEvtType,strMethod,objElm)"/>
      <record jsxtext="updateVector()" syntax="jsx3.vector.updateVector(objNew,objExisting)"/>
    </record>
    <record jsxtext="BaseShape">
      <record jsxtext="&amp;middot; new jsx3.vector.BaseShape()" syntax="new jsx3.vector.BaseShape(strTagName,left,top,width,height)"/>
      <record jsxtext="getFill()" syntax="getFill()"/>
      <record jsxtext="getStroke()" syntax="getStroke()"/>
      <record jsxtext="setFill()" syntax="setFill(fill)"/>
      <record jsxtext="setStroke()" syntax="setStroke(stroke)"/>
    </record>
    <record jsxtext="Block">
      <record jsxtext="createCanvas()" syntax="createCanvas()"/>
      <record jsxtext="createVector()" syntax="createVector()"/>
      <record jsxtext="getCanvas()" syntax="getCanvas()"/>
      <record jsxtext="paintEventHandler()" syntax="paintEventHandler(strEvtType,strMethod,objElm)"/>
      <record jsxtext="updateVector()" syntax="updateVector(objVector)"/>
    </record>
    <record jsxtext="Canvas">
      <record jsxtext="&amp;middot; new jsx3.vector.Canvas()" syntax="new jsx3.vector.Canvas(left,top,width,height)"/>
    </record>
    <record jsxtext="Fill">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="valueOf()" syntax="jsx3.vector.Fill.valueOf(v)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.vector.Fill()" syntax="new jsx3.vector.Fill(color,alpha)"/>
      <record jsxtext="getAlpha()" syntax="getAlpha()"/>
      <record jsxtext="getAlpha2()" syntax="getAlpha2()"/>
      <record jsxtext="getAngle()" syntax="getAngle()"/>
      <record jsxtext="getColor()" syntax="getColor()"/>
      <record jsxtext="getColor2()" syntax="getColor2()"/>
      <record jsxtext="getColor2Html()" syntax="getColor2Html()"/>
      <record jsxtext="getColorHtml()" syntax="getColorHtml()"/>
      <record jsxtext="getColors()" syntax="getColors()"/>
      <record jsxtext="getType()" syntax="getType()"/>
      <record jsxtext="setAlpha()" syntax="setAlpha(alpha)"/>
      <record jsxtext="setAlpha2()" syntax="setAlpha2(alpha2)"/>
      <record jsxtext="setAngle()" syntax="setAngle(angle)"/>
      <record jsxtext="setColor()" syntax="setColor(color)"/>
      <record jsxtext="setColor2()" syntax="setColor2(color2)"/>
      <record jsxtext="setColors()" syntax="setColors(colors)"/>
      <record jsxtext="setType()" syntax="setType(type)"/>
    </record>
    <record jsxtext="Group">
      <record jsxtext="&amp;middot; new jsx3.vector.Group()" syntax="new jsx3.vector.Group(left,top,width,height)"/>
    </record>
    <record jsxtext="Line">
      <record jsxtext="&amp;middot; new jsx3.vector.Line()" syntax="new jsx3.vector.Line(left,top,x1,y1,x2,y2)"/>
      <record jsxtext="getX1()" syntax="getX1()"/>
      <record jsxtext="getX2()" syntax="getX2()"/>
      <record jsxtext="getY1()" syntax="getY1()"/>
      <record jsxtext="getY2()" syntax="getY2()"/>
      <record jsxtext="setPoints()" syntax="setPoints(x1,y1,x2,y2)"/>
      <record jsxtext="setX1()" syntax="setX1(x1)"/>
      <record jsxtext="setX2()" syntax="setX2(x2)"/>
      <record jsxtext="setY1()" syntax="setY1(y1)"/>
      <record jsxtext="setY2()" syntax="setY2(y2)"/>
    </record>
    <record jsxtext="LineGroup">
      <record jsxtext="&amp;middot; new jsx3.vector.LineGroup()" syntax="new jsx3.vector.LineGroup(left,top,width,height)"/>
      <record jsxtext="addLine()" syntax="addLine(x1,y1,x2,y2)"/>
      <record jsxtext="addRelativeLine()" syntax="addRelativeLine(x1,y1,dx,dy)"/>
      <record jsxtext="clearLines()" syntax="clearLines()"/>
    </record>
    <record jsxtext="Oval">
      <record jsxtext="&amp;middot; new jsx3.vector.Oval()" syntax="new jsx3.vector.Oval(left,top,width,height)"/>
    </record>
    <record jsxtext="Polygon">
      <record jsxtext="&amp;middot; new jsx3.vector.Polygon()" syntax="new jsx3.vector.Polygon(left,top,points)"/>
      <record jsxtext="setPoints()" syntax="setPoints(points)"/>
      <record jsxtext="setPointsAsNumberArray()" syntax="setPointsAsNumberArray(points)"/>
      <record jsxtext="setPointsAsString()" syntax="setPointsAsString(points)"/>
    </record>
    <record jsxtext="Rectangle">
      <record jsxtext="&amp;middot; new jsx3.vector.Rectangle()" syntax="new jsx3.vector.Rectangle(left,top,width,height)"/>
      <record jsxtext="clipTo()" syntax="clipTo(l1,t1,w1,h1)"/>
      <record jsxtext="clipToBox()" syntax="clipToBox(obj)"/>
    </record>
    <record jsxtext="RectangleGroup">
      <record jsxtext="&amp;middot; new jsx3.vector.RectangleGroup()" syntax="new jsx3.vector.RectangleGroup(left,top,width,height)"/>
      <record jsxtext="addRectangle()" syntax="addRectangle(x1,y1,x2,y2)"/>
      <record jsxtext="addRelativeRectangle()" syntax="addRelativeRectangle(x1,y1,w,h)"/>
      <record jsxtext="clearRectangles()" syntax="clearRectangles()"/>
    </record>
    <record jsxtext="Shape">
      <record jsxtext="getPath()" syntax="getPath()"/>
      <record jsxtext="pathArcTo()" syntax="pathArcTo(cx,cy,rx,ry,x1,y1,x2,y2,bCW)"/>
      <record jsxtext="pathClose()" syntax="pathClose()"/>
      <record jsxtext="pathLineTo()" syntax="pathLineTo(x,y,bRel)"/>
      <record jsxtext="pathMoveTo()" syntax="pathMoveTo(x,y,bRel)"/>
      <record jsxtext="setPath()" syntax="setPath(path)"/>
    </record>
    <record jsxtext="Stroke">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="valueOf()" syntax="jsx3.vector.Stroke.valueOf(v)"/>
      </record>
      <record jsxtext="&amp;middot; new jsx3.vector.Stroke()" syntax="new jsx3.vector.Stroke(color,width,alpha)"/>
      <record jsxtext="getAlpha()" syntax="getAlpha()"/>
      <record jsxtext="getColor()" syntax="getColor()"/>
      <record jsxtext="getColorHtml()" syntax="getColorHtml()"/>
      <record jsxtext="getWidth()" syntax="getWidth()"/>
      <record jsxtext="setAlpha()" syntax="setAlpha(alpha)"/>
      <record jsxtext="setColor()" syntax="setColor(color)"/>
      <record jsxtext="setWidth()" syntax="setWidth(width)"/>
    </record>
    <record jsxtext="Tag">
      <record jsxtext="&amp;middot; new jsx3.vector.Tag()" syntax="new jsx3.vector.Tag(strTagName,left,top,width,height)"/>
      <record jsxtext="getRotation()" syntax="getRotation()"/>
      <record jsxtext="getToolTip()" syntax="getToolTip()"/>
      <record jsxtext="setRotation()" syntax="setRotation(rotation)"/>
      <record jsxtext="setToolTip()" syntax="setToolTip(title)"/>
    </record>
    <record jsxtext="TextLine">
      <record jsxtext="&amp;middot; new jsx3.vector.TextLine()" syntax="new jsx3.vector.TextLine(x1,y1,x2,y2,text)"/>
      <record jsxtext="getText()" syntax="getText()"/>
      <record jsxtext="setText()" syntax="setText(text)"/>
    </record>
  </record>
  <record jsxtext="jsx3.xml">
    <record jsxtext="CDF.Document">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="newDocument()" syntax="jsx3.xml.CDF.Document.newDocument()"/>
        <record jsxtext="wrap()" syntax="jsx3.xml.CDF.Document.wrap(objXML)"/>
      </record>
      <record jsxtext="getXML()" syntax="getXML()"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord(strRecordId,intAction)"/>
    </record>
    <record jsxtext="CDF">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="DELETE" syntax="jsx3.xml.CDF.DELETE"/>
        <record jsxtext="INSERT" syntax="jsx3.xml.CDF.INSERT"/>
        <record jsxtext="INSERTBEFORE" syntax="jsx3.xml.CDF.INSERTBEFORE"/>
        <record jsxtext="UPDATE" syntax="jsx3.xml.CDF.UPDATE"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="getKey()" syntax="jsx3.xml.CDF.getKey()"/>
        <record jsxtext="newDocument()" syntax="jsx3.xml.CDF.newDocument()"/>
      </record>
      <record jsxtext="adoptRecord()" syntax="adoptRecord(strSourceId,strRecordId,strParentRecordId,bRedraw)"/>
      <record jsxtext="adoptRecordBefore()" syntax="adoptRecordBefore(strSourceId,strRecordId,strSiblingRecordId,bRedraw)"/>
      <record jsxtext="convertProperties()" syntax="convertProperties(objProps,arrProps,bUnion)"/>
      <record jsxtext="deleteRecord()" syntax="deleteRecord(strRecordId,bRedraw)"/>
      <record jsxtext="deleteRecordProperty()" syntax="deleteRecordProperty(strRecordId,strPropName,bRedraw)"/>
      <record jsxtext="getRecord()" syntax="getRecord(strRecordId)"/>
      <record jsxtext="getRecordIds()" syntax="getRecordIds()"/>
      <record jsxtext="getRecordNode()" syntax="getRecordNode(strRecordId)"/>
      <record jsxtext="getSchema()" syntax="getSchema()"/>
      <record jsxtext="insertRecord()" syntax="insertRecord(objRecord,strParentRecordId,bRedraw)"/>
      <record jsxtext="insertRecordBefore()" syntax="insertRecordBefore(objRecord,strSiblingRecordId,bRedraw)"/>
      <record jsxtext="insertRecordNode()" syntax="insertRecordNode(objRecordNode,strParentRecordId,bRedraw)"/>
      <record jsxtext="insertRecordProperty()" syntax="insertRecordProperty(strRecordId,strPropName,strPropValue,bRedraw)"/>
      <record jsxtext="redrawRecord()" syntax="redrawRecord(strRecordId,intAction)"/>
      <record jsxtext="setSchema()" syntax="setSchema(objSchema)"/>
    </record>
    <record jsxtext="CDFSchema">
      <record jsxtext="getProp()" syntax="getProp(name)"/>
      <record jsxtext="getProps()" syntax="getProps()"/>
      <record jsxtext="setProp()" syntax="setProp(name,value)"/>
    </record>
    <record jsxtext="Cacheable">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="CLEANUPRESOURCES" syntax="jsx3.xml.Cacheable.CLEANUPRESOURCES"/>
        <record jsxtext="DEFAULTSTYLESHEET" syntax="jsx3.xml.Cacheable.DEFAULTSTYLESHEET"/>
        <record jsxtext="SHARERESOURCES" syntax="jsx3.xml.Cacheable.SHARERESOURCES"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="clearXmlData()" syntax="clearXmlData()"/>
      <record jsxtext="getShareResources()" syntax="getShareResources()"/>
      <record jsxtext="getXML()" syntax="getXML()"/>
      <record jsxtext="getXMLId()" syntax="getXMLId()"/>
      <record jsxtext="getXMLString()" syntax="getXMLString()"/>
      <record jsxtext="getXMLTransformers()" syntax="getXMLTransformers()"/>
      <record jsxtext="getXMLURL()" syntax="getXMLURL()"/>
      <record jsxtext="getXSL()" syntax="getXSL()"/>
      <record jsxtext="getXSLId()" syntax="getXSLId()"/>
      <record jsxtext="getXSLParams()" syntax="getXSLParams()"/>
      <record jsxtext="getXmlAsync()" syntax="getXmlAsync()"/>
      <record jsxtext="getXmlBind()" syntax="getXmlBind()"/>
      <record jsxtext="onXmlBinding()" syntax="onXmlBinding(objEvent)"/>
      <record jsxtext="removeXSLParam()" syntax="removeXSLParam(strName)"/>
      <record jsxtext="removeXSLParams()" syntax="removeXSLParams()"/>
      <record jsxtext="resetCacheData()" syntax="resetCacheData(objServer)"/>
      <record jsxtext="resetXmlCacheData()" syntax="resetXmlCacheData(objServer)"/>
      <record jsxtext="setShareResources()" syntax="setShareResources(intShare)"/>
      <record jsxtext="setSourceXML()" syntax="setSourceXML(objDoc,objCache,bNoCache)"/>
      <record jsxtext="setXMLId()" syntax="setXMLId(strXMLId)"/>
      <record jsxtext="setXMLString()" syntax="setXMLString(strXML)"/>
      <record jsxtext="setXMLTransformers()" syntax="setXMLTransformers(arrTrans)"/>
      <record jsxtext="setXMLURL()" syntax="setXMLURL(strXMLURL)"/>
      <record jsxtext="setXSLParam()" syntax="setXSLParam(strName,strValue)"/>
      <record jsxtext="setXmlAsync()" syntax="setXmlAsync(bAsync)"/>
      <record jsxtext="setXmlBind()" syntax="setXmlBind(bBind)"/>
    </record>
    <record jsxtext="Document">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="ON_ERROR" syntax="jsx3.xml.Document.ON_ERROR"/>
        <record jsxtext="ON_RESPONSE" syntax="jsx3.xml.Document.ON_RESPONSE"/>
        <record jsxtext="ON_TIMEOUT" syntax="jsx3.xml.Document.ON_TIMEOUT"/>
        <record jsxtext="SEARCHABLE_NAMESPACE" syntax="jsx3.xml.Document.SEARCHABLE_NAMESPACE"/>
        <record jsxtext="SEARCHABLE_PREFIX" syntax="jsx3.xml.Document.SEARCHABLE_PREFIX"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.xml.Document()" syntax="new jsx3.xml.Document(objDoc)"/>
      <record jsxtext="abort()" syntax="abort()"/>
      <record jsxtext="cloneDocument()" syntax="cloneDocument()"/>
      <record jsxtext="createDocumentElement()" syntax="createDocumentElement(strNodeName,strNSURI)"/>
      <record jsxtext="createNamespaceAxis()" syntax="createNamespaceAxis()"/>
      <record jsxtext="createProcessingInstruction()" syntax="createProcessingInstruction(strTarget,strData)"/>
      <record jsxtext="getAsync()" syntax="getAsync(strName)"/>
      <record jsxtext="getDeclaredNamespaces()" syntax="getDeclaredNamespaces(objMap)"/>
      <record jsxtext="getNativeDocument()" syntax="getNativeDocument()"/>
      <record jsxtext="getSelectionNamespaces()" syntax="getSelectionNamespaces(strName)"/>
      <record jsxtext="getSourceURL()" syntax="getSourceURL()"/>
      <record jsxtext="getXmlEncoding()" syntax="getXmlEncoding()"/>
      <record jsxtext="getXmlStandalone()" syntax="getXmlStandalone()"/>
      <record jsxtext="getXmlVersion()" syntax="getXmlVersion()"/>
      <record jsxtext="load()" syntax="load(strURL,intTimeout)"/>
      <record jsxtext="loadXML()" syntax="loadXML(strXML)"/>
      <record jsxtext="serialize()" syntax="serialize(strVersion,strEncoding,bStandalone)"/>
      <record jsxtext="setAsync()" syntax="setAsync(bAsync)"/>
      <record jsxtext="setSelectionNamespaces()" syntax="setSelectionNamespaces(declaration)"/>
    </record>
    <record jsxtext="DojoDataStore">
      <record jsxtext="&amp;middot; new jsx3.xml.DojoDataStore()" syntax="new jsx3.xml.DojoDataStore(store)"/>
    </record>
    <record jsxtext="Entity">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="TYPEATTRIBUTE" syntax="jsx3.xml.Entity.TYPEATTRIBUTE"/>
        <record jsxtext="TYPECDATA" syntax="jsx3.xml.Entity.TYPECDATA"/>
        <record jsxtext="TYPECOMMENT" syntax="jsx3.xml.Entity.TYPECOMMENT"/>
        <record jsxtext="TYPEELEMENT" syntax="jsx3.xml.Entity.TYPEELEMENT"/>
        <record jsxtext="TYPETEXT" syntax="jsx3.xml.Entity.TYPETEXT"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods"/>
      <record jsxtext="&amp;middot; new jsx3.xml.Entity()" syntax="new jsx3.xml.Entity(objEntity)"/>
      <record jsxtext="appendChild()" syntax="appendChild(objEntity)"/>
      <record jsxtext="cloneNode()" syntax="cloneNode(bDeep)"/>
      <record jsxtext="createNode()" syntax="createNode(intType,strNodeName,strNS)"/>
      <record jsxtext="equals()" syntax="equals(objEntity)"/>
      <record jsxtext="getAttribute()" syntax="getAttribute(strName)"/>
      <record jsxtext="getAttributeNames()" syntax="getAttributeNames()"/>
      <record jsxtext="getAttributeNode()" syntax="getAttributeNode(strName)"/>
      <record jsxtext="getAttributes()" syntax="getAttributes()"/>
      <record jsxtext="getBaseName()" syntax="getBaseName()"/>
      <record jsxtext="getChildIterator()" syntax="getChildIterator(bIncludeText)"/>
      <record jsxtext="getChildNodes()" syntax="getChildNodes(bIncludeText)"/>
      <record jsxtext="getError()" syntax="getError()"/>
      <record jsxtext="getFirstChild()" syntax="getFirstChild()"/>
      <record jsxtext="getLastChild()" syntax="getLastChild()"/>
      <record jsxtext="getNamespaceURI()" syntax="getNamespaceURI()"/>
      <record jsxtext="getNative()" syntax="getNative()"/>
      <record jsxtext="getNextSibling()" syntax="getNextSibling()"/>
      <record jsxtext="getNodeName()" syntax="getNodeName()"/>
      <record jsxtext="getNodeType()" syntax="getNodeType()"/>
      <record jsxtext="getOwnerDocument()" syntax="getOwnerDocument()"/>
      <record jsxtext="getParent()" syntax="getParent()"/>
      <record jsxtext="getPrefix()" syntax="getPrefix()"/>
      <record jsxtext="getPreviousSibling()" syntax="getPreviousSibling()"/>
      <record jsxtext="getRootNode()" syntax="getRootNode()"/>
      <record jsxtext="getValue()" syntax="getValue()"/>
      <record jsxtext="hasError()" syntax="hasError()"/>
      <record jsxtext="insertBefore()" syntax="insertBefore(objEntityNew,objEntityRef)"/>
      <record jsxtext="removeAttribute()" syntax="removeAttribute(strAttName)"/>
      <record jsxtext="removeAttributeNode()" syntax="removeAttributeNode(objAtt)"/>
      <record jsxtext="removeChild()" syntax="removeChild(objChildEntity)"/>
      <record jsxtext="removeChildren()" syntax="removeChildren()"/>
      <record jsxtext="replaceNode()" syntax="replaceNode(objEntityNew,objEntityOld)"/>
      <record jsxtext="selectNodeIterator()" syntax="selectNodeIterator(strQuery,strNS)"/>
      <record jsxtext="selectNodes()" syntax="selectNodes(strQuery,strNS)"/>
      <record jsxtext="selectSingleNode()" syntax="selectSingleNode(strQuery,strNS)"/>
      <record jsxtext="setAttribute()" syntax="setAttribute(strName,strValue)"/>
      <record jsxtext="setAttributeNode()" syntax="setAttributeNode(objAtt)"/>
      <record jsxtext="setValue()" syntax="setValue(strValue)"/>
      <record jsxtext="toString()" syntax="toString()"/>
      <record jsxtext="transformNode()" syntax="transformNode(objEntityFilter,objParams,bObject)"/>
    </record>
    <record jsxtext="Template">
      <record jsxtext="&amp;middot; new jsx3.xml.Template()" syntax="new jsx3.xml.Template(objXSL)"/>
      <record jsxtext="getError()" syntax="getError()"/>
      <record jsxtext="hasError()" syntax="hasError()"/>
      <record jsxtext="reset()" syntax="reset()"/>
      <record jsxtext="setParam()" syntax="setParam(strName,objValue)"/>
      <record jsxtext="setParams()" syntax="setParams(objParams)"/>
      <record jsxtext="transform()" syntax="transform(objXML,bObject)"/>
      <record jsxtext="transformToObject()" syntax="transformToObject(objXML)"/>
    </record>
    <record jsxtext="XslDocument">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="wrap()" syntax="jsx3.xml.XslDocument.wrap(objXML)"/>
      </record>
      <record jsxtext="reset()" syntax="reset()"/>
      <record jsxtext="setParam()" syntax="setParam(strName,objValue)"/>
      <record jsxtext="setParams()" syntax="setParams(objParams)"/>
      <record jsxtext="transform()" syntax="transform(objXML)"/>
      <record jsxtext="transformToObject()" syntax="transformToObject(objXML)"/>
    </record>
  </record>
  <record jsxtext="window">
    <record jsxtext="Array">
      <record jsxtext="&amp;middot; new Array()" syntax="new Array()"/>
      <record jsxtext="concat()" syntax="concat(array)"/>
      <record jsxtext="join()" syntax="join(separator)"/>
      <record jsxtext="pop()" syntax="pop()"/>
      <record jsxtext="push()" syntax="push(element)"/>
      <record jsxtext="reverse()" syntax="reverse()"/>
      <record jsxtext="shift()" syntax="shift()"/>
      <record jsxtext="slice()" syntax="slice(begin,end)"/>
      <record jsxtext="sort()" syntax="sort(compareFunction)"/>
      <record jsxtext="splice()" syntax="splice(index,howMany,element)"/>
      <record jsxtext="toString()" syntax="toString()"/>
      <record jsxtext="unshift()" syntax="unshift(element)"/>
    </record>
    <record jsxtext="Date">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="parse()" syntax="Date.parse()"/>
      </record>
      <record jsxtext="&amp;middot; new Date()" syntax="new Date()"/>
      <record jsxtext="getDate()" syntax="getDate()"/>
      <record jsxtext="getDay()" syntax="getDay()"/>
      <record jsxtext="getFullYear()" syntax="getFullYear()"/>
      <record jsxtext="getHours()" syntax="getHours()"/>
      <record jsxtext="getMilliseconds()" syntax="getMilliseconds()"/>
      <record jsxtext="getMinutes()" syntax="getMinutes()"/>
      <record jsxtext="getMonth()" syntax="getMonth()"/>
      <record jsxtext="getSeconds()" syntax="getSeconds()"/>
      <record jsxtext="getTime()" syntax="getTime()"/>
      <record jsxtext="getTimezoneOffset()" syntax="getTimezoneOffset()"/>
      <record jsxtext="getUTCDate()" syntax="getUTCDate()"/>
      <record jsxtext="getUTCDay()" syntax="getUTCDay()"/>
      <record jsxtext="getUTCFullYear()" syntax="getUTCFullYear()"/>
      <record jsxtext="getUTCHours()" syntax="getUTCHours()"/>
      <record jsxtext="getUTCMilliseconds()" syntax="getUTCMilliseconds()"/>
      <record jsxtext="getUTCMinutes()" syntax="getUTCMinutes()"/>
      <record jsxtext="getUTCMonth()" syntax="getUTCMonth()"/>
      <record jsxtext="getUTCSeconds()" syntax="getUTCSeconds()"/>
      <record jsxtext="getYear()" syntax="getYear()"/>
      <record jsxtext="setDate()" syntax="setDate()"/>
      <record jsxtext="setFullYear()" syntax="setFullYear()"/>
      <record jsxtext="setHours()" syntax="setHours()"/>
      <record jsxtext="setMilliseconds()" syntax="setMilliseconds()"/>
      <record jsxtext="setMinutes()" syntax="setMinutes()"/>
      <record jsxtext="setMonth()" syntax="setMonth()"/>
      <record jsxtext="setSeconds()" syntax="setSeconds()"/>
      <record jsxtext="setTime()" syntax="setTime()"/>
      <record jsxtext="setUTCDate()" syntax="setUTCDate()"/>
      <record jsxtext="setUTCFullYear()" syntax="setUTCFullYear()"/>
      <record jsxtext="setUTCHours()" syntax="setUTCHours()"/>
      <record jsxtext="setUTCMilliseconds()" syntax="setUTCMilliseconds()"/>
      <record jsxtext="setUTCMinutes()" syntax="setUTCMinutes()"/>
      <record jsxtext="setUTCMonth()" syntax="setUTCMonth()"/>
      <record jsxtext="setUTCSeconds()" syntax="setUTCSeconds()"/>
      <record jsxtext="toGMTString()" syntax="toGMTString()"/>
      <record jsxtext="toLocaleString()" syntax="toLocaleString()"/>
      <record jsxtext="toUTCString()" syntax="toUTCString()"/>
    </record>
    <record jsxtext="Function">
      <record jsxtext="&amp;middot; new Function()" syntax="new Function()"/>
      <record jsxtext="apply()" syntax="apply(thisArg,args)"/>
      <record jsxtext="call()" syntax="call(args)"/>
    </record>
    <record jsxtext="Math">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="E" syntax="Math.E"/>
        <record jsxtext="LN10" syntax="Math.LN10"/>
        <record jsxtext="LN2" syntax="Math.LN2"/>
        <record jsxtext="LOG10E" syntax="Math.LOG10E"/>
        <record jsxtext="LOG2E" syntax="Math.LOG2E"/>
        <record jsxtext="PI" syntax="Math.PI"/>
        <record jsxtext="SQRT1_2" syntax="Math.SQRT1_2"/>
        <record jsxtext="SQRT2" syntax="Math.SQRT2"/>
      </record>
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="abs()" syntax="Math.abs()"/>
        <record jsxtext="acos()" syntax="Math.acos()"/>
        <record jsxtext="asin()" syntax="Math.asin()"/>
        <record jsxtext="atan()" syntax="Math.atan()"/>
        <record jsxtext="atan2()" syntax="Math.atan2()"/>
        <record jsxtext="ceil()" syntax="Math.ceil()"/>
        <record jsxtext="cos()" syntax="Math.cos()"/>
        <record jsxtext="exp()" syntax="Math.exp()"/>
        <record jsxtext="floor()" syntax="Math.floor()"/>
        <record jsxtext="log()" syntax="Math.log()"/>
        <record jsxtext="max()" syntax="Math.max()"/>
        <record jsxtext="min()" syntax="Math.min()"/>
        <record jsxtext="pow()" syntax="Math.pow()"/>
        <record jsxtext="random()" syntax="Math.random()"/>
        <record jsxtext="round()" syntax="Math.round()"/>
        <record jsxtext="sin()" syntax="Math.sin()"/>
        <record jsxtext="sqrt()" syntax="Math.sqrt()"/>
        <record jsxtext="tan()" syntax="Math.tan()"/>
      </record>
    </record>
    <record jsxtext="Number">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="MAX_VALUE" syntax="Number.MAX_VALUE"/>
        <record jsxtext="MIN_VALUE" syntax="Number.MIN_VALUE"/>
        <record jsxtext="NEGATIVE_INFINITY" syntax="Number.NEGATIVE_INFINITY"/>
        <record jsxtext="NaN" syntax="Number.NaN"/>
        <record jsxtext="POSITIVE_INFINITY" syntax="Number.POSITIVE_INFINITY"/>
      </record>
      <record jsxtext="&amp;middot; new Number()" syntax="new Number()"/>
      <record jsxtext="toFixed()" syntax="toFixed()"/>
      <record jsxtext="toPrecision()" syntax="toPrecision()"/>
    </record>
    <record jsxtext="Object">
      <record jsxtext="&amp;middot; new Object()" syntax="new Object()"/>
      <record jsxtext="toString()" syntax="toString()"/>
    </record>
    <record jsxtext="RegExp">
      <record jsxtext="&amp;middot; Static Fields">
        <record jsxtext="$1" syntax="RegExp.$1"/>
        <record jsxtext="input" syntax="RegExp.input"/>
        <record jsxtext="lastMatch" syntax="RegExp.lastMatch"/>
        <record jsxtext="lastParen" syntax="RegExp.lastParen"/>
        <record jsxtext="leftContext" syntax="RegExp.leftContext"/>
        <record jsxtext="multiline" syntax="RegExp.multiline"/>
        <record jsxtext="rightContext" syntax="RegExp.rightContext"/>
      </record>
      <record jsxtext="&amp;middot; new RegExp()" syntax="new RegExp()"/>
      <record jsxtext="compile()" syntax="compile()"/>
      <record jsxtext="exec()" syntax="exec()"/>
      <record jsxtext="test()" syntax="test()"/>
    </record>
    <record jsxtext="String">
      <record jsxtext="&amp;middot; Static Methods">
        <record jsxtext="fromCharCode()" syntax="String.fromCharCode()"/>
      </record>
      <record jsxtext="&amp;middot; new String()" syntax="new String()"/>
      <record jsxtext="charAt()" syntax="charAt()"/>
      <record jsxtext="charCodeAt()" syntax="charCodeAt()"/>
      <record jsxtext="concat()" syntax="concat()"/>
      <record jsxtext="indexOf()" syntax="indexOf()"/>
      <record jsxtext="match()" syntax="match()"/>
      <record jsxtext="replace()" syntax="replace()"/>
      <record jsxtext="search()" syntax="search()"/>
      <record jsxtext="slice()" syntax="slice()"/>
      <record jsxtext="split()" syntax="split()"/>
      <record jsxtext="substring()" syntax="substring()"/>
      <record jsxtext="toLowerCase()" syntax="toLowerCase()"/>
      <record jsxtext="toUpperCase()" syntax="toUpperCase()"/>
    </record>
  </record>
</data>
